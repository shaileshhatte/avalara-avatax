{
	"swagger": "2.0",
	"info": {
		"version": "v2",
		"title": "AvaTax API",
		"description": "REST interface to Avalara's enterprise tax service, AvaTax.",
		"contact": {
			"name": "Avalara Developer Community",
			"url": "https://community.avalara.com"
		},
		"license": {
			"name": "Terms of Use",
			"url": "https://www.avalara.com/terms-of-use/"
		}
	},
	"paths": {
		"/api/v2/accounts": {
			"get": {
				"tags": ["Accounts"],
				"summary": "Retrieve all accounts",
				"description": "List all account objects that can be seen by the current user.\r\n            \r\nThis API lists all accounts you are allowed to see.  In general, most users will only be able to see their own account.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Subscriptions\r\n* Users\r\n            \r\nFor more information about filtering in REST, please see the documentation at http://developer.avalara.com/avatax/filtering-in-rest/ .\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "QueryAccounts",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of objects to fetch underneath this account.  Any object with a URL path underneath this account can be fetched by specifying its name.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* subscriptions, users",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[AccountModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Registrar"],
				"summary": "Create a new account",
				"description": "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar administrative users only.\r\n            \r\nCreate a single new account object.\r\nWhen creating an account object you may attach subscriptions and users as part of the 'Create' call.\n\n### Security Policies\n\n* This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateAccount",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The account you wish to create.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/AccountModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/AccountModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{id}/activate": {
			"post": {
				"tags": ["Accounts"],
				"summary": "Activate an account by accepting terms and conditions",
				"description": "Activate the account specified by the unique accountId number.\r\n            \r\nThis activation request can only be called by account administrators.  You must indicate\r\nthat you have read and accepted Avalara's terms and conditions to call this API.\r\n            \r\nOnce you have activated your account, use the `AccountResetLicenseKey` API to generate\r\na license key for your account.\r\n            \r\nIf you have not read or accepted the terms and conditions, this API call will return the\r\nunchanged account model.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "ActivateAccount",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the account to activate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The activation request",
						"required": false,
						"schema": {
							"$ref": "#/definitions/ActivateAccountModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{id}/audit": {
			"get": {
				"tags": ["Accounts"],
				"summary": "Retrieve audit history for an account.",
				"description": "Retrieve audit trace history for an account.\r\n            \r\nYour audit trace history contains a record of all API calls made against the AvaTax REST API that returned an error.   You can use this API to investigate\r\nproblems and see exactly what information was sent back and forth between your code and AvaTax.\r\n            \r\nWhen specifying a start and end datetime, please include a valid timezone indicator, such as the \"Z\" present in the examples for the start and end query parameters.\r\nYou can learn more about valid time zone designators at https://en.wikipedia.org/wiki/ISO_8601#Time_zone_designators.\r\n            \r\nThis API enforces limits to the amount of data retrieved. These limits are subject to change.\r\n            \r\n* You may request data from a maximum of a one-hour time period.\r\n* The amount of data and number of API calls returned by this API are limited and may be adjusted at any time.\r\n* Old records may be migrated out of immediately available storage.  To request older data, please contact your account manager.\r\n* New records must migrate to available storage before they can be retrieved.  You may need to wait a period of time before newly created records can be fetched.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "AuditAccount",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the account you wish to audit.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "start",
						"in": "query",
						"description": "The start datetime of audit history you with to retrieve, e.g. \"2018-06-08T17:00:00Z\". Defaults to the past 15 minutes.",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "end",
						"in": "query",
						"description": "The end datetime of audit history you with to retrieve, e.g. \"2018-06-08T17:15:00Z. Defaults to the current time. Maximum of an hour after the start time.",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32",
						"default": 10
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32",
						"default": 0
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[AuditModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{id}/configuration": {
			"get": {
				"tags": ["Accounts"],
				"summary": "Get configuration settings for this account",
				"description": "Retrieve a list of all configuration settings tied to this account.\r\n            \r\nConfiguration settings provide you with the ability to control features of your account and of your\r\ntax software.  The category names `TaxServiceConfig` and `AddressServiceConfig` are reserved for\r\nAvalara internal software configuration values; to store your own account-level settings, please\r\ncreate a new category name that begins with `X-`, for example, `X-MyCustomCategory`.\r\n            \r\nAccount settings are permanent settings that cannot be deleted.  You can set the value of an\r\naccount setting to null if desired.\r\n            \r\nAvalara-based account settings for `TaxServiceConfig` and `AddressServiceConfig` affect your account's\r\ntax calculation and address resolution, and should only be changed with care.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetAccountConfiguration",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/AccountConfigurationModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Accounts"],
				"summary": "Change configuration settings for this account",
				"description": "Update configuration settings tied to this account.\r\n            \r\nConfiguration settings provide you with the ability to control features of your account and of your\r\ntax software.  The category names `TaxServiceConfig` and `AddressServiceConfig` are reserved for\r\nAvalara internal software configuration values; to store your own account-level settings, please\r\ncreate a new category name that begins with `X-`, for example, `X-MyCustomCategory`.\r\n            \r\nAccount settings are permanent settings that cannot be deleted.  You can set the value of an\r\naccount setting to null if desired.\r\n            \r\nAvalara-based account settings for `TaxServiceConfig` and `AddressServiceConfig` affect your account's\r\ntax calculation and address resolution, and should only be changed with care.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "SetAccountConfiguration",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "models",
						"in": "body",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/AccountConfigurationModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/AccountConfigurationModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{id}/licensekey": {
			"post": {
				"tags": ["Accounts"],
				"summary": "Create license key for this account",
				"description": "Creates a new license key for this account.\r\n            \r\nTo create a license key for your account, you must specify the ID of the account and license key name.\r\n            \r\nThis API is only available to account administrators for the account in question, and may only be called after\r\nan account has been activated by reading and accepting Avalara's terms and conditions.  To activate your account\r\nplease log onto the AvaTax website or call the `ActivateAccount` API.\r\n            \r\nYou will reference this key using license key name. The existing license key will be using 'Default' as license key name.\r\nHence make sure that the license key name is unique per account considering the existing license key name 'Default'\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateLicenseKey",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "",
						"required": false,
						"schema": {
							"$ref": "#/definitions/AccountLicenseKeyModel"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the account you wish to update.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/LicenseKeyModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{id}/licensekey/{licensekeyname}": {
			"get": {
				"tags": ["Accounts"],
				"summary": "Retrieve license key by license key name",
				"description": "\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetLicenseKey",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the account to retrieve",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "licensekeyname",
						"in": "path",
						"description": "The ID of the account to retrieve",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountLicenseKeyModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Accounts"],
				"summary": "Delete license key for this account by license key name",
				"description": "Deletes the license key for this account using license key name.\r\n            \r\nTo delete a license key for your account, you must specify the accountID of the account and license key name.\r\n            \r\nThis API is only available to account administrators for the account in question.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteLicenseKey",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the account you wish to update.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "licensekeyname",
						"in": "path",
						"description": "The license key name you wish to update.",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{id}/licensekeys": {
			"get": {
				"tags": ["Accounts"],
				"summary": "Retrieve all license keys for this account",
				"description": "Gets list of all the license keys used by the account.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetLicenseKeys",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the account to retrieve",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/AccountLicenseKeyModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{id}/resetlicensekey": {
			"post": {
				"tags": ["Accounts"],
				"summary": "Reset this account's license key",
				"description": "Resets the existing license key for this account to a new key.\r\n            \r\nTo reset your account, you must specify the ID of the account you wish to reset and confirm the action.\r\n            \r\nThis API is only available to account administrators for the account in question, and may only be called after\r\nan account has been activated by reading and accepting Avalara's terms and conditions.  To activate your account\r\nplease log onto the AvaTax website or call the `ActivateAccount` API.\r\n            \r\nYou can only reset license with 'Default' license key name. \r\nResetting a license key cannot be undone.  Any previous license keys will immediately cease to work when a new key is created.\r\n            \r\nWhen you call this API, all account administrators for this account will receive an email with the newly updated license key.\r\nThe email will specify which user reset the license key and it will contain the new key to use to update your connectors.\r\nNote: The reset license key functionality will only be available for existing active license key i.e. when you reset license key for the account, the Default license key will be reset.The reset license key functionality is not available for newly created license keys i.e. license keys other than Default\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "AccountResetLicenseKey",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"description": "A request confirming that you wish to reset the license key of this account.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/ResetLicenseKeyModel"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the account you wish to update.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/LicenseKeyModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/addresses/resolve": {
			"get": {
				"tags": ["Addresses"],
				"summary": "Retrieve geolocation information for a specified address",
				"description": "Resolve an address against Avalara's address-validation system.  If the address can be resolved, this API\r\nprovides the latitude and longitude of the resolved location.  The value 'resolutionQuality' can be used\r\nto identify how closely this address can be located.  If the address cannot be clearly located, use the\r\n'messages' structure to learn more about problems with this address.\r\nThis is the same API as the POST /api/v2/addresses/resolve endpoint.\r\nBoth verbs are supported to provide for flexible implementation.\r\n            \r\nInorder to get any evaluation for an address please provide atleast one of the following fields/pairs:\r\n1. postal code\r\n2. line1 + city + region\r\n3. line1 + postal code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AutoAddress.\n",
				"operationId": "ResolveAddress",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "line1",
						"in": "query",
						"description": "Line 1",
						"required": false,
						"type": "string"
					},
					{
						"name": "line2",
						"in": "query",
						"description": "Line 2",
						"required": false,
						"type": "string"
					},
					{
						"name": "line3",
						"in": "query",
						"description": "Line 3",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "City",
						"required": false,
						"type": "string"
					},
					{
						"name": "region",
						"in": "query",
						"description": "State / Province / Region",
						"required": false,
						"type": "string"
					},
					{
						"name": "postalCode",
						"in": "query",
						"description": "Postal Code / Zip Code",
						"required": false,
						"type": "string"
					},
					{
						"name": "country",
						"in": "query",
						"description": "Two character ISO 3166 Country Code (see /api/v2/definitions/countries for a full list)",
						"required": false,
						"type": "string"
					},
					{
						"name": "textCase",
						"in": "query",
						"description": "selectable text case for address validation",
						"required": false,
						"type": "string",
						"enum": ["Upper", "Mixed"],
						"x-enum-metadata": {
							"name": "TextCase",
							"values": [
								{
									"name": "Upper",
									"value": 0
								},
								{
									"name": "Mixed",
									"value": 1
								}
							]
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AddressResolutionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Addresses"],
				"summary": "Retrieve geolocation information for a specified address",
				"description": "Resolve an address against Avalara's address-validation system.  If the address can be resolved, this API\r\nprovides the latitude and longitude of the resolved location.  The value 'resolutionQuality' can be used\r\nto identify how closely this address can be located.  If the address cannot be clearly located, use the\r\n'messages' structure to learn more about problems with this address.\r\nThis is the same API as the GET /api/v2/addresses/resolve endpoint.\r\nBoth verbs are supported to provide for flexible implementation.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AutoAddress.\n",
				"operationId": "ResolveAddressPost",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The address to resolve",
						"required": false,
						"schema": {
							"$ref": "#/definitions/AddressValidationInfo"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AddressResolutionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/advancedrules/accounts/{accountId}/companies/{companyId}/lookupFiles": {
			"get": {
				"tags": ["AdvancedRules"],
				"summary": "Get the lookup files for a company",
				"operationId": "GetCompanyLookupFiles",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The account ID for the company",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company for which to retrieve lookup files",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[AdvancedRuleLookupFileModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["AdvancedRules"],
				"summary": "Create a lookup file for a company",
				"operationId": "CreateCompanyLookupFile",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account for the company",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company for which the lookup file is to be created",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The lookup file you wish to create",
						"required": false,
						"schema": {
							"$ref": "#/definitions/AdvancedRuleLookupFileModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AdvancedRuleLookupFileModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/advancedrules/accounts/{accountId}/lookupFiles/{id}": {
			"get": {
				"tags": ["AdvancedRules"],
				"summary": "Get a lookup file for an accountId and companyLookupFileId",
				"operationId": "GetLookupFile",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account for the lookup file",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID/GUID of the company lookup file to return",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AdvancedRuleLookupFileModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["AdvancedRules"],
				"summary": "Update a lookup file",
				"operationId": "UpdateLookupFile",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account for the company the lookup file is for",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID/GUID of the company lookup file to be updated",
						"required": true,
						"type": "string"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The new values to update the lookup file",
						"required": false,
						"schema": {
							"$ref": "#/definitions/AdvancedRuleLookupFileModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AdvancedRuleLookupFileModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["AdvancedRules"],
				"summary": "Delete a lookup file",
				"operationId": "DeleteLookupFile",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account for the company the lookup file is for",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID/GUID for the company lookup file to be deleted",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/advancedrules/audits/accounts/{accountId}/from/{fromDate}/to/{toDate}": {
			"get": {
				"tags": ["AdvancedRules"],
				"summary": "Get audit records by account id and date range.",
				"operationId": "GetAuditRecords",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "fromDate",
						"in": "path",
						"description": "Date",
						"required": true,
						"type": "string"
					},
					{
						"name": "toDate",
						"in": "path",
						"description": "Date",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AdvancedRuleLookupFileModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/avafileforms": {
			"get": {
				"tags": ["AvaFileForms"],
				"summary": "Retrieve all AvaFileForms",
				"description": "Search for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CompanyUser, Compliance Root User, Compliance Temp User, ComplianceAdmin, ComplianceUser, FirmAdmin, FirmUser, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "QueryAvaFileForms",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* outletTypeId",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[AvaFileFormModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["AvaFileForms"],
				"summary": "Create a new AvaFileForm",
				"description": "Create one or more AvaFileForms\r\nA 'AvaFileForm' represents a form supported by our returns team\n\n### Security Policies\n\n* This API requires the user role Compliance Root User.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "CreateAvaFileForms",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The AvaFileForm you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/AvaFileFormModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/AvaFileFormModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/avafileforms/{id}": {
			"get": {
				"tags": ["AvaFileForms"],
				"summary": "Retrieve a single AvaFileForm",
				"description": "Get the AvaFileForm object identified by this URL.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CompanyUser, Compliance Root User, Compliance Temp User, ComplianceAdmin, ComplianceUser, FirmAdmin, FirmUser, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "GetAvaFileForm",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this AvaFileForm",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AvaFileFormModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["AvaFileForms"],
				"summary": "Update a AvaFileForm",
				"description": "All data from the existing object will be replaced with data in the object you PUT.\r\nTo set a field's value to null, you may either set its value to null or omit that field from the object you post.\n\n### Security Policies\n\n* This API requires the user role Compliance Root User.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "UpdateAvaFileForm",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the AvaFileForm you wish to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The AvaFileForm model you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/AvaFileFormModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AvaFileFormModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["AvaFileForms"],
				"summary": "Delete a single AvaFileForm",
				"description": "Marks the existing AvaFileForm object at this URL as deleted.\n\n### Security Policies\n\n* This API requires one of the following user roles: Compliance Root User, ComplianceUser, FirmAdmin.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "DeleteAvaFileForm",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the AvaFileForm you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/batches": {
			"get": {
				"tags": ["Batches"],
				"summary": "Retrieve all batches",
				"description": "Get multiple batch objects across all companies.\r\n            \r\nA batch object is a large collection of API calls stored in a compact file.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter;\r\nfull documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate results using the `$top`, `$skip`, and `$orderby` parameters.\r\n            \r\nWhen a batch is created, it is added to the AvaTax Batch Queue and will be\r\nprocessed as quickly as possible in the order it was received. To check the\r\nstatus of a batch, fetch the batch and retrieve the results of the batch\r\noperation.\r\n            \r\nBecause the batch system processes with a degree of concurrency, and\r\nbecause of batch sizes in the queue vary, AvaTax API is unable to accurately\r\npredict when a batch will complete. If high performance processing is\r\nrequired, please use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "QueryBatches",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* files",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[BatchModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/batches": {
			"get": {
				"tags": ["Batches"],
				"summary": "Retrieve all batches for this company",
				"description": "List all batch objects attached to the specified company.\r\n            \r\nA batch object is a large collection of API calls stored in a compact file.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter;\r\nfull documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate results using the `$top`, `$skip`, and `$orderby` parameters.\r\n            \r\nUse [GetBatch](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Batches/GetBatch/)\r\nto retrieve the results, or check the status, of an individual batch.\r\n            \r\nWhen a batch is created, it is added to the AvaTax Batch Queue and will be\r\nprocessed as quickly as possible in the order it was received. To check the\r\nstatus of a batch, fetch the batch and retrieve the results of the batch\r\noperation.\r\n            \r\nBecause the batch system processes with a degree of concurrency, and\r\nbecause of batch sizes in the queue vary, AvaTax API is unable to accurately\r\npredict when a batch will complete. If high performance processing is\r\nrequired, please use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListBatchesByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns these batches",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* files",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[BatchModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Batches"],
				"summary": "Create a new batch",
				"description": "Create one or more new batch objects attached to this company.\r\n            \r\nEach batch object may have one or more file objects (currently only one file is supported).\r\n            \r\nWhen a batch is created, it is added to the AvaTax Batch Queue and will be\r\nprocessed as quickly as possible in the order it was received. To check the\r\nstatus of a batch, fetch the batch and retrieve the results of the batch\r\noperation.\r\n            \r\nBecause the batch system processes with a degree of concurrency, and\r\nbecause of batch sizes in the queue vary, AvaTax API is unable to accurately\r\npredict when a batch will complete. If high performance processing is\r\nrequired, please use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\r\n            \r\nThe maximum content length of the request body is limited to 28.6 MB. If this limit\r\nis exceeded, a 404 Not Found status will be returned (possibly with a CORS error if\r\nthe API is called from a browser). In this situation, please split the request into\r\nsmaller batches.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin.\n",
				"operationId": "CreateBatches",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The batch you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/BatchModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this batch.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/BatchModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/batches/{batchId}/files/{id}/attachment": {
			"get": {
				"tags": ["Batches"],
				"summary": "Download a single batch file",
				"description": "Download a single batch file identified by this URL.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "DownloadBatch",
				"consumes": [],
				"produces": ["application/json", "application/octet-stream"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this batch",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "batchId",
						"in": "path",
						"description": "The ID of the batch object",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this batch file object",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"format": "byte",
							"type": "file"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/batches/{id}": {
			"get": {
				"tags": ["Batches"],
				"summary": "Retrieve a single batch",
				"description": "Get the batch object identified by this URL. A batch object is a large\r\ncollection of API calls stored in a compact file.\r\n            \r\nUse this endpoint to retrieve the results or check the status of a batch.\r\n            \r\nWhen a batch is created, it is added to the AvaTax Batch Queue and will be\r\nprocessed as quickly as possible in the order it was received. To check the\r\nstatus of a batch, fetch the batch and retrieve the results of the batch\r\noperation.\r\n            \r\nBecause the batch system processes with a degree of concurrency, and\r\nbecause of batch sizes in the queue vary, AvaTax API is unable to accurately\r\npredict when a batch will complete. If high performance processing is\r\nrequired, please use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetBatch",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this batch",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this batch",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BatchModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Batches"],
				"summary": "Delete a single batch",
				"description": "Marks the batch identified by this URL as deleted.\r\n            \r\nIf you attempt to delete a batch that is being processed, you will receive an error message.\r\nDeleting a batch does not delete any transactions that were created by importing the batch.\r\n            \r\nBecause the batch system processes with a degree of concurrency, and\r\nbecause of batch sizes in the queue vary, AvaTax API is unable to accurately\r\npredict when a batch will complete. If high performance processing is\r\nrequired, please use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\n\n### Security Policies\n\n* This API requires one of the following user roles: CSPAdmin, CSPTester, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin.\n",
				"operationId": "DeleteBatch",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this batch.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the batch to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/batches/{id}/cancel": {
			"post": {
				"tags": ["Batches"],
				"summary": "Cancel an in progress batch",
				"description": "Marks the in progress batch identified by this URL as cancelled.\r\n            \r\nOnly JSON batches can be cancelled. If you attempt to cancel a file batch, you will receive an error message.\r\n            \r\nOnly in progress batches can be cancelled.  If you attempt to cancel a batch that its status is not Waiting or Processing, you will receive an error message.\r\nCancelling an in progress batch does not delete any transactions that were created before the cancellation.\r\n            \r\nBecause the batch system processes with a degree of concurrency, and\r\nbecause of batch sizes in the queue vary, AvaTax API is unable to accurately\r\npredict when a batch will complete. If high performance processing is\r\nrequired, please use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin.\n",
				"operationId": "CancelBatch",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this batch.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the batch to cancel.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BatchModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/batches/transactions": {
			"post": {
				"tags": ["Batches"],
				"summary": "Create a new transaction batch",
				"description": "Create a new transaction batch objects attached to this company.\r\n            \r\nWhen a transaction batch is created, it is added to the AvaTax Batch v2 Queue and will be\r\nprocessed as quickly as possible in the order it was received. To check the\r\nstatus of a batch, fetch the batch and retrieve the results of the batch\r\noperation.\r\n            \r\nBecause the batch system processes with a degree of concurrency, and\r\nbecause of batch sizes in the queue vary, AvaTax API is unable to accurately\r\npredict when a batch will complete. If high performance processing is\r\nrequired, please use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\r\n            \r\nThe maximum content length of the request body is limited to 28.6 MB. If this limit\r\nis exceeded, a 404 Not Found status will be returned (possibly with a CORS error if\r\nthe API is called from a browser). In this situation, please split the request into\r\nsmaller batches.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin.\n",
				"operationId": "CreateTransactionBatch",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The transaction batch you wish to create.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CreateTransactionBatchRequestModel"
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this batch.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateTransactionBatchResponseModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certexpressinvites": {
			"get": {
				"tags": ["CertExpressInvites"],
				"summary": "List CertExpress invitations",
				"description": "Retrieve CertExpress invitations sent by this company.\r\n            \r\nA CertExpression invitation allows a customer to follow a helpful step-by-step guide to provide information\r\nabout their certificates.  This step by step guide allows the customer to complete and upload the full\r\ncertificate in a convenient, friendly web browser experience.  When the customer completes their certificates,\r\nthey will automatically be recorded to your company and linked to the customer record.\r\n            \r\nThe [CertExpress website](https://app.certexpress.com/home) is available for customers to use at any time.\r\nUsing CertExpress with this API will ensure that your certificates are automatically linked correctly into\r\nyour company so that they can be used for tax exemptions.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "ListCertExpressInvitations",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that issued this invitation",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "OPTIONAL: A comma separated list of special fetch options.\r\n            \r\n             No options are defined at this time.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* companyId, customer, coverLetter, exposureZones, exemptReasons, requestLink",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CertExpressInvitationModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/{customerCode}/certexpressinvites": {
			"post": {
				"tags": ["CertExpressInvites"],
				"summary": "Create a CertExpress invitation",
				"description": "Creates an invitation for a customer to self-report certificates using the CertExpress website.\r\n            \r\nThis invitation is delivered by your choice of method, or you can present a hyperlink to the user\r\ndirectly in your connector.  Your customer will be redirected to https://app.certexpress.com/ where\r\nthey can follow a step-by-step guide to enter information about their exemption certificates.  The\r\ncertificates entered will be recorded and automatically linked to their customer record.\r\n            \r\nThe [CertExpress website](https://app.certexpress.com/home) is available for customers to use at any time.\r\nUsing CertExpress with this API will ensure that your certificates are automatically linked correctly into\r\nyour company so that they can be used for tax exemptions.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "CreateCertExpressInvitation",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that will record certificates",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The number of the customer where the request is sent to",
						"required": true,
						"type": "string"
					},
					{
						"name": "models",
						"in": "body",
						"description": "the requests to send out to customers",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CreateCertExpressInvitationModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CertExpressInvitationStatusModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/{customerCode}/certexpressinvites/{id}": {
			"get": {
				"tags": ["CertExpressInvites"],
				"summary": "Retrieve a single CertExpress invitation",
				"description": "Retrieve an existing CertExpress invitation sent to a customer.\r\n            \r\nA CertExpression invitation allows a customer to follow a helpful step-by-step guide to provide information\r\nabout their certificates.  This step by step guide allows the customer to complete and upload the full\r\ncertificate in a convenient, friendly web browser experience.  When the customer completes their certificates,\r\nthey will automatically be recorded to your company and linked to the customer record.\r\n            \r\nThe [CertExpress website](https://app.certexpress.com/home) is available for customers to use at any time.\r\nUsing CertExpress with this API will ensure that your certificates are automatically linked correctly into\r\nyour company so that they can be used for tax exemptions.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "GetCertExpressInvitation",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that issued this invitation",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The number of the customer where the request is sent to",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this CertExpress invitation",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "OPTIONAL: A comma separated list of special fetch options.  No options are defined at this time.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CertExpressInvitationModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certificates": {
			"get": {
				"tags": ["Certificates"],
				"summary": "List all certificates for a company",
				"description": "List all certificates recorded by a company\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nYou can use the `$include` parameter to fetch the following additional objects for expansion:\r\n            \r\n* customers - Retrieves the list of customers linked to the certificate.\r\n* po_numbers - Retrieves all PO numbers tied to the certificate.\r\n* attributes - Retrieves all attributes applied to the certificate.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "QueryCertificates",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID number of the company to search",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "OPTIONAL: A comma separated list of special fetch options.  You can specify one or more of the following:\r\n            \r\n             * customers - Retrieves the list of customers linked to the certificate.\r\n             * po_numbers - Retrieves all PO numbers tied to the certificate.\r\n             * attributes - Retrieves all attributes applied to the certificate.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* exemptionNumber, status, ecmsId, ecmsStatus, pdf, pages",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CertificateModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Certificates"],
				"summary": "Create certificates for this company",
				"description": "Record one or more certificates document for this company.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nWhen you create a certificate, it will be processed by Avalara and will become available for use in\r\ncalculating tax exemptions when processing is complete.  For a certificate to be used in calculating exemptions,\r\nit must have the following:\r\n            \r\n* An exposure zone indicating where the certificate is valid\r\n* A link to the customer that is allowed to use this certificate\r\n* Your tax transaction must contain the correct customer code\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\r\n            \r\nIf the users specified in the certificates do not exist, the API will create the user and link them to the certificate\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "CreateCertificates",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID number of the company recording this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "models",
						"in": "body",
						"description": "Certificates to be created",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CertificateModel"
							}
						}
					},
					{
						"name": "$preValidatedExemptionReason",
						"in": "query",
						"description": "If set to true, the certificate will bypass the human verification process.",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CertificateModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certificates/{id}": {
			"get": {
				"tags": ["Certificates"],
				"summary": "Retrieve a single certificate",
				"description": "Get the current certificate identified by this URL.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nYou can use the `$include` parameter to fetch the following additional objects for expansion:\r\n            \r\n* customers - Retrieves the list of customers linked to the certificate.\r\n* po_numbers - Retrieves all PO numbers tied to the certificate.\r\n* attributes - Retrieves all attributes applied to the certificate.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "GetCertificate",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "OPTIONAL: A comma separated list of special fetch options.  You can specify one or more of the following:\r\n            \r\n             * customers - Retrieves the list of customers linked to the certificate.\r\n             * po_numbers - Retrieves all PO numbers tied to the certificate.\r\n             * attributes - Retrieves all attributes applied to the certificate.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CertificateModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Certificates"],
				"summary": "Update a single certificate",
				"description": "Replace the certificate identified by this URL with a new one.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "UpdateCertificate",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The new certificate object that will replace the existing one",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CertificateModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CertificateModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Certificates"],
				"summary": "Revoke and delete a certificate",
				"description": "Revoke the certificate identified by this URL, then delete it.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nRevoked certificates can no longer be used.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "DeleteCertificate",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certificates/{id}/attachment": {
			"get": {
				"tags": ["Certificates"],
				"summary": "Download an image for this certificate",
				"description": "Download an image or PDF file for this certificate.\r\n            \r\nThis API can be used to download either a single-page preview of the certificate or a full PDF document.\r\nTo retrieve a preview image, set the `$type` parameter to `Jpeg` and the `$page` parameter to `1`.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "DownloadCertificateImage",
				"consumes": [],
				"produces": ["application/octet-stream", "application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$page",
						"in": "query",
						"description": "If you choose `$type`=`Jpeg`, you must specify which page number to retrieve.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$type",
						"in": "query",
						"description": "The data format in which to retrieve the certificate image",
						"required": false,
						"type": "string",
						"default": "Pdf",
						"enum": ["Pdf", "Jpeg"],
						"x-enum-metadata": {
							"name": "CertificatePreviewType",
							"values": [
								{
									"name": "Pdf",
									"value": 1
								},
								{
									"name": "Jpeg",
									"value": 2
								}
							]
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"format": "byte",
							"type": "file"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Certificates"],
				"summary": "Upload an image or PDF attachment for this certificate",
				"description": "Upload an image or PDF attachment for this certificate.\r\n            \r\nImage attachments can be of the format `PDF`, `JPEG`, `TIFF`, or `PNG`.  To upload a multi-page image, please\r\nuse the `PDF` data type.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "UploadCertificateImage",
				"consumes": ["multipart/form-data"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "file",
						"in": "formData",
						"description": "The exemption certificate file you wanted to upload. Accepted formats are: PDF, JPEG, TIFF, PNG.",
						"required": true,
						"type": "file"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certificates/{id}/attributes": {
			"get": {
				"tags": ["Certificates"],
				"summary": "List all attributes applied to this certificate",
				"description": "Retrieve the list of attributes that are linked to this certificate.\r\n            \r\nA certificate may have multiple attributes that control its behavior.  You may link or unlink attributes to a\r\ncertificate at any time.  The full list of defined attributes may be found using [ListCertificateAttributes](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListCertificateAttributes/) API.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "ListAttributesForCertificate",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CertificateAttributeModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certificates/{id}/attributes/link": {
			"post": {
				"tags": ["Certificates"],
				"summary": "Link attributes to a certificate",
				"description": "Link one or many attributes to a certificate.\r\n            \r\nA certificate may have multiple attributes that control its behavior.  You may link or unlink attributes to a\r\ncertificate at any time.  The full list of defined attributes may be found using `ListCertificateAttributes`.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "LinkAttributesToCertificate",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "attributes",
						"in": "body",
						"description": "The list of attributes to link to this certificate.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CertificateAttributeModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CertificateAttributeModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certificates/{id}/attributes/unlink": {
			"post": {
				"tags": ["Certificates"],
				"summary": "Unlink attributes from a certificate",
				"description": "Unlink one or many attributes from a certificate.\r\n            \r\nA certificate may have multiple attributes that control its behavior.  You may link or unlink attributes to a\r\ncertificate at any time.  The full list of defined attributes may be found using `ListCertificateAttributes`.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "UnlinkAttributesFromCertificate",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "attributes",
						"in": "body",
						"description": "The list of attributes to unlink from this certificate.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CertificateAttributeModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CertificateAttributeModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certificates/{id}/customers": {
			"get": {
				"tags": ["Certificates"],
				"summary": "List customers linked to this certificate",
				"description": "List all customers linked to this certificate.\r\n            \r\nCustomers must be linked to a certificate in order to make use of its tax exemption features.  You\r\ncan link or unlink customers to a certificate at any time.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "ListCustomersForCertificate",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "OPTIONAL: A comma separated list of special fetch options.\r\n             No options are currently available when fetching customers.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CustomerModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certificates/{id}/customers/link": {
			"post": {
				"tags": ["Certificates"],
				"summary": "Link customers to a certificate",
				"description": "Link one or more customers to an existing certificate.\r\n            \r\nCustomers and certificates must be linked before a customer can make use of a certificate to obtain\r\na tax exemption in AvaTax.  Since some certificates may cover more than one business entity, a certificate\r\ncan be connected to multiple customer records using the `LinkCustomersToCertificate` API.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "LinkCustomersToCertificate",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customers",
						"in": "body",
						"description": "The list of customers needed be added to the Certificate for exemption",
						"required": false,
						"schema": {
							"$ref": "#/definitions/LinkCustomersModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CustomerModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certificates/{id}/customers/unlink": {
			"post": {
				"tags": ["Certificates"],
				"summary": "Unlink customers from a certificate",
				"description": "Unlinks one or more customers from a certificate.\r\n            \r\nUnlinking a certificate from a customer will prevent the certificate from being used to generate\r\ntax exemptions for the customer in the future.  If any previous transactions for this customer had\r\nused this linked certificate, those transactions will be unchanged and will still have a link to the\r\nexemption certificate in question.\r\n            \r\nA certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "UnlinkCustomersFromCertificate",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this certificate",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customers",
						"in": "body",
						"description": "The list of customers to unlink from this certificate",
						"required": false,
						"schema": {
							"$ref": "#/definitions/LinkCustomersModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CustomerModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/certificates/setup": {
			"get": {
				"tags": ["Certificates"],
				"summary": "Check a company's exemption certificate status.",
				"description": "Checks whether this company is configured to use exemption certificates in AvaTax.\r\n            \r\nExemption certificates are tracked through a different auditable data store than the one that\r\nholds AvaTax transactions.  To use the AvaTax exemption certificate document store, please call\r\n`GetCertificateSetup` to see if your company is configured to use the exemption certificate\r\ndocument store.  To request setup, please call `RequestCertificateSetup` and your company will\r\nbe configured with data storage in the auditable certificate system.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "GetCertificateSetup",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company ID to check",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProvisionStatusModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Certificates"],
				"summary": "Request setup of exemption certificates for this company.",
				"description": "Requests the setup of exemption certificates for this company.\r\n            \r\nExemption certificates are tracked through a different auditable data store than the one that\r\nholds AvaTax transactions.  To use the AvaTax exemption certificate document store, please call\r\n`GetCertificateSetup` to see if your company is configured to use the exemption certificate\r\ndocument store.  To request setup, please call `RequestCertificateSetup` and your company will\r\nbe configured with data storage in the auditable certificate system.\r\n            \r\nThis API will return the current status of exemption certificate setup for this company.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "RequestCertificateSetup",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ProvisionStatusModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies": {
			"get": {
				"tags": ["Companies"],
				"summary": "Retrieve all companies",
				"description": "Get multiple company objects.\r\n            \r\nA `company` represents a single corporation or individual that is registered to handle transactional taxes.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Contacts\r\n* Items\r\n* Locations\r\n* Nexus\r\n* Settings\r\n* TaxCodes\r\n* TaxRules\r\n* UPC\r\n* Parameters\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "QueryCompanies",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of objects to fetch underneath this company.  Any object with a URL path underneath this company can be fetched by specifying its name.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* IsFein, contacts, items, locations, nexus, settings, taxCodes, taxRules, upcs, nonReportingChildCompanies, exemptCerts, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CompanyModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Companies"],
				"summary": "Create new companies",
				"description": "Create one or more new company objects.\r\nA 'company' represents a single corporation or individual that is registered to handle transactional taxes.\r\nYou may attach nested data objects such as contacts, locations, and nexus with this CREATE call, and those objects will be created with the company.\r\n            \r\nNOTE: Please do not use these blacklisted characters in company name and code: ';', '\\', '|'.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateCompanies",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "Either a single company object or an array of companies to create",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/funding/configuration": {
			"get": {
				"tags": ["Companies"],
				"summary": "Check the funding configuration of a company",
				"description": "This API is available by invitation only.\r\nRequires a subscription to Avalara Managed Returns or SST Certified Service Provider.\r\nReturns the funding configuration of the requested company.\r\n.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "FundingConfigurationByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique identifier of the company",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FundingConfigurationModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/funding/configurations": {
			"get": {
				"tags": ["Companies"],
				"summary": "Check the funding configuration of a company",
				"description": "This API is available by invitation only.\r\nRequires a subscription to Avalara Managed Returns or SST Certified Service Provider.\r\nReturns the funding configuration of the requested company.\r\n.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "FundingConfigurationsByCompanyAndCurrency",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique identifier of the company",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "currency",
						"in": "query",
						"description": "The currency of the funding.  USD and CAD are the only valid currencies",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/FundingConfigurationModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/parameters": {
			"get": {
				"tags": ["Companies"],
				"summary": "Retrieve parameters for a company",
				"description": "Retrieve all parameters of a company.\r\n            \r\nSome companies can be taxed and reported differently depending on the properties of the company, such as IsPrimaryAddress. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a company will be used by default in tax calculation but will not show on the transaction line referencing the company.\r\n            \r\nA company location parameter specified on a transaction line will override a company parameter if they share the same parameter name.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListCompanyParameterDetails",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* name, unit",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CompanyParameterDetailModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Companies"],
				"summary": "Add parameters to a company.",
				"description": "Add parameters to a company.\r\n            \r\nSome companies can be taxed and reported differently depending on the properties of the company, such as IsPrimaryAddress. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a company will be used by default in tax calculation but will not show on the transaction line referencing the company.\r\n            \r\nA company location parameter specified on a transaction line will override a company parameter if they share the same parameter name.\r\n            \r\nTo see available parameters for this company, call `/api/v2/definitions/parameters?$filter=attributeType eq Company`\r\n            \r\nSome parameters are only available for use if you have subscribed to specific AvaTax services. To see which parameters you are able to use, add the query parameter \"$showSubscribed=true\" to the parameter definition call above.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateCompanyParameters",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The company parameters you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyParameterDetailModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this company parameter.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyParameterDetailModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/parameters/{id}": {
			"get": {
				"tags": ["Companies"],
				"summary": "Retrieve a single company parameter",
				"description": "Retrieves a single parameter of a company.\r\n            \r\nSome companies can be taxed and reported differently depending on the properties of the company, such as IsPrimaryAddress. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a company will be used by default in tax calculation but will not show on the transaction line referencing the company.\r\n            \r\nA company location parameter specified on a transaction line will override a company parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetCompanyParameterDetail",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CompanyParameterDetailModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Companies"],
				"summary": "Update a company parameter",
				"description": "Update a parameter of a company.\r\n            \r\nSome companies can be taxed and reported differently depending on the properties of the company, such as IsPrimaryAddress. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a company will be used by default in tax calculation but will not show on the transaction line referencing the company.\r\n            \r\nA company location parameter specified on a transaction line will override a company parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateCompanyParameterDetail",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The company parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The company parameter object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CompanyParameterDetailModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CompanyParameterDetailModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Companies"],
				"summary": "Delete a single company parameter",
				"description": "Delete a parameter of a company.\r\nSome companies can be taxed and reported differently depending on the properties of the company, such as IsPrimaryAddress. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a company will be used by default in tax calculation but will not show on the transaction line referencing the company.\r\n            \r\nA company location parameter specified on a transaction line will override a company parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteCompanyParameter",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{id}": {
			"get": {
				"tags": ["Companies"],
				"summary": "Retrieve a single company",
				"description": "Get the company object identified by this URL.\r\nA 'company' represents a single corporation or individual that is registered to handle transactional taxes.\r\nYou may specify one or more of the following values in the '$include' parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n * Contacts\r\n * Items\r\n * Locations\r\n * Nexus\r\n * Settings\r\n * TaxCodes\r\n * TaxRules\r\n * UPC\r\n * Parameters\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the company to retrieve.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "OPTIONAL: A comma separated list of special fetch options.\r\n            \r\n              * Child objects - Specify one or more of the following to retrieve objects related to each company: \"Contacts\", \"FilingCalendars\", \"Items\", \"Locations\", \"Nexus\", \"TaxCodes\", \"NonReportingChildren\" or \"TaxRules\".\r\n              * Deleted objects - Specify \"FetchDeleted\" to retrieve information about previously deleted objects.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CompanyModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Companies"],
				"summary": "Update a single company",
				"description": "Replace the existing company object at this URL with an updated object.\r\n            \r\nA `CompanyModel` represents a single corporation or individual that is registered to handle transactional taxes.\r\nAll data from the existing object will be replaced with data in the object you PUT.\r\n            \r\nWhen calling `UpdateCompany`, you are permitted to update the company itself.  Updates to the nested objects\r\nsuch as contacts, locations, or settings are not permitted.  To update the nested objects\r\n            \r\nTo set a field's value to `null`, you may either set its value to `null` or omit that field from the object you PUT.\r\n            \r\nNOTE: Please do not use these blacklisted characters in company name and code: ';', '\\', '|'.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateCompany",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The company object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CompanyModel"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the company you wish to update.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CompanyModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Companies"],
				"summary": "Delete a single company",
				"description": "Deleting a company will delete all child companies, and all users attached to this company.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the company you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{id}/certify": {
			"get": {
				"tags": ["Companies"],
				"summary": "Checks whether the integration being used to set up this company and run transactions onto this company is compliant to all requirements.",
				"description": "Examines the most recent 100 transactions or data from the last month when verifying transaction-related integrations.\r\nFor partners who write integrations against AvaTax for many clients, this API is a way to do a quick self testing to verify whether the\r\nwritten integrations for a company are sufficient enough to be delivered to the respective customers to start using it.\r\n            \r\nThis API provides messages specific enough (through predefined checks) to guide the partner on what integrations are still missing from the company to get fully certified.\r\nThe API makes the following checks to conclude if the company is NOT fully certified:\r\n1. Any past month items contains generic tax code of P0000000.\r\n2. All the companies on the requesting account are test companies.\r\n3. No Voided/Cancelled documents in the past 30 days.\r\n4. There are less than 2 committed documents.\r\n5. Any documentCode is a generic GUID string.\r\n6. Any customerCode on document is a generic GUID string.\r\n7. No document has more than 1 documentLine.\r\n8. All of the documents have missing exemptionNo, customerUsageType, taxDateOverride or negative amount.\r\n9. Any document quantity is a negative number.\r\n10. Any document have repeated lines.\r\n11. No document has shipping charge.\r\n12. All documents have same ItemCodes, descriptions and taxCodes.\r\n13. Less than 2 addresses used across all documents.\r\n14. Whether locationCode was used in documents.\r\n15. Account with AvaGlobal subscription and no documents have VATBuyerId.\r\n16. Any document has currencyCode not being USD for accounts with AvaGlobal subscription.\r\n17. All documents have countryCode used for accounts with AvaGlobal subscription.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "CertifyIntegration",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the company to check if its integration is certified.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{id}/configuration": {
			"get": {
				"tags": ["Companies"],
				"summary": "Get configuration settings for this company",
				"description": "Retrieve a list of all configuration settings tied to this company.\r\n            \r\nConfiguration settings provide you with the ability to control features of your account and of your\r\ntax software.  The category name `AvaCertServiceConfig` is reserved for\r\nAvalara internal software configuration values; to store your own company-level settings, please\r\ncreate a new category name that begins with `X-`, for example, `X-MyCustomCategory`.\r\n            \r\nCompany settings are permanent settings that cannot be deleted.  You can set the value of a\r\ncompany setting to null if desired and if the particular setting supports it.\r\n            \r\nAvalara-based company settings for `AvaCertServiceConfig` affect your company's exemption certificate\r\nprocessing, and should be changed with care.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetCompanyConfiguration",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyConfigurationModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Companies"],
				"summary": "Change configuration settings for this company",
				"description": "Update configuration settings tied to this company.\r\n            \r\nConfiguration settings provide you with the ability to control features of your account and of your\r\ntax software.  The category names `AvaCertServiceConfig` is reserved for\r\nAvalara internal software configuration values; to store your own company-level settings, please\r\ncreate a new category name that begins with `X-`, for example, `X-MyCustomCategory`.\r\n            \r\nCompany settings are permanent settings that cannot be deleted.  You can set the value of a\r\ncompany setting to null if desired and if the particular setting supports it.\r\n            \r\nAvalara-based company settings for `AvaCertServiceConfig` affect your company's exemption certificate\r\nprocessing, and should be changed with care.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "SetCompanyConfiguration",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "models",
						"in": "body",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyConfigurationModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyConfigurationModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{id}/filingstatus": {
			"get": {
				"tags": ["Companies"],
				"summary": "Get this company's filing status",
				"description": "Retrieve the current filing status of this company.\r\n            \r\nFor customers using Avalara's Managed Returns Service, each company within their account can request\r\nfor Avalara to file tax returns on their behalf.  Avalara compliance team members will review all\r\nrequested filing calendars prior to beginning filing tax returns on behalf of this company.\r\n            \r\nA company's filing status can be one of the following values:\r\n            \r\n* `NoReporting` - This company is not configured to report tax returns; instead, it reports through a parent company.\r\n* `NotYetFiling` - This company has not yet begun filing tax returns through Avalara's Managed Returns Service.\r\n* `FilingRequested` - The company has requested to begin filing tax returns, but Avalara's compliance team has not yet begun filing.\r\n* `FirstFiling` - The company has recently filing tax returns and is in a new status.\r\n* `Active` - The company is currently active and is filing tax returns via Avalara Managed Returns.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetFilingStatus",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"enum": [
								"NoReporting",
								"NotYetFiling",
								"FilingRequested",
								"FirstFiling",
								"Active",
								"NotConfiguredForCompliance"
							],
							"type": "string"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Companies"],
				"summary": "Change the filing status of this company",
				"description": "Changes the current filing status of this company.\r\n            \r\nFor customers using Avalara's Managed Returns Service, each company within their account can request\r\nfor Avalara to file tax returns on their behalf.  Avalara compliance team members will review all\r\nrequested filing calendars prior to beginning filing tax returns on behalf of this company.\r\n            \r\nThe following changes may be requested through this API:\r\n            \r\n* If a company is in `NotYetFiling` status, the customer may request this be changed to `FilingRequested`.\r\n* Avalara compliance team members may change a company from `FilingRequested` to `FirstFiling`.\r\n* Avalara compliance team members may change a company from `FirstFiling` to `Active`.\r\n            \r\nAll other status changes must be requested through the Avalara customer support team.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ChangeFilingStatus",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "model",
						"in": "body",
						"required": false,
						"schema": {
							"$ref": "#/definitions/FilingStatusChangeModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"enum": [
								"NoReporting",
								"NotYetFiling",
								"FilingRequested",
								"FirstFiling",
								"Active",
								"NotConfiguredForCompliance"
							],
							"type": "string"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{id}/funding": {
			"get": {
				"tags": ["Companies"],
				"summary": "Check managed returns funding status for a company",
				"description": "This API is available by invitation only.\r\nRequires a subscription to Avalara Managed Returns or SST Certified Service Provider.\r\nReturns a list of funding setup requests and their current status.\r\nEach object in the result is a request that was made to setup or adjust funding status for this company.\n\n### Security Policies\n\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListFundingRequestsByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The unique identifier of the company",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/FundingStatusModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{id}/funding/setup": {
			"post": {
				"tags": ["Companies"],
				"summary": "Request managed returns funding setup for a company",
				"description": "This API is available by invitation only.\r\nCompanies that use the Avalara Managed Returns or the SST Certified Service Provider services are\r\nrequired to setup their funding configuration before Avalara can begin filing tax returns on their\r\nbehalf.\r\nFunding configuration for each company is set up by submitting a funding setup request, which can\r\nbe sent either via email or via an embedded HTML widget.\r\nWhen the funding configuration is submitted to Avalara, it will be reviewed by treasury team members\r\nbefore approval.\r\nThis API records that an ambedded HTML funding setup widget was activated.\r\nThis API requires a subscription to Avalara Managed Returns or SST Certified Service Provider.\n\n### Security Policies\n\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "CreateFundingRequest",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The unique identifier of the company",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The funding initialization request",
						"required": false,
						"schema": {
							"$ref": "#/definitions/FundingInitiateModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FundingStatusModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/initialize": {
			"post": {
				"tags": ["Companies"],
				"summary": "Quick setup for a company with a single physical address",
				"description": "Shortcut to quickly setup a single-physical-location company with critical information and activate it.\r\nThis API provides quick and simple company setup functionality and does the following things:\r\n            \r\n* Create a company object with its own tax profile\r\n* Add a key contact person for the company\r\n* Set up one physical location for the main office\r\n* Declare nexus in all taxing jurisdictions for that main office address\r\n* Activate the company\r\n            \r\nThis API only provides a limited subset of functionality compared to the 'Create Company' API call.\r\nIf you need additional features or options not present in this 'Quick Setup' API call, please use the full 'Create Company' call instead.\r\nPlease allow 1 minute before making transactions using the company.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CompanyInitialize",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "Information about the company you wish to create.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CompanyInitializationModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CompanyModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/mrs": {
			"get": {
				"tags": ["Companies"],
				"summary": "Retrieve a list of MRS Companies with account",
				"description": "This API is available by invitation only.\r\n            \r\nGet a list of companies with an active MRS service.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListMrsCompanies",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[MrsCompanyModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/transactions/tag": {
			"put": {
				"tags": ["Compliance"],
				"summary": "API to modify the reference fields at the document and the line level.",
				"operationId": "TagTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "model",
						"in": "body",
						"description": "",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/TransactionReferenceFieldModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TransactionModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/contacts": {
			"get": {
				"tags": ["Contacts"],
				"summary": "Retrieve contacts for this company",
				"description": "List all contact objects assigned to this company.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListContactsByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns these contacts",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ContactModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Contacts"],
				"summary": "Create a new contact",
				"description": "Create one or more new contact objects.\r\nA 'contact' is a person associated with a company who is designated to handle certain responsibilities of\r\na tax collecting and filing entity.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateContacts",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "contacts",
						"in": "body",
						"description": "The contacts you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContactModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this contact.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContactModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/contacts/{id}": {
			"get": {
				"tags": ["Contacts"],
				"summary": "Retrieve a single contact",
				"description": "Get the contact object identified by this URL.\r\nA 'contact' is a person associated with a company who is designated to handle certain responsibilities of\r\na tax collecting and filing entity.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetContact",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company for this contact",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this contact",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ContactModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Contacts"],
				"summary": "Update a single contact",
				"description": "Replace the existing contact object at this URL with an updated object.\r\nA 'contact' is a person associated with a company who is designated to handle certain responsibilities of\r\na tax collecting and filing entity.\r\nAll data from the existing object will be replaced with data in the object you PUT.\r\nTo set a field's value to null, you may either set its value to null or omit that field from the object you post.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateContact",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "contact",
						"in": "body",
						"description": "The contact you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/ContactModel"
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that this contact belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the contact you wish to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ContactModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Contacts"],
				"summary": "Delete a single contact",
				"description": "Mark the existing contact object at this URL as deleted.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteContact",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this contact.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the contact you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/contacts": {
			"get": {
				"tags": ["Contacts"],
				"summary": "Retrieve all contacts",
				"description": "Get multiple contact objects across all companies.\r\nA 'contact' is a person associated with a company who is designated to handle certain responsibilities of\r\na tax collecting and filing entity.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "QueryContacts",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ContactModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers": {
			"get": {
				"tags": ["Customers"],
				"summary": "List all customers for this company",
				"description": "List all customers recorded by this company matching the specified criteria.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this `customer` object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nYou can use the `$include` parameter to fetch the following additional objects for expansion:\r\n            \r\n* Certificates - Fetch a list of certificates linked to this customer.\r\n* attributes - Retrieves all attributes applied to the customer.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "QueryCustomers",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "OPTIONAL - You can specify the value `certificates` to fetch information about certificates linked to the customer.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* shipTos",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CustomerModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Customers"],
				"summary": "Create customers for this company",
				"description": "Create one or more customers for this company.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this `customer` object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nA nested object such as CustomFields could be specified and created along with the customer object. To fetch the\r\nnested object, please call 'GetCustomer' API with appropriate $include parameters.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "CreateCustomers",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "models",
						"in": "body",
						"description": "The list of customer objects to be created",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CustomerModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CustomerModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/{customerCode}": {
			"get": {
				"tags": ["Customers"],
				"summary": "Retrieve a single customer",
				"description": "Retrieve the customer identified by this URL.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this customer object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nYou can use the `$include` parameter to fetch the following additional objects for expansion:\r\n            \r\n* Certificates - Fetch a list of certificates linked to this customer.\r\n* CustomFields - Fetch a list of custom fields associated to this customer.\r\n* attributes - Retrieves all attributes applied to the customer.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "GetCustomer",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The unique code representing this customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specify optional additional objects to include in this fetch request",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Customers"],
				"summary": "Update a single customer",
				"description": "Replace the customer object at this URL with a new record.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this `customer` object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "UpdateCustomer",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The unique code representing this customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The new customer model that will replace the existing record at this URL",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CustomerModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Customers"],
				"summary": "Delete a customer record",
				"description": "Deletes the customer object referenced by this URL.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this `customer` object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "DeleteCustomer",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The unique code representing this customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/{customerCode}/attributes": {
			"get": {
				"tags": ["Customers"],
				"summary": "Retrieve a customer's attributes",
				"description": "Retrieve the attributes linked to the customer identified by this URL.\r\n            \r\nA customer may have multiple attributes that control its behavior.  You may link or unlink attributes to a\r\ncustomer at any time.  The full list of defined attributes may be found using `QueryCompanyCustomerAttributes` API.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this customer object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "ListAttributesForCustomer",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded the provided customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The unique code representing the current customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CustomerAttributeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/{customerCode}/attributes/link": {
			"put": {
				"tags": ["Customers"],
				"summary": "Link attributes to a customer",
				"description": "Link one or many attributes to a customer.\r\n            \r\nA customer may have multiple attributes that control its behavior.  You may link or unlink attributes to a\r\ncustomer at any time.  The full list of defined attributes may be found using `QueryCompanyCustomerAttributes` API.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this customer object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "LinkAttributesToCustomer",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded the provided customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The unique code representing the current customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "attributes",
						"in": "body",
						"description": "The list of attributes to link to the customer.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CustomerAttributeModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CustomerAttributeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/{customerCode}/attributes/unlink": {
			"put": {
				"tags": ["Customers"],
				"summary": "Unlink attributes from a customer",
				"description": "Unlink one or many attributes from a customer.\r\n            \r\nA customer may have multiple attributes that control its behavior.  You may link or unlink attributes to a\r\ncustomer at any time.  The full list of defined attributes may be found using `QueryCompanyCustomerAttributes` API.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this customer object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "UnlinkAttributesFromCustomer",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded the customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The unique code representing the current customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "attributes",
						"in": "body",
						"description": "The list of attributes to unlink from the customer.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CustomerAttributeModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CustomerAttributeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/{customerCode}/certificates": {
			"get": {
				"tags": ["Customers"],
				"summary": "List certificates linked to a customer",
				"description": "List all certificates linked to a customer.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this `customer` object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "ListCertificatesForCustomer",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The unique code representing this customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "OPTIONAL: A comma separated list of special fetch options.  You can specify one or more of the following:\r\n            \r\n             * customers - Retrieves the list of customers linked to the certificate.\r\n             * po_numbers - Retrieves all PO numbers tied to the certificate.\r\n             * attributes - Retrieves all attributes applied to the certificate.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* exemptionNumber, status, ecmsId, ecmsStatus, pdf, pages",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CertificateModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/{customerCode}/certificates/{country}/{region}": {
			"get": {
				"tags": ["Customers"],
				"summary": "List valid certificates for a location",
				"description": "List valid certificates linked to a customer in a particular country and region.\r\n            \r\nThis API is intended to help identify whether a customer has already provided a certificate that\r\napplies to a particular country and region.  This API is intended to help you remind a customer\r\nwhen they have or have not provided copies of their exemption certificates to you during the sales\r\norder process.\r\n            \r\nIf a customer does not have a certificate on file and they wish to provide one, you should send the customer\r\na CertExpress invitation link so that the customer can upload proof of their exemption certificate.  Please\r\nsee the `CreateCertExpressInvitation` API to create an invitation link for this customer.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "ListValidCertificatesForCustomer",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The unique code representing this customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "country",
						"in": "path",
						"description": "Search for certificates matching this country.  Uses the ISO 3166 two character country code.",
						"required": true,
						"type": "string"
					},
					{
						"name": "region",
						"in": "path",
						"description": "Search for certificates matching this region.  Uses the ISO 3166 two or three character state, region, or province code.",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					},
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ExemptionStatusModel"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/{customerCode}/certificates/link": {
			"post": {
				"tags": ["Customers"],
				"summary": "Link certificates to a customer",
				"description": "Link one or more certificates to a customer.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this `customer` object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "LinkCertificatesToCustomer",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The unique code representing this customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "certificates",
						"in": "body",
						"description": "The list of certificates to link to this customer",
						"required": false,
						"schema": {
							"$ref": "#/definitions/LinkCertificatesModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CertificateModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/{customerCode}/certificates/unlink": {
			"post": {
				"tags": ["Customers"],
				"summary": "Unlink certificates from a customer",
				"description": "Remove one or more certificates to a customer.\r\n            \r\nA customer object defines information about a person or business that purchases products from your\r\ncompany.  When you create a tax transaction in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search for this `customerCode` value and\r\nidentify any certificates linked to this `customer` object.  If any certificate applies to the transaction,\r\nAvaTax will record the appropriate elements of the transaction as exempt and link it to the `certificate`.\r\n            \r\nUsing exemption certificates endpoints requires setup of an auditable document storage for each company that will use certificates.\r\nCompanies that do not have this storage system set up will receive the error `CertCaptureNotConfiguredError` when they call exemption\r\ncertificate related APIs.  To check if this company is set up, call `GetCertificateSetup`.  To request setup of the auditable document\r\nstorage for this company, call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "UnlinkCertificatesFromCustomer",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that recorded this customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "customerCode",
						"in": "path",
						"description": "The unique code representing this customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "certificates",
						"in": "body",
						"description": "The list of certificates to link to this customer",
						"required": false,
						"schema": {
							"$ref": "#/definitions/LinkCertificatesModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CertificateModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/customers/billto/{code}/shipto/link": {
			"post": {
				"tags": ["Customers"],
				"summary": "Link two customer records together",
				"description": "Links a Ship-To customer record with a Bill-To customer record.\r\n            \r\nCustomer records represent businesses or individuals who can provide exemption certificates.  Some customers\r\nmay have certificates that are linked to their shipping address or their billing address.  To group these\r\ncustomer records together, you may link multiple bill-to and ship-to addresses together to represent a single\r\nentity that has multiple different addresses of different kinds.\r\n            \r\nIn general, a customer will have only one primary billing address and multiple ship-to addresses, representing\r\nall of the different locations where they receive goods.  To facilitate this type of customer, you can send in\r\none bill-to customer code and multiple ship-to customer codes in a single API call.\r\n            \r\nNote that you can only link a ship-to customer record to a bill-to customer record.  You may not link two customers\r\nof the same kind together.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "LinkShipToCustomersToBillCustomer",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company defining customers.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "code",
						"in": "path",
						"description": "The code of the bill-to customer to link.",
						"required": true,
						"type": "string"
					},
					{
						"name": "shipToCustomers",
						"in": "body",
						"description": "A list of information about ship-to customers to link to this bill-to customer.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/LinkCustomersModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CustomerModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/datasources": {
			"get": {
				"tags": ["DataSources"],
				"summary": "Retrieve all datasources for this company",
				"description": "Gets multiple datasource objects for a given company.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "ListDataSources",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The id of the company you wish to retrieve the datasources.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* isEnabled, isSynced, isAuthorized, name, externalState",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[DataSourceModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["DataSources"],
				"summary": "Create and store new datasources for the respective companies.",
				"description": "Create one or more datasource objects.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "CreateDataSources",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The id of the company you which to create the datasources",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "models",
						"in": "body",
						"description": "",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/DataSourceModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/DataSourceModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/datasources/{id}": {
			"get": {
				"tags": ["DataSources"],
				"summary": "Get data source by data source id",
				"description": "Retrieve the data source by its unique ID number.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "GetDataSourceById",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "data source id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/DataSourceModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["DataSources"],
				"summary": "Update a datasource identified by id for a company",
				"description": "Updates a datasource for a company.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "UpdateDataSource",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The id of the company the datasource belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The id of the datasource you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "model",
						"in": "body",
						"description": "",
						"required": false,
						"schema": {
							"$ref": "#/definitions/DataSourceModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/DataSourceModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["DataSources"],
				"summary": "Delete a datasource by datasource id for a company.",
				"description": "Marks the existing datasource for a company as deleted.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "DeleteDataSource",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The id of the company the datasource belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The id of the datasource you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/datasources": {
			"get": {
				"tags": ["DataSources"],
				"summary": "Retrieve all datasources",
				"description": "Get multiple datasource objects across all companies.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "QueryDataSources",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* isEnabled, isSynced, isAuthorized, name, externalState",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[DataSourceModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/avafileforms": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of the AvaFile Forms available",
				"description": "This API is deprecated.\r\n            \r\nPlease use the ListTaxForms API.\r\n            \r\nReturns the full list of Avalara-supported AvaFile Forms\r\nThis API is intended to be useful to identify all the different AvaFile Forms",
				"operationId": "ListAvaFileForms",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* outletTypeId",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[AvaFileFormModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/certificateattributes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List certificate attributes used by a company",
				"description": "List the certificate attributes defined by a company either specified by the user or the user's default company.\r\n            \r\nA certificate may have multiple attributes that control its behavior.  You may apply or remove attributes to a\r\ncertificate at any time.\r\n            \r\nIf you see the 'CertCaptureNotConfiguredError', please use CheckProvision and RequestProvision endpoints to\r\ncheck and provision account.",
				"operationId": "ListCertificateAttributes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyid",
						"in": "query",
						"description": "Id of the company the user wish to fetch the certificates' attributes from. If not specified the API will use user's default company.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CertificateAttributeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/certificateexemptreasons": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List the certificate exempt reasons defined by a company",
				"description": "List the certificate exempt reasons defined by a company.\r\n            \r\nAn exemption reason defines why a certificate allows a customer to be exempt\r\nfor purposes of tax calculation.\r\n            \r\nIf you see the 'CertCaptureNotConfiguredError', please use CheckProvision and RequestProvision endpoints to\r\ncheck and provision account.",
				"operationId": "ListCertificateExemptReasons",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ExemptionReasonModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/certificateexposurezones": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List certificate exposure zones used by a company",
				"description": "List the certificate exposure zones defined by a company.\r\n            \r\nAn exposure zone is a location where a certificate can be valid.  Exposure zones may indicate a taxing\r\nauthority or other legal entity to which a certificate may apply.\r\n            \r\nIf you see the 'CertCaptureNotConfiguredError', please use CheckProvision and RequestProvision endpoints to\r\ncheck and provision account.",
				"operationId": "ListCertificateExposureZones",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* id, companyId, name, tag, description, created, modified, region, country",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ExposureZoneModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/communications/transactiontypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of communications transactiontypes",
				"description": "Returns full list of communications transaction types which\r\nare accepted in communication tax calculation requests.",
				"operationId": "ListCommunicationsTransactionTypes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CommunicationsTransactionTypeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/communications/transactiontypes/{id}/servicetypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of communications service types",
				"description": "Returns full list of service types for a given transaction type ID.",
				"operationId": "ListCommunicationsServiceTypes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The transaction type ID to examine",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* requiredParameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CommunicationsTSPairModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/communications/tspairs": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of communications transaction/service type pairs",
				"description": "Returns full list of communications transaction/service type pairs which\r\nare accepted in communication tax calculation requests.",
				"operationId": "ListCommunicationsTSPairs",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* requiredParameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CommunicationsTSPairModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/countries": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all ISO 3166 countries",
				"description": "Returns a list of all ISO 3166 country codes, and their US English friendly names.\r\nThis API is intended to be useful when presenting a dropdown box in your website to allow customers to select a country for\r\na shipping address.",
				"operationId": "ListCountries",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* alpha3Code, isEuropeanUnion, localizedNames, addressesRequireRegion",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[IsoCountryModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/countries/{country}/ratetypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of rate types for each country",
				"description": "Returns the full list of Avalara-supported rate type file types\r\nThis API is intended to be useful to identify all the different rate types.",
				"operationId": "ListRateTypesByCountry",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "country",
						"in": "path",
						"description": "The country to examine for rate types",
						"required": true,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[RateTypeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/countries/{country}/regions": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all ISO 3166 regions for a country",
				"description": "Returns a list of all ISO 3166 region codes for a specific country code, and their US English friendly names.\r\nThis API is intended to be useful when presenting a dropdown box in your website to allow customers to select a region\r\nwithin the country for a shipping addresses.",
				"operationId": "ListRegionsByCountry",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "country",
						"in": "path",
						"description": "The country of which you want to fetch ISO 3166 regions",
						"required": true,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* localizedNames",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[IsoRegionModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/coverletters": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List certificate exposure zones used by a company",
				"description": "List available cover letters that can be used when sending invitation to use CertExpress to upload certificates.\r\n            \r\nThe CoverLetter model represents a message sent along with an invitation to use CertExpress to\r\nupload certificates.  An invitation allows customers to use CertExpress to upload their exemption\r\ncertificates directly; this cover letter explains why the invitation was sent.\r\n            \r\nIf you see the 'CertCaptureNotConfiguredError', please use CheckProvision and RequestProvision endpoints to\r\ncheck and provision account.",
				"operationId": "ListCoverLetters",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* id, companyId, subject, description, createdDate, modifiedDate, pageCount, templateFilename, version",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CoverLetterModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/crossborder/{country}/{hsCode}": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Lists the next level of HS Codes given a destination country and HS Code prefix.",
				"description": "Retrieves a list of HS Codes that are the children of the prefix for the given destination country, if\r\nadditional children are available.\r\n            \r\nHS Code is interchangeable with \"tariff code\" and definitions are generally unique to a destination country.\r\nAn HS Code describes an item and its eligibility/rate for tariffs. HS Codes are organized by\r\nSection/Chapter/Heading/Subheading/Classification.\r\n            \r\nThis API is intended to be useful to identify the correct HS Code to use for your item.\n\n### Security Policies\n\n* This API depends on the following active services<br />*Required* (all):  AvaTaxGlobal.\n",
				"operationId": "ListCrossBorderCodes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "country",
						"in": "path",
						"description": "The name or code of the destination country.",
						"required": true,
						"type": "string"
					},
					{
						"name": "hsCode",
						"in": "path",
						"description": "The Section or partial HS Code for which you would like to view the next level of HS Code detail, if more detail is available.",
						"required": true,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* hsCodeSource, system, destinationCountry, isDecisionNode, zeroPaddingCount, isSystemDefined, isTaxable, effDate, endDate, hsCodeSourceLength",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[HsCodeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/crossborder/{country}/{hsCode}/hierarchy": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Lists all parents of an HS Code.",
				"description": "Retrieves the specified HS code and all of its parents, reflecting all sections, chapters, headings, and subheadings\r\n            \r\na list of HS Codes that are the parents and information branches of the HS Code for the given\r\ndestination country, if lower detail is available.\r\n            \r\nThis API will include information branches if applicable. These do not have HS Codes and cannot be referenced,\r\nbut can contain information relevant to deciding the correct HS Code.\r\n            \r\nThis API is intended to be useful to review the descriptive hierarchy of an HS Code, which can be particularly helpful\r\nwhen HS Codes can have multiple levels of generic descriptions.\n\n### Security Policies\n\n* This API depends on the following active services<br />*Required* (all):  AvaTaxGlobal.\n",
				"operationId": "GetCrossBorderCode",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "country",
						"in": "path",
						"description": "The name or code of the destination country.",
						"required": true,
						"type": "string"
					},
					{
						"name": "hsCode",
						"in": "path",
						"description": "The partial or full HS Code for which you would like to view all of the parents.",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[HsCodeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/crossborder/sections": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List top level HS Code Sections.",
				"description": "Returns the full list of top level HS Code Sections. Sections are the broadest level of detail for\r\nclassifying tariff codes and the items to which they apply. HS Codes are organized\r\nby Section/Chapter/Heading/Subheading/Classification.\r\n            \r\nThis API is intended to be useful to identify the top level Sections for\r\nfurther LandedCost HS Code lookups.\n\n### Security Policies\n\n* This API depends on the following active services<br />*Required* (all):  AvaTaxGlobal.\n",
				"operationId": "ListCrossBorderSections",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[HsCodeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/currencies": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all ISO 4217 currencies supported by AvaTax.",
				"description": "Lists all ISO 4217 currencies supported by AvaTax.\r\n            \r\nThis API produces a list of currency codes that can be used when calling AvaTax.  The values from this API can be used to fill out the\r\n`currencyCode` field in a `CreateTransactionModel`.",
				"operationId": "ListCurrencies",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CurrencyModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/entityusecodes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported entity use codes",
				"description": "Returns the full list of Avalara-supported entity use codes.\r\nEntity/Use Codes are definitions of the entity who is purchasing something, or the purpose for which the transaction\r\nis occurring.  This information is generally used to determine taxability of the product.\r\nIn order to facilitate correct reporting of your taxes, you are encouraged to select the proper entity use codes for\r\nall transactions that are exempt.",
				"operationId": "ListEntityUseCodes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* validCountries",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[EntityUseCodeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/filingcalendars/loginverifiers": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all forms where logins can be verified automatically",
				"description": "List all forms where logins can be verified automatically.\r\nThis API is intended to be useful to identify whether the user should be allowed\r\nto automatically verify their login and password.",
				"operationId": "ListLoginVerifiers",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* taxFormCodes, scraperType, expectedResponseTime, requiredFilingCalendarDataFields",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[SkyscraperStatusModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/filingcalendars/loginverifiers/{form}": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Test whether a form supports online login verification",
				"description": "This API is intended to be useful to identify whether the user should be allowed\r\nto automatically verify their login and password. This API will provide a result only if the form supports automatic online login verification.",
				"operationId": "GetLoginVerifierByForm",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "form",
						"in": "path",
						"description": "The name of the form you would like to verify. This is the tax form code",
						"required": true,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* taxFormCodes, scraperType, expectedResponseTime, requiredFilingCalendarDataFields",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[SkyscraperStatusModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/filingfrequencies": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported filing frequencies.",
				"description": "Returns the full list of Avalara-supported filing frequencies.\r\nThis API is intended to be useful to identify all the different filing frequencies that can be used in notices.",
				"operationId": "ListFilingFrequencies",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[FilingFrequencyModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/jurisdictions": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List jurisdictions based on the filter provided",
				"description": "Returns a list of all Avalara-supported taxing jurisdictions.\r\n            \r\nThis API allows you to examine all Avalara-supported jurisdictions. You can filter your search by supplying\r\nSQL-like query for fetching only the ones you concerned about. For example: effectiveDate &gt; '2016-01-01'\r\n            \r\nThe rate, salesRate, and useRate fields are not available on the JurisdictionModels returned by this API.",
				"operationId": "ListJurisdictions",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* rate, salesRate, signatureCode, useRate",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[JurisdictionModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/jurisdictionsnearaddress": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List jurisdictions near a specific address",
				"description": "Returns a list of all Avalara-supported taxing jurisdictions that apply to this address.\r\n            \r\nThis API allows you to identify which jurisdictions are nearby a specific address according to the best available geocoding information.\r\nIt is intended to allow you to create a \"Jurisdiction Override\", which allows an address to be configured as belonging to a nearby\r\njurisdiction in AvaTax.\r\n            \r\nThe results of this API call can be passed to the `CreateJurisdictionOverride` API call.",
				"operationId": "ListJurisdictionsByAddress",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "line1",
						"in": "query",
						"description": "The first address line portion of this address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "line2",
						"in": "query",
						"description": "The second address line portion of this address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "line3",
						"in": "query",
						"description": "The third address line portion of this address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "The city portion of this address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "region",
						"in": "query",
						"description": "The region, state, or province code portion of this address.",
						"required": false,
						"type": "string",
						"maxLength": 3,
						"minLength": 0
					},
					{
						"name": "postalCode",
						"in": "query",
						"description": "The postal code or zip code portion of this address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "country",
						"in": "query",
						"description": "The two-character ISO-3166 code of the country portion of this address.",
						"required": true,
						"type": "string",
						"maxLength": 2,
						"minLength": 0
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* country, Jurisdictions",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[JurisdictionOverrideModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/locationquestions": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the list of questions that are required for a tax location",
				"description": "Returns the list of additional questions you must answer when declaring a location in certain taxing jurisdictions.\r\nSome tax jurisdictions require that you register or provide additional information to configure each physical place where\r\nyour company does business.\r\nThis information is not usually required in order to calculate tax correctly, but is almost always required to file your tax correctly.\r\nYou can call this API call for any address and obtain information about what questions must be answered in order to properly\r\nfile tax in that location.",
				"operationId": "ListLocationQuestionsByAddress",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "line1",
						"in": "query",
						"description": "The first line of this location's address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "line2",
						"in": "query",
						"description": "The second line of this location's address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "line3",
						"in": "query",
						"description": "The third line of this location's address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "The city part of this location's address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "region",
						"in": "query",
						"description": "The region, state, or province part of this location's address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "postalCode",
						"in": "query",
						"description": "The postal code of this location's address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "country",
						"in": "query",
						"description": "The country part of this location's address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "Optionally identify the location via latitude/longitude instead of via address.",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "Optionally identify the location via latitude/longitude instead of via address.",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[LocationQuestionModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/marketplacelocations": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the list of locations for a marketplace.",
				"description": "Retrieves the list of suggested locations for a marketplace.",
				"operationId": "ListMarketplaceLocations",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "marketplaceId",
						"in": "query",
						"description": "MarketplaceId of a marketplace",
						"required": true,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[MarketplaceLocationModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/nexus": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported nexus for all countries and regions.",
				"description": "Returns the full list of all Avalara-supported nexus for all countries and regions.\r\n            \r\nThis API is intended to be useful if your user interface needs to display a selectable list of nexus.",
				"operationId": "ListNexus",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* streamlinedSalesTax, isSSTActive, taxAuthorityId, taxName, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/nexus/{country}": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported nexus for a country.",
				"description": "Returns all Avalara-supported nexus for the specified country.\r\n            \r\nThis API is intended to be useful if your user interface needs to display a selectable list of nexus filtered by country.",
				"operationId": "ListNexusByCountry",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "country",
						"in": "path",
						"description": "The country in which you want to fetch the system nexus",
						"required": true,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* streamlinedSalesTax, isSSTActive, taxAuthorityId, taxName, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/nexus/{country}/{region}": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported nexus for a country and region.",
				"description": "Returns all Avalara-supported nexus for the specified country and region.\r\n            \r\nThis API is intended to be useful if your user interface needs to display a selectable list of nexus filtered by country and region.",
				"operationId": "ListNexusByCountryAndRegion",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "country",
						"in": "path",
						"description": "The two-character ISO-3166 code for the country.",
						"required": true,
						"type": "string"
					},
					{
						"name": "region",
						"in": "path",
						"description": "The two or three character region code for the region.",
						"required": true,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* streamlinedSalesTax, isSSTActive, taxAuthorityId, taxName, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/nexus/byaddress": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all nexus that apply to a specific address.",
				"description": "Returns a list of all Avalara-supported taxing jurisdictions that apply to this address.\r\nThis API allows you to identify which tax authorities apply to a physical location, salesperson address, or point of sale.\r\nIn general, it is usually expected that a company will declare nexus in all the jurisdictions that apply to each physical address\r\nwhere the company does business.\r\nThe results of this API call can be passed to the 'Create Nexus' API call to declare nexus for this address.",
				"operationId": "ListNexusByAddress",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "line1",
						"in": "query",
						"description": "The first address line portion of this address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "line2",
						"in": "query",
						"description": "The first address line portion of this address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "line3",
						"in": "query",
						"description": "The first address line portion of this address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "The city portion of this address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "region",
						"in": "query",
						"description": "Name or ISO 3166 code identifying the region portion of the address.\r\n            \r\n             This field supports many different region identifiers:\r\n              * Two and three character ISO 3166 region codes\r\n              * Fully spelled out names of the region in ISO supported languages\r\n              * Common alternative spellings for many regions\r\n            \r\n             For a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
						"required": true,
						"type": "string"
					},
					{
						"name": "postalCode",
						"in": "query",
						"description": "The postal code or zip code portion of this address.",
						"required": false,
						"type": "string"
					},
					{
						"name": "country",
						"in": "query",
						"description": "Name or ISO 3166 code identifying the country portion of this address.\r\n            \r\n             This field supports many different country identifiers:\r\n              * Two character ISO 3166 codes\r\n              * Three character ISO 3166 codes\r\n              * Fully spelled out names of the country in ISO supported languages\r\n              * Common alternative spellings for many countries\r\n            \r\n             For a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
						"required": true,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* streamlinedSalesTax, isSSTActive, taxAuthorityId, taxName, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/nexus/byform/{formCode}": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List nexus related to a tax form",
				"description": "Retrieves a list of nexus related to a tax form.\r\n            \r\nThe concept of `Nexus` indicates a place where your company has sufficient physical presence and is obligated\r\nto collect and remit transaction-based taxes.\r\n            \r\nWhen defining companies in AvaTax, you must declare nexus for your company in order to correctly calculate tax\r\nin all jurisdictions affected by your transactions.\r\n            \r\nThis API is intended to provide useful information when examining a tax form.  If you are about to begin filing\r\na tax form, you may want to know whether you have declared nexus in all the jurisdictions related to that tax\r\nform in order to better understand how the form will be filled out.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListNexusByFormCode",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "formCode",
						"in": "path",
						"description": "The form code that we are looking up the nexus for",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NexusByTaxFormModel"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/nexustaxtypegroups": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of nexus tax type groups",
				"description": "Returns the full list of Avalara-supported nexus tax type groups\r\nThis API is intended to be useful to identify all the different tax sub-types.",
				"operationId": "ListNexusTaxTypeGroups",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* subscriptionTypeId, subscriptionDescription, tabName, showColumn",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusTaxTypeGroupModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/noticecustomerfundingoptions": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax notice customer funding options.",
				"description": "Returns the full list of Avalara-supported tax notice customer funding options.\r\nThis API is intended to be useful to identify all the different notice customer funding options that can be used in notices.",
				"operationId": "ListNoticeCustomerFundingOptions",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* activeFlag, sortOrder",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NoticeCustomerFundingOptionModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/noticecustomertypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax notice customer types.",
				"description": "Returns the full list of Avalara-supported tax notice customer types.\r\nThis API is intended to be useful to identify all the different notice customer types.",
				"operationId": "ListNoticeCustomerTypes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* activeFlag, sortOrder",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NoticeCustomerTypeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/noticefilingtypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax notice filing types.",
				"description": "Returns the full list of Avalara-supported tax notice filing types.\r\nThis API is intended to be useful to identify all the different notice filing types that can be used in notices.",
				"operationId": "ListNoticeFilingtypes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* description, activeFlag, sortOrder",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NoticeFilingTypeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/noticepriorities": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax notice priorities.",
				"description": "Returns the full list of Avalara-supported tax notice priorities.\r\nThis API is intended to be useful to identify all the different notice priorities that can be used in notices.",
				"operationId": "ListNoticePriorities",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* activeFlag, sortOrder",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NoticePriorityModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/noticereasons": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax notice reasons.",
				"description": "Returns the full list of Avalara-supported tax notice reasons.\r\nThis API is intended to be useful to identify all the different tax notice reasons.",
				"operationId": "ListNoticeReasons",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* description, activeFlag, sortOrder",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NoticeReasonModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/noticeresponsibilities": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax notice responsibility ids",
				"description": "Returns the full list of Avalara-supported tax notice responsibility ids\r\nThis API is intended to be useful to identify all the different tax notice responsibilities.",
				"operationId": "ListNoticeResponsibilities",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* sortOrder",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NoticeResponsibilityModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/noticerootcauses": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax notice root causes",
				"description": "Returns the full list of Avalara-supported tax notice root causes\r\nThis API is intended to be useful to identify all the different tax notice root causes.",
				"operationId": "ListNoticeRootCauses",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* sortOrder",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NoticeRootCauseModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/noticestatuses": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax notice statuses.",
				"description": "Returns the full list of Avalara-supported tax notice statuses.\r\nThis API is intended to be useful to identify all the different tax notice statuses.",
				"operationId": "ListNoticeStatuses",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* isOpen, sortOrder",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NoticeStatusModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/noticetypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax notice types.",
				"description": "Returns the full list of Avalara-supported tax notice types.\r\nThis API is intended to be useful to identify all the different notice types that can be used in notices.",
				"operationId": "ListNoticeTypes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* activeFlag, sortOrder",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NoticeTypeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/parameters": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported extra parameters for creating transactions.",
				"description": "Returns the full list of Avalara-supported extra parameters for the 'Create Transaction' API call.\r\nThis list of parameters is available for use when configuring your transaction.\r\nSome parameters are only available for use if you have subscribed to certain features of AvaTax.",
				"operationId": "ListParameters",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* serviceTypes, regularExpression, values",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ParameterModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/parameters/byitem/{companyCode}/{itemCode}": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the parameters by companyCode and itemCode.",
				"description": "Returns the list of parameters based on the company country and state jurisdiction and the item code.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListParametersByItem",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "Company code.",
						"required": true,
						"type": "string"
					},
					{
						"name": "itemCode",
						"in": "path",
						"description": "Item code.",
						"required": true,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* serviceTypes, regularExpression, values",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ParameterModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/parametersusage": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported usage of extra parameters for creating transactions.",
				"description": "Returns the full list of Avalara-supported usage of extra parameters for the 'Create Transaction' API call.\r\nThis list of parameters is available for use when configuring your transaction.\r\nSome parameters are only available for use if you have subscribed to certain features of AvaTax.",
				"operationId": "ListParametersUsage",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* values",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ParameterUsageModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/permissions": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported permissions",
				"description": "Returns the full list of Avalara-supported permission types.\r\nThis API is intended to be useful to identify the capabilities of a particular user logon.",
				"operationId": "ListPermissions",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[String]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/postalcodes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported postal codes.",
				"description": "Retrieves the list of Avalara-supported postal codes.",
				"operationId": "ListPostalCodes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[PostalCodeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/preferredprograms": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all customs duty programs recognized by AvaTax",
				"description": "List all preferred customs duty programs recognized by AvaTax.\r\n            \r\nA customs duty program is an optional program you can use to obtain favorable treatment from customs and duty agents.\r\nAn example of a preferred program is NAFTA, which provides preferential rates for products being shipped from neighboring\r\ncountries.\r\n            \r\nTo select a preferred program for calculating customs and duty rates, call this API to find the appropriate code for your\r\npreferred program.  Next, set the parameter `AvaTax.LC.PreferredProgram` in your `CreateTransaction` call to the code of\r\nthe program.",
				"operationId": "ListPreferredPrograms",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* effectiveDate, endDate",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[PreferredProgramModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/productclassificationsystems": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all available product classification systems.",
				"description": "List all available product classification systems.\r\n            \r\nTax authorities use product classification systems as a way to identify products and associate them with a tax rate.\r\nMore than one tax authority might use the same product classification system, but they might charge different tax rates for products.",
				"operationId": "ListProductClassificationSystems",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* countries",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$countryCode",
						"in": "query",
						"description": "If not null, return all records with this code.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ProductClassificationSystemModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/productclassificationsystems/bycompany/{companyCode}": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all product classification systems available to a company based on its nexus.",
				"description": "Lists all product classification systems available to a company based on its nexus.\r\n            \r\nTax authorities use product classification systems as a way to identify products and associate them with a tax rate.\r\nMore than one tax authority might use the same product classification system, but they might charge different tax rates for products.",
				"operationId": "ListProductClassificationSystemsByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code.",
						"required": true,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* countries",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$countryCode",
						"in": "query",
						"description": "If not null, return all records with this code.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ProductClassificationSystemModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/regions": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all ISO 3166 regions",
				"description": "Returns a list of all ISO 3166 region codes and their US English friendly names.\r\nThis API is intended to be useful when presenting a dropdown box in your website to allow customers to select a region\r\nwithin the country for a shipping addresses.",
				"operationId": "ListRegions",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* localizedNames",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[IsoRegionModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/resourcefiletypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported resource file types",
				"description": "Returns the full list of Avalara-supported resource file types\r\nThis API is intended to be useful to identify all the different resource file types.",
				"operationId": "ListResourceFileTypes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ResourceFileTypeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/securityroles": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported permissions",
				"description": "Returns the full list of Avalara-supported permission types.\r\nThis API is intended to be useful when designing a user interface for selecting the security role of a user account.\r\nSome security roles are restricted for Avalara internal use.",
				"operationId": "ListSecurityRoles",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[SecurityRoleModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/subscriptiontypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported subscription types",
				"description": "Returns the full list of Avalara-supported subscription types.\r\nThis API is intended to be useful for identifying which features you have added to your account.\r\nYou may always contact Avalara's sales department for information on available products or services.\r\nYou cannot change your subscriptions directly through the API.",
				"operationId": "ListSubscriptionTypes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[SubscriptionTypeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/taxauthorities": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax authorities.",
				"description": "Returns the full list of Avalara-supported tax authorities.\r\nThis API is intended to be useful to identify all the different authorities that receive tax.",
				"operationId": "ListTaxAuthorities",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxAuthorityModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/taxauthorityforms": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported forms for each tax authority.",
				"description": "Returns the full list of Avalara-supported forms for each tax authority.\r\nThis list represents tax forms that Avalara recognizes.\r\nCustomers who subscribe to Avalara Managed Returns Service can request these forms to be filed automatically\r\nbased on the customer's AvaTax data.",
				"operationId": "ListTaxAuthorityForms",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxAuthorityFormModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/taxauthoritytypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax authority types.",
				"description": "Returns the full list of Avalara-supported tax authority types.\r\nThis API is intended to be useful to identify all the different authority types.",
				"operationId": "ListTaxAuthorityTypes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxAuthorityTypeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/taxcodes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax codes.",
				"description": "Retrieves the list of Avalara-supported system tax codes.\r\nA 'TaxCode' represents a uniquely identified type of product, good, or service.\r\nAvalara supports correct tax rates and taxability rules for all TaxCodes in all supported jurisdictions.\r\nIf you identify your products by tax code in your 'Create Transacion' API calls, Avalara will correctly calculate tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListTaxCodes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxCodeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/taxcodetypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax code types.",
				"description": "Returns the full list of recognized tax code types.\r\nA 'Tax Code Type' represents a broad category of tax codes, and is less detailed than a single TaxCode.\r\nThis API is intended to be useful for broadly searching for tax codes by tax code type.",
				"operationId": "ListTaxCodeTypes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TaxCodeTypesModel"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/taxforms": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of the Tax Forms available",
				"description": "Returns the full list of Avalara-supported Tax Forms\r\nThis API is intended to be useful to identify all the different Tax Forms",
				"operationId": "ListTaxForms",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[FormMasterModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/taxsubtypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of tax sub types",
				"description": "Returns the full list of Avalara-supported tax sub-types\r\nThis API is intended to be useful to identify all the different tax sub-types.",
				"operationId": "ListTaxSubTypes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxSubTypeModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/taxtypegroups": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of tax type groups",
				"description": "Returns the full list of Avalara-supported tax type groups\r\nThis API is intended to be useful to identify all the different tax type groups.",
				"operationId": "ListTaxTypeGroups",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* subscriptionTypeId, subscriptionDescription, tabName, showColumn, displaySequence",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxTypeGroupModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/definitions/unitofmeasurements": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all defined units of measurement",
				"description": "List all units of measurement systems defined by Avalara.\r\n            \r\nA unit of measurement system is a method of measuring a quantity, such as distance, mass, or others.",
				"operationId": "ListUnitOfMeasurement",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* id",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[UomModel]"
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/distancethresholds": {
			"get": {
				"tags": ["DistanceThresholds"],
				"summary": "Retrieve all DistanceThresholds for this company.",
				"description": "Lists all DistanceThreshold objects that belong to this company.\r\n            \r\nA company-distance-threshold model indicates the distance between a company\r\nand the taxing borders of various countries.  Distance thresholds are necessary\r\nto correctly calculate some value-added taxes.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListDistanceThresholds",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company whose DistanceThreshold objects you wish to list.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CompanyDistanceThresholdModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["DistanceThresholds"],
				"summary": "Create one or more DistanceThreshold objects",
				"description": "Create one or more DistanceThreshold objects for this company.\r\n            \r\nA company-distance-threshold model indicates the distance between a company\r\nand the taxing borders of various countries.  Distance thresholds are necessary\r\nto correctly calculate some value-added taxes.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateDistanceThreshold",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that owns this DistanceThreshold",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "models",
						"in": "body",
						"description": "The DistanceThreshold object or objects you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyDistanceThresholdModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyDistanceThresholdModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/distancethresholds/{id}": {
			"get": {
				"tags": ["DistanceThresholds"],
				"summary": "Retrieve a single DistanceThreshold",
				"description": "Retrieves a single DistanceThreshold object defined by this URL.\r\n            \r\nA company-distance-threshold model indicates the distance between a company\r\nand the taxing borders of various countries.  Distance thresholds are necessary\r\nto correctly calculate some value-added taxes.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetDistanceThreshold",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this DistanceThreshold object",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number referring to this DistanceThreshold object",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CompanyDistanceThresholdModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["DistanceThresholds"],
				"summary": "Update a DistanceThreshold object",
				"description": "Replace the existing DistanceThreshold object at this URL with an updated object.\r\n            \r\nA company-distance-threshold model indicates the distance between a company\r\nand the taxing borders of various countries.  Distance thresholds are necessary\r\nto correctly calculate some value-added taxes.\r\n            \r\nAll data from the existing object will be replaced with data in the object you PUT.\r\nTo set a field's value to null, you may either set its value to null or omit that field from the object you post.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateDistanceThreshold",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The new DistanceThreshold object to store.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CompanyDistanceThresholdModel"
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that owns this DistanceThreshold object.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of the DistanceThreshold object to replace.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CompanyDistanceThresholdModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["DistanceThresholds"],
				"summary": "Delete a single DistanceThreshold object",
				"description": "Marks the DistanceThreshold object identified by this URL as deleted.\r\n            \r\nA company-distance-threshold model indicates the distance between a company\r\nand the taxing borders of various countries.  Distance thresholds are necessary\r\nto correctly calculate some value-added taxes.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteDistanceThreshold",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company that owns this DistanceThreshold",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of the DistanceThreshold object you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/distancethresholds": {
			"get": {
				"tags": ["DistanceThresholds"],
				"summary": "Retrieve all DistanceThreshold objects",
				"description": "Lists all DistanceThreshold objects that belong to this account.\r\n            \r\nA company-distance-threshold model indicates the distance between a company\r\nand the taxing borders of various countries.  Distance thresholds are necessary\r\nto correctly calculate some value-added taxes.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "QueryDistanceThresholds",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[CompanyDistanceThresholdModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/ecommercetokens": {
			"put": {
				"tags": ["ECommerceToken"],
				"summary": "Refresh an eCommerce token.",
				"description": "Refresh an eCommerce token.\r\n            \r\nCertCapture eCommerce tokens expire after one hour. This API is used to refresh an eCommerce token that is about to expire. This API can only be used with active tokens. If your token has expired, you must generate a new one.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "RefreshECommerceToken",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company ID that the refreshed certificate belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "content",
						"in": "body",
						"description": "",
						"required": false,
						"schema": {
							"$ref": "#/definitions/RefreshECommerceTokenInputModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ECommerceTokenOutputModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"500": {
						"description": "Server Error"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["ECommerceToken"],
				"summary": "Create a new eCommerce token.",
				"description": "Creates a new eCommerce token.\r\n            \r\nThis API is used to create a new eCommerce token. An eCommerce token is required in order to launch the CertCapture eCommerce plugin. Create a token for each of your CertCapture customers.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "CreateECommerceToken",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company ID that will be issued this certificate.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "content",
						"in": "body",
						"description": "",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CreateECommerceTokenInputModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ECommerceTokenOutputModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"500": {
						"description": "Server Error"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/filingcalendars/{filingCalendarId}/setting/{companyReturnSettingId}": {
			"delete": {
				"tags": ["FilingCalendars"],
				"summary": "Delete a company return setting",
				"description": "This API is available by invitation only and only available for users with Compliance access\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "DeleteCompanyReturnSettings",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID of the company",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "filingCalendarId",
						"in": "path",
						"description": "The unique ID of the filing calendar that will remove setting",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "companyReturnSettingId",
						"in": "path",
						"description": "The unique ID of the company return setting that will be deleted from the filing calendar",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyReturnSettingModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/filings/returns/filed": {
			"get": {
				"tags": ["Filings"],
				"summary": "Retrieve a list of filed returns for the specified company in the year and month of a given filing period.",
				"description": "\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API is available by invitation only.<br />*Exempt security roles*:  ComplianceRootUser, ComplianceAdmin, ComplianceUser, TechnicalSupportAdmin, TechnicalSupportUser, CompanyUser, AccountUser, CompanyAdmin, AccountAdmin.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "GetFiledReturns",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns these batches",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "endPeriodMonth",
						"in": "query",
						"description": "The month of the period you are trying to retrieve",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "endPeriodYear",
						"in": "query",
						"description": "The year of the period you are trying to retrieve",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "frequency",
						"in": "query",
						"description": "The frequency of the return you are trying to retrieve",
						"required": false,
						"type": "string",
						"enum": [
							"Monthly",
							"Quarterly",
							"SemiAnnually",
							"Annually",
							"Bimonthly",
							"Occasional",
							"InverseQuarterly",
							"Weekly"
						],
						"x-enum-metadata": {
							"name": "FilingFrequencyId",
							"values": [
								{
									"name": "Monthly",
									"value": 1
								},
								{
									"name": "Quarterly",
									"value": 2
								},
								{
									"name": "SemiAnnually",
									"value": 3
								},
								{
									"name": "Annually",
									"value": 4
								},
								{
									"name": "Bimonthly",
									"value": 5
								},
								{
									"name": "Occasional",
									"value": 6
								},
								{
									"name": "InverseQuarterly",
									"value": 7
								},
								{
									"name": "Weekly",
									"value": 8
								}
							]
						}
					},
					{
						"name": "status",
						"in": "query",
						"description": "The status of the return(s) you are trying to retrieve",
						"required": false,
						"type": "string",
						"enum": [
							"PendingApproval",
							"Dirty",
							"ApprovedToFile",
							"PendingFiling",
							"PendingFilingOnBehalf",
							"Filed",
							"FiledOnBehalf",
							"ReturnAccepted",
							"ReturnAcceptedOnBehalf",
							"PaymentRemitted",
							"Voided",
							"PendingReturn",
							"PendingReturnOnBehalf",
							"DoNotFile",
							"ReturnRejected",
							"ReturnRejectedOnBehalf",
							"ApprovedToFileOnBehalf"
						],
						"x-enum-metadata": {
							"name": "FilingStatusId",
							"values": [
								{
									"name": "PendingApproval",
									"value": 0
								},
								{
									"name": "Dirty",
									"value": 1
								},
								{
									"name": "ApprovedToFile",
									"value": 2
								},
								{
									"name": "PendingFiling",
									"value": 3
								},
								{
									"name": "PendingFilingOnBehalf",
									"value": 4
								},
								{
									"name": "Filed",
									"value": 5
								},
								{
									"name": "FiledOnBehalf",
									"value": 6
								},
								{
									"name": "ReturnAccepted",
									"value": 7
								},
								{
									"name": "ReturnAcceptedOnBehalf",
									"value": 8
								},
								{
									"name": "PaymentRemitted",
									"value": 9
								},
								{
									"name": "Voided",
									"value": 10
								},
								{
									"name": "PendingReturn",
									"value": 11
								},
								{
									"name": "PendingReturnOnBehalf",
									"value": 12
								},
								{
									"name": "DoNotFile",
									"value": 13
								},
								{
									"name": "ReturnRejected",
									"value": 14
								},
								{
									"name": "ReturnRejectedOnBehalf",
									"value": 15
								},
								{
									"name": "ApprovedToFileOnBehalf",
									"value": 16
								}
							]
						}
					},
					{
						"name": "country",
						"in": "query",
						"description": "The country of the return(s) you are trying to retrieve",
						"required": false,
						"type": "string"
					},
					{
						"name": "region",
						"in": "query",
						"description": "The region of the return(s) you are trying to retrieve",
						"required": false,
						"type": "string"
					},
					{
						"name": "filingCalendarId",
						"in": "query",
						"description": "The filing calendar id of the return you are trying to retrieve",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "taxformCode",
						"in": "query",
						"description": "The unique tax form code of the form.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[FiledReturnModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/firmclientlinkages": {
			"get": {
				"tags": ["FirmClientLinkages"],
				"summary": "List client linkages for a firm or client",
				"description": "This API enables the firm or account users to request the associated linkages to the account.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListFirmClientLinkage",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* firmAccountName, clientAccountName",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[FirmClientLinkageOutputModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["FirmClientLinkages"],
				"summary": "Links a firm account with the client account",
				"description": "This API enables the firm admins/firm users to request the linkage of a firm account and a client account.\n\n### Security Policies\n\n* This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateFirmClientLinkage",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "FirmClientLinkageInputModel",
						"required": false,
						"schema": {
							"$ref": "#/definitions/FirmClientLinkageInputModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FirmClientLinkageOutputModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/firmclientlinkages/{id}": {
			"get": {
				"tags": ["FirmClientLinkages"],
				"summary": "Get linkage between a firm and client by id",
				"description": "This API enables the firm admins/firm users to request the linkage of a firm account and a client account.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetFirmClientLinkage",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FirmClientLinkageOutputModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["FirmClientLinkages"],
				"summary": "Delete a linkage",
				"description": "This API marks a linkage between a firm and client as deleted.\n\n### Security Policies\n\n* This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteFirmClientLinkage",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/firmclientlinkages/{id}/approve": {
			"post": {
				"tags": ["FirmClientLinkages"],
				"summary": "Approves linkage to a firm for a client account",
				"description": "This API enables the account admin of a client account to approve linkage request by a firm.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "ApproveFirmClientLinkage",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FirmClientLinkageOutputModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/firmclientlinkages/{id}/reject": {
			"post": {
				"tags": ["FirmClientLinkages"],
				"summary": "Rejects linkage to a firm for a client account",
				"description": "This API enables the account admin of a client account to reject linkage request by a firm.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "RejectFirmClientLinkage",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FirmClientLinkageOutputModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/firmclientlinkages/{id}/reset": {
			"post": {
				"tags": ["FirmClientLinkages"],
				"summary": "Reset linkage status between a client and firm back to requested",
				"description": "This API enables the firm admin of a client account to reset a previously created linkage request by a firm.\n\n### Security Policies\n\n* This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "ResetFirmClientLinkage",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FirmClientLinkageOutputModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/firmclientlinkages/{id}/revoke": {
			"post": {
				"tags": ["FirmClientLinkages"],
				"summary": "Revokes previously approved linkage to a firm for a client account",
				"description": "This API enables the account admin of a client account to revoke a previously approved linkage request by a firm.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "RevokeFirmClientLinkage",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FirmClientLinkageOutputModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/firmclientlinkages/createandlinkclient": {
			"post": {
				"tags": ["FirmClientLinkages"],
				"summary": "Request a new FirmClient account and create an approved linkage to it",
				"description": "This API is for use by Firms only.\r\n            \r\nAvalara allows firms to manage returns for clients without the clients needing to use AvaTax service.\r\nFirms can create accounts of FirmClient for customers they are managing using this API.\r\n            \r\nCalling this API creates an account with the specified product subscriptions, but without a new user for account.\r\nAccount is then linked to the Firm so they can managed their returns.\r\nYou should call this API when a customer does not have an AvaTax account and is to be managed only by the firm.\r\n            \r\nThe created account will be created in `Active` status but there will be no user or license key associated with account.\n\n### Security Policies\n\n* This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SystemAdmin.\n",
				"operationId": "CreateAndLinkNewFirmClientAccount",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "Information about the account you wish to create.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/NewFirmClientAccountRequestModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FirmClientLinkageOutputModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/freetrials/request": {
			"post": {
				"tags": ["Free"],
				"summary": "FREE API - Request a free trial of AvaTax",
				"description": "Call this API to obtain a free AvaTax account.\r\n            \r\nThis API is free to use.  No authentication credentials are required to call this API. You must read and\r\naccept [Avalara's terms and conditions](https://www1.avalara.com/us/en/legal/terms.html) for the account to be\r\ncreated.\r\n            \r\nIf all conditions are met, this API will grant a free trial version of AvaTax.  For a list of functionality\r\navailable in the free trial and its limitations, please see the [AvaTax Developer Website Free Trial page](https://developer.avalara.com/avatax/signup/).\r\n            \r\nAfter your free trial concludes, you will still be able to use the [Free AvaTax API Suite](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Free/).\n\n### Security Policies\n\n* This API may be called without providing authentication credentials.\n",
				"operationId": "RequestFreeTrial",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "Required information to provision a free trial account.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/FreeTrialRequestModel"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NewAccountModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": []
			}
		},
		"/api/v2/taxrates/byaddress": {
			"get": {
				"tags": ["Free"],
				"summary": "FREE API - Sales tax rates for a specified address",
				"description": "# Free-To-Use\r\n            \r\nThe TaxRates API is a free-to-use, no cost option for estimating sales tax rates.\r\nAny customer can request a free AvaTax account and make use of the TaxRates API.\r\n            \r\nUsage of this API is subject to rate limits.  Users who exceed the rate limit will receive HTTP\r\nresponse code 429 - `Too Many Requests`.\r\n            \r\nThis API assumes that you are selling general tangible personal property at a retail point-of-sale\r\nlocation in the United States only.\r\n            \r\nFor more powerful tax calculation, please consider upgrading to the `CreateTransaction` API,\r\nwhich supports features including, but not limited to:\r\n            \r\n* Nexus declarations\r\n* Taxability based on product/service type\r\n* Sourcing rules affecting origin/destination states\r\n* Customers who are exempt from certain taxes\r\n* States that have dollar value thresholds for tax amounts\r\n* Refunds for products purchased on a different date\r\n* Detailed jurisdiction names and state assigned codes\r\n* And more!\r\n            \r\nPlease see [Estimating Tax with REST v2](http://developer.avalara.com/blog/2016/11/04/estimating-tax-with-rest-v2/)\r\nfor information on how to upgrade to the full AvaTax CreateTransaction API.",
				"operationId": "TaxRatesByAddress",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "line1",
						"in": "query",
						"description": "The street address of the location.",
						"required": true,
						"type": "string"
					},
					{
						"name": "line2",
						"in": "query",
						"description": "The street address of the location.",
						"required": false,
						"type": "string"
					},
					{
						"name": "line3",
						"in": "query",
						"description": "The street address of the location.",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "The city name of the location.",
						"required": false,
						"type": "string"
					},
					{
						"name": "region",
						"in": "query",
						"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
						"required": true,
						"type": "string"
					},
					{
						"name": "postalCode",
						"in": "query",
						"description": "The postal code of the location.",
						"required": true,
						"type": "string"
					},
					{
						"name": "country",
						"in": "query",
						"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TaxRateModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/taxrates/bypostalcode": {
			"get": {
				"tags": ["Free"],
				"summary": "FREE API - Sales tax rates for a specified country and postal code. This API is only available for US postal codes.",
				"description": "# Free-To-Use\r\n            \r\nThis API is only available for a US postal codes.\r\n            \r\nThe TaxRates API is a free-to-use, no cost option for estimating sales tax rates.\r\nAny customer can request a free AvaTax account and make use of the TaxRates API.\r\n            \r\nUsage of this API is subject to rate limits.  Users who exceed the rate limit will receive HTTP\r\nresponse code 429 - `Too Many Requests`.\r\n            \r\nThis API assumes that you are selling general tangible personal property at a retail point-of-sale\r\nlocation in the United States only.\r\n            \r\nFor more powerful tax calculation, please consider upgrading to the `CreateTransaction` API,\r\nwhich supports features including, but not limited to:\r\n            \r\n* Nexus declarations\r\n* Taxability based on product/service type\r\n* Sourcing rules affecting origin/destination states\r\n* Customers who are exempt from certain taxes\r\n* States that have dollar value thresholds for tax amounts\r\n* Refunds for products purchased on a different date\r\n* Detailed jurisdiction names and state assigned codes\r\n* And more!\r\n            \r\nPlease see [Estimating Tax with REST v2](http://developer.avalara.com/blog/2016/11/04/estimating-tax-with-rest-v2/)\r\nfor information on how to upgrade to the full AvaTax CreateTransaction API.",
				"operationId": "TaxRatesByPostalCode",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "country",
						"in": "query",
						"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
						"required": true,
						"type": "string"
					},
					{
						"name": "postalCode",
						"in": "query",
						"description": "The postal code of the location.",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TaxRateModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/fundingrequests/{id}": {
			"get": {
				"tags": ["FundingRequests"],
				"summary": "Retrieve status about a funding setup request",
				"description": "This API is available by invitation only.\r\nCompanies that use the Avalara Managed Returns or the SST Certified Service Provider services are\r\nrequired to setup their funding configuration before Avalara can begin filing tax returns on their\r\nbehalf.\r\nFunding configuration for each company is set up by submitting a funding setup request, which can\r\nbe sent either via email or via an embedded HTML widget.\r\nWhen the funding configuration is submitted to Avalara, it will be reviewed by treasury team members\r\nbefore approval.\r\nThis API checks the status on an existing funding request.\r\nThis API requires a subscription to Avalara Managed Returns or SST Certified Service Provider.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "FundingRequestStatus",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this funding request",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FundingStatusModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/fundingrequests/{id}/widget": {
			"get": {
				"tags": ["FundingRequests"],
				"summary": "Request the javascript for a funding setup widget",
				"description": "This API is available by invitation only.\r\nCompanies that use the Avalara Managed Returns or the SST Certified Service Provider services are\r\nrequired to setup their funding configuration before Avalara can begin filing tax returns on their\r\nbehalf.\r\nFunding configuration for each company is set up by submitting a funding setup request, which can\r\nbe sent either via email or via an embedded HTML widget.\r\nWhen the funding configuration is submitted to Avalara, it will be reviewed by treasury team members\r\nbefore approval.\r\nThis API returns back the actual javascript code to insert into your application to render the\r\nJavaScript funding setup widget inline.\r\nUse the 'methodReturn.javaScript' return value to insert this widget into your HTML page.\r\nThis API requires a subscription to Avalara Managed Returns or SST Certified Service Provider.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "ActivateFundingRequest",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this funding request",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FundingStatusModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/items": {
			"get": {
				"tags": ["Items"],
				"summary": "Retrieve items for this company",
				"description": "List all items defined for the current company.\r\n            \r\nItems are a way of separating your tax calculation process from your tax configuration details.  If you choose, you\r\ncan provide `itemCode` values for each `CreateTransaction()` API call rather than specifying tax codes, parameters, descriptions,\r\nand other data fields.  AvaTax will automatically look up each `itemCode` and apply the correct tax codes and parameters\r\nfrom the item table instead.  This allows your CreateTransaction call to be as simple as possible, and your tax compliance\r\nteam can manage your item catalog and adjust the tax behavior of items without having to modify your software.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\n            \r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Parameters\r\n* Classifications\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListItemsByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that defined these items",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* taxCode, classifications, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ItemModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Items"],
				"summary": "Create a new item",
				"description": "Creates one or more new item objects attached to this company.\r\n            \r\nItems are a way of separating your tax calculation process from your tax configuration details.  If you choose, you\r\ncan provide `itemCode` values for each `CreateTransaction()` API call rather than specifying tax codes, parameters, descriptions,\r\nand other data fields.  AvaTax will automatically look up each `itemCode` and apply the correct tax codes and parameters\r\nfrom the item table instead.  This allows your CreateTransaction call to be as simple as possible, and your tax compliance\r\nteam can manage your item catalog and adjust the tax behavior of items without having to modify your software.\r\n            \r\nThe tax code takes precedence over the tax code id if both are provided.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateItems",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The item you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ItemModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this item.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ItemModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/items/{id}": {
			"get": {
				"tags": ["Items"],
				"summary": "Retrieve a single item",
				"description": "Get the `Item` object identified by this URL.\r\n            \r\nItems are a way of separating your tax calculation process from your tax configuration details.  If you choose, you\r\ncan provide `itemCode` values for each `CreateTransaction()` API call rather than specifying tax codes, parameters, descriptions,\r\nand other data fields.  AvaTax will automatically look up each `itemCode` and apply the correct tax codes and parameters\r\nfrom the item table instead.  This allows your CreateTransaction call to be as simple as possible, and your tax compliance\r\nteam can manage your item catalog and adjust the tax behavior of items without having to modify your software.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetItem",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this item object",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this item",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ItemModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Items"],
				"summary": "Update a single item",
				"description": "Replace the existing `Item` object at this URL with an updated object.\r\n            \r\nItems are a way of separating your tax calculation process from your tax configuration details.  If you choose, you\r\ncan provide `itemCode` values for each `CreateTransaction()` API call rather than specifying tax codes, parameters, descriptions,\r\nand other data fields.  AvaTax will automatically look up each `itemCode` and apply the correct tax codes and parameters\r\nfrom the item table instead.  This allows your CreateTransaction call to be as simple as possible, and your tax compliance\r\nteam can manage your item catalog and adjust the tax behavior of items without having to modify your software.\r\n            \r\nAll data from the existing object will be replaced with data in the object you PUT.  To set a field's value to null,\r\nyou may either set its value to null or omit that field from the object you post.\r\n            \r\nThe tax code takes precedence over the tax code id if both are provided.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateItem",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The item object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/ItemModel"
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that this item belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the item you wish to update",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ItemModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Items"],
				"summary": "Delete a single item",
				"description": "Deletes the item object at this URL.\r\n            \r\nItems are a way of separating your tax calculation process from your tax configuration details.  If you choose, you\r\ncan provide `itemCode` values for each `CreateTransaction()` API call rather than specifying tax codes, parameters, descriptions,\r\nand other data fields.  AvaTax will automatically look up each `itemCode` and apply the correct tax codes and parameters\r\nfrom the item table instead.  This allows your CreateTransaction call to be as simple as possible, and your tax compliance\r\nteam can manage your item catalog and adjust the tax behavior of items without having to modify your software.\r\n            \r\nDeleting an item will also delete the parameters and classifications associated with that item.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteItem",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this item.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the item you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/items/{itemId}/classifications": {
			"get": {
				"tags": ["Items"],
				"summary": "Retrieve classifications for an item.",
				"description": "List classifications for an item.\r\n            \r\nA classification is the code for a product in a particular tax system. Classifications enable an item to be used in multiple tax systems which may have different tax rates for a product.\r\n            \r\nWhen an item is used in a transaction, the applicable classification will be used to determine the appropriate tax rate.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` classification; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` classifications.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListItemClassifications",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The item id.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* productCode, systemCode",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ItemClassificationOutputModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Items"],
				"summary": "Add classifications to an item.",
				"description": "Add classifications to an item.\r\n            \r\nA classification is the code for a product in a particular tax system. Classifications enable an item to be used in multiple tax systems which may have different tax rates for a product.\r\n            \r\nWhen an item is used in a transaction, the applicable classification will be used to determine the appropriate tax rate.\r\n            \r\nAn item may only have one classification per tax system.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateItemClassifications",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The item classifications you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ItemClassificationInputModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The item id.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ItemClassificationOutputModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Items"],
				"summary": "Delete all classifications for an item",
				"description": "Delete all the classifications for a given item.\r\n            \r\nA classification is the code for a product in a particular tax system. Classifications enable an item to be used in multiple tax systems which may have different tax rates for a product.\r\n            \r\nWhen an item is used in a transaction, the applicable classification will be used to determine the appropriate tax rate.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "BatchDeleteItemClassifications",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this item.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The ID of the item you wish to delete the classifications.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/items/{itemId}/classifications/{id}": {
			"get": {
				"tags": ["Items"],
				"summary": "Retrieve a single item classification.",
				"description": "Retrieve a single item classification.\r\n            \r\nA classification is the code for a product in a particular tax system. Classifications enable an item to be used in multiple tax systems which may have different tax rates for a product.\r\n            \r\nWhen an item is used in a transaction, the applicable classification will be used to determine the appropriate tax rate.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetItemClassification",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The item id.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The item classification id.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ItemClassificationOutputModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Items"],
				"summary": "Update an item classification.",
				"description": "Update an item classification.\r\n            \r\nA classification is the code for a product in a particular tax system. Classifications enable an item to be used in multiple tax systems which may have different tax rates for a product.\r\n            \r\nWhen an item is used in a transaction, the applicable classification will be used to determine the appropriate tax rate.\r\n            \r\nAn item may only have one classification per tax system.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateItemClassification",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The item id.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The item classification id.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The item object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/ItemClassificationInputModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ItemClassificationOutputModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Items"],
				"summary": "Delete a single item classification.",
				"description": "Delete a single item classification.\r\n            \r\nA classification is the code for a product in a particular tax system. Classifications enable an item to be used in multiple tax systems which may have different tax rates for a product.\r\n            \r\nWhen an item is used in a transaction, the applicable classification will be used to determine the appropriate tax rate.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteItemClassification",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The item id.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The item classification id.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/items/{itemId}/parameters": {
			"get": {
				"tags": ["Items"],
				"summary": "Retrieve parameters for an item",
				"description": "List parameters for an item.\r\n            \r\nSome items can be taxed differently depending on the properties of that item, such as the item grade or by a particular measurement of that item. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an item will be used by default in tax calculation but will not show on the transaction line referencing the item .\r\n            \r\nA parameter specified on a transaction line will override an item parameter if they share the same parameter name.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListItemParameters",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The item id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* name, unit",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ItemParameterModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Items"],
				"summary": "Add parameters to an item.",
				"description": "Add parameters to an item.\r\n            \r\nSome items can be taxed differently depending on the properties of that item, such as the item grade or by a particular measurement of that item. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an item will be used by default in tax calculation but will not show on the transaction line referencing the item .\r\n            \r\nA parameter specified on a transaction line will override an item parameter if they share the same parameter name.\r\n            \r\nTo see available parameters for this item, call `/api/v2/definitions/parameters?$filter=attributeType eq Product`\r\n            \r\nSome parameters are only available for use if you have subscribed to specific AvaTax services. To see which parameters you are able to use, add the query parameter \"$showSubscribed=true\" to the parameter definition call above.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateItemParameters",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The item parameters you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ItemParameterModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this item parameter.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The item id.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ItemParameterModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Items"],
				"summary": "Delete all parameters for an item",
				"description": "Delete all the parameters for a given item.\r\n            \r\nSome items can be taxed differently depending on the properties of that item, such as the item grade or by a particular measurement of that item. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an item will be used by default in tax calculation but will not show on the transaction line referencing the item .\r\n            \r\nA parameter specified on a transaction line will override an item parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "BatchDeleteItemParameters",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this item.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The ID of the item you wish to delete the parameters.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/items/{itemId}/parameters/{id}": {
			"get": {
				"tags": ["Items"],
				"summary": "Retrieve a single item parameter",
				"description": "Retrieve a single item parameter.\r\n            \r\nSome items can be taxed differently depending on the properties of that item, such as the item grade or by a particular measurement of that item. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an item will be used by default in tax calculation but will not show on the transaction line referencing the item .\r\n            \r\nA parameter specified on a transaction line will override an item parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetItemParameter",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The item id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ItemParameterModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Items"],
				"summary": "Update an item parameter",
				"description": "Update an item parameter.\r\n            \r\nSome items can be taxed differently depending on the properties of that item, such as the item grade or by a particular measurement of that item. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an item will be used by default in tax calculation but will not show on the transaction line referencing the item .\r\n            \r\nA parameter specified on a transaction line will override an item parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateItemParameter",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The item id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The item parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The item object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/ItemParameterModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ItemParameterModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Items"],
				"summary": "Delete a single item parameter",
				"description": "Delete a single item parameter.\r\n            \r\nSome items can be taxed differently depending on the properties of that item, such as the item grade or by a particular measurement of that item. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an item will be used by default in tax calculation but will not show on the transaction line referencing the item .\r\n            \r\nA parameter specified on a transaction line will override an item parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteItemParameter",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "The item id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/items/sync": {
			"post": {
				"tags": ["Items"],
				"summary": "Sync items from a product catalog",
				"description": "Syncs a list of items with AvaTax without waiting for them to be created. It is ideal for syncing large product catalogs\r\nwith AvaTax.\r\n            \r\nAny invalid or duplicate items will be ignored. To diagnose why an item is not created, use the normal create transaction API to receive validation information.\r\n            \r\nThis API is currently limited to 1000 items per call (the limit is subject to change).\r\n            \r\nItems are a way of separating your tax calculation process from your tax configuration details.  If you choose, you\r\ncan provide `itemCode` values for each `CreateTransaction()` API call rather than specifying tax codes, parameters, descriptions,\r\nand other data fields.  AvaTax will automatically look up each `itemCode` and apply the correct tax codes and parameters\r\nfrom the item table instead.  This allows your CreateTransaction call to be as simple as possible, and your tax compliance\r\nteam can manage your item catalog and adjust the tax behavior of items without having to modify your software.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "SyncItems",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this item.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The request object.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/SyncItemsRequestModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"202": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SyncItemsResponseModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/items": {
			"get": {
				"tags": ["Items"],
				"summary": "Retrieve all items",
				"description": "Get multiple item objects across all companies.\r\n            \r\nItems are a way of separating your tax calculation process from your tax configuration details.  If you choose, you\r\ncan provide `itemCode` values for each `CreateTransaction()` API call rather than specifying tax codes, parameters, descriptions,\r\nand other data fields.  AvaTax will automatically look up each `itemCode` and apply the correct tax codes and parameters\r\nfrom the item table instead.  This allows your CreateTransaction call to be as simple as possible, and your tax compliance\r\nteam can manage your item catalog and adjust the tax behavior of items without having to modify your software.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\n            \r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "QueryItems",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* taxCode, classifications, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ItemModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{accountId}/jurisdictionoverrides": {
			"get": {
				"tags": ["JurisdictionOverrides"],
				"summary": "Retrieve overrides for this account",
				"description": "List all jurisdiction override objects defined for this account.\r\n            \r\nA Jurisdiction Override is a configuration setting that allows you to select the taxing\r\njurisdiction for a specific address.  If you encounter an address that is on the boundary\r\nbetween two different jurisdictions, you can choose to set up a jurisdiction override\r\nto switch this address to use different taxing jurisdictions.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListJurisdictionOverridesByAccount",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account that owns this override",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* country, Jurisdictions",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[JurisdictionOverrideModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["JurisdictionOverrides"],
				"summary": "Create one or more overrides",
				"description": "Creates one or more jurisdiction override objects for this account.\r\n            \r\nA Jurisdiction Override is a configuration setting that allows you to select the taxing\r\njurisdiction for a specific address.  If you encounter an address that is on the boundary\r\nbetween two different jurisdictions, you can choose to set up a jurisdiction override\r\nto switch this address to use different taxing jurisdictions.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateJurisdictionOverrides",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The jurisdiction override objects to create",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/JurisdictionOverrideModel"
							}
						}
					},
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account that owns this override",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/JurisdictionOverrideModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{accountId}/jurisdictionoverrides/{id}": {
			"get": {
				"tags": ["JurisdictionOverrides"],
				"summary": "Retrieve a single override",
				"description": "Get the item object identified by this URL.\r\n            \r\nA Jurisdiction Override is a configuration setting that allows you to select the taxing\r\njurisdiction for a specific address.  If you encounter an address that is on the boundary\r\nbetween two different jurisdictions, you can choose to set up a jurisdiction override\r\nto switch this address to use different taxing jurisdictions.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetJurisdictionOverride",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account that owns this override",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this override",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/JurisdictionOverrideModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["JurisdictionOverrides"],
				"summary": "Update a single jurisdictionoverride",
				"description": "Replace the existing jurisdictionoverride object at this URL with an updated object.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateJurisdictionOverride",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The jurisdictionoverride object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/JurisdictionOverrideModel"
						}
					},
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account that this jurisdictionoverride belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the jurisdictionoverride you wish to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/JurisdictionOverrideModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["JurisdictionOverrides"],
				"summary": "Delete a single override",
				"description": "Marks the item object at this URL as deleted.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteJurisdictionOverride",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account that owns this override",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the override you wish to delete",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/jurisdictionoverrides": {
			"get": {
				"tags": ["JurisdictionOverrides"],
				"summary": "Retrieve all overrides",
				"description": "Get multiple jurisdiction override objects across all companies.\r\n            \r\nA Jurisdiction Override is a configuration setting that allows you to select the taxing\r\njurisdiction for a specific address.  If you encounter an address that is on the boundary\r\nbetween two different jurisdictions, you can choose to set up a jurisdiction override\r\nto switch this address to use different taxing jurisdictions.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "QueryJurisdictionOverrides",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* country, Jurisdictions",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[JurisdictionOverrideModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/locations": {
			"get": {
				"tags": ["Locations"],
				"summary": "Retrieve locations for this company",
				"description": "List all location objects defined for this company.\r\nAn 'Location' represents a physical address where a company does business.\r\nMany taxing authorities require that you define a list of all locations where your company does business.\r\nThese locations may require additional custom configuration or tax registration with these authorities.\r\nFor more information on metadata requirements, see the '/api/v2/definitions/locationquestions' API.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* LocationSettings\r\n* parameters\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListLocationsByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns these locations",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* settings, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[LocationModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Locations"],
				"summary": "Create a new location",
				"description": "Create one or more new location objects attached to this company.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateLocations",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The location you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/LocationModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this location.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/LocationModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/locations/{id}": {
			"get": {
				"tags": ["Locations"],
				"summary": "Retrieve a single location",
				"description": "Get the location object identified by this URL.\r\nAn 'Location' represents a physical address where a company does business.\r\nMany taxing authorities require that you define a list of all locations where your company does business.\r\nThese locations may require additional custom configuration or tax registration with these authorities.\r\nFor more information on metadata requirements, see the '/api/v2/definitions/locationquestions' API.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* LocationSettings\r\n* parameters\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetLocation",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this location",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this location",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/LocationModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Locations"],
				"summary": "Update a single location",
				"description": "Replace the existing location object at this URL with an updated object.\r\nAll data from the existing object will be replaced with data in the object you PUT.\r\nTo set a field's value to null, you may either set its value to null or omit that field from the object you post.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateLocation",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The location you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/LocationModel"
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that this location belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the location you wish to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/LocationModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Locations"],
				"summary": "Delete a single location",
				"description": "Mark the location object at this URL as deleted.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteLocation",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this location.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the location you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/locations/{id}/validate": {
			"get": {
				"tags": ["Locations"],
				"summary": "Validate the location against local requirements",
				"description": "Returns validation information for this location.\r\nThis API call is intended to compare this location against the currently known taxing authority rules and regulations,\r\nand provide information about what additional work is required to completely setup this location.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ValidateLocation",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this location",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this location",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/LocationValidationModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/locations/{locationId}/parameters": {
			"get": {
				"tags": ["Locations"],
				"summary": "Retrieve parameters for a location",
				"description": "List parameters for a location.\r\n            \r\nSome locations can be taxed differently depending on the properties of that location. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a location will be used by default in tax calculation but will not show on the transaction line referencing the location.\r\n            \r\nA parameter specified on a transaction line will override a location parameter if they share the same parameter name.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListLocationParameters",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "locationId",
						"in": "path",
						"description": "The ID of the location",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* name, unit",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[LocationParameterModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Locations"],
				"summary": "Add parameters to a location.",
				"description": "Add parameters to a location.\r\n            \r\nSome locations can be taxed differently depending on the properties of that location. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a location will be used by default in tax calculation but will not show on the transaction line referencing the location.\r\n            \r\nA parameter specified on a transaction line will override a location parameter if they share the same parameter name.\r\n            \r\nTo see available parameters for this location, call `/api/v2/definitions/parameters?$filter=attributeType eq Company`\r\n            \r\nSome parameters are only available for use if you have subscribed to specific AvaTax services. To see which parameters you are able to use, add the query parameter \"$showSubscribed=true\" to the parameter definition call above.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateLocationParameters",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The location parameters you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/LocationParameterModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this location parameter.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "locationId",
						"in": "path",
						"description": "The location id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/LocationParameterModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/locations/{locationId}/parameters/{id}": {
			"get": {
				"tags": ["Locations"],
				"summary": "Retrieve a single company location parameter",
				"description": "Retrieve a single location parameter.\r\n            \r\nSome locations can be taxed differently depending on the properties of that location. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a location will be used by default in tax calculation but will not show on the transaction line referencing the location.\r\n            \r\nA parameter specified on a transaction line will override a location parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetLocationParameter",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "locationId",
						"in": "path",
						"description": "The location id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/LocationParameterModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Locations"],
				"summary": "Update a location parameter",
				"description": "Update a location parameter.\r\n            \r\nSome locations can be taxed differently depending on the properties of that location. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a location will be used by default in tax calculation but will not show on the transaction line referencing the location.\r\n            \r\nA parameter specified on a transaction line will override a location parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateLocationParameter",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "locationId",
						"in": "path",
						"description": "The location id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The location parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The location parameter object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/LocationParameterModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/LocationParameterModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Locations"],
				"summary": "Delete a single location parameter",
				"description": "Delete a single location parameter.\r\n            \r\nSome locations can be taxed differently depending on the properties of that location. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a location will be used by default in tax calculation but will not show on the transaction line referencing the location.\r\n            \r\nA parameter specified on a transaction line will override a location parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteLocationParameter",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "locationId",
						"in": "path",
						"description": "The location id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/locations": {
			"get": {
				"tags": ["Locations"],
				"summary": "Retrieve all locations",
				"description": "Get multiple location objects across all companies.\r\nAn 'Location' represents a physical address where a company does business.\r\nMany taxing authorities require that you define a list of all locations where your company does business.\r\nThese locations may require additional custom configuration or tax registration with these authorities.\r\nFor more information on metadata requirements, see the '/api/v2/definitions/locationquestions' API.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* LocationSettings\r\n* parameters\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "QueryLocations",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* settings, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.  You may specify `LocationSettings` to retrieve location settings.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[LocationModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/multidocument": {
			"get": {
				"tags": ["MultiDocument"],
				"summary": "Retrieve all MultiDocument transactions",
				"description": "List all MultiDocument transactions within this account.\r\n            \r\nThis endpoint is limited to returning 1,000 MultiDocument transactions at a time.  To retrieve more than 1,000 MultiDocument\r\ntransactions, please use the pagination features of the API.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "ListMultiDocumentTransactions",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* documents",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in the response after transaction is created",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[MultiDocumentModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["MultiDocument"],
				"summary": "Create a new MultiDocument transaction",
				"description": "Records a new MultiDocument transaction in AvaTax.\r\n            \r\nA traditional transaction requires exactly two parties: a seller and a buyer.  MultiDocument transactions can\r\ninvolve a marketplace of vendors, each of which contributes some portion of the final transaction.  Within\r\na MultiDocument transaction, each individual buyer and seller pair are matched up and converted to a separate\r\ndocument.  This separation of documents allows each seller to file their taxes separately.\r\n            \r\nThis API will report an error if you attempt to create a transaction when one already exists with the specified `code`.\r\nIf you would like the API to automatically update the transaction when it already exists, please set the `allowAdjust`\r\nvalue to `true`.\r\n            \r\nTo generate a refund for a transaction, use the `RefundTransaction` API.\r\n            \r\nThe field `type` identifies the kind of transaction - for example, a sale, purchase, or refund.  If you do not specify\r\na `type` value, you will receive an estimate of type `SalesOrder`, which will not be recorded.\r\n            \r\nThe origin and destination locations for a transaction must be identified by either address or geocode.  For address-based transactions, please\r\nprovide addresses in the fields `line`, `city`, `region`, `country` and `postalCode`.  For geocode-based transactions, please provide the geocode\r\ninformation in the fields `latitude` and `longitude`.  If either `latitude` or `longitude` or both are null, the transaction will be calculated\r\nusing the best available address location information.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* ForceTimeout - Simulates a timeout.  This adds a 30 second delay and error to your API call.  This can be used to test your code to ensure it can respond correctly in the case of a dropped connection.\r\n            \r\nIf you omit the `$include` parameter, the API will assume you want `Summary,Addresses`.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "CreateMultiDocumentTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "the multi document transaction model",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CreateMultiDocumentModel"
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in the response after transaction is created",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MultiDocumentModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/multidocument/{code}/type/{type}": {
			"get": {
				"tags": ["MultiDocument"],
				"summary": "Retrieve a MultiDocument transaction",
				"description": "Get the current MultiDocument transaction identified by this URL.\r\n            \r\nIf this transaction was adjusted, the return value of this API will be the current transaction with this code.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "GetMultiDocumentTransactionByCodeAndType",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "code",
						"in": "path",
						"description": "",
						"required": true,
						"type": "string"
					},
					{
						"name": "type",
						"in": "path",
						"description": "",
						"required": true,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in the response after transaction is created",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MultiDocumentModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/multidocument/{code}/type/{type}/adjust": {
			"post": {
				"tags": ["MultiDocument"],
				"summary": "Adjust a MultiDocument transaction",
				"description": "Adjusts the current MultiDocument transaction uniquely identified by this URL.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nWhen you adjust a transaction, that transaction's status is recorded as `Adjusted`.\r\n            \r\nBoth the revisions will be available for retrieval based on their code and ID numbers. Only transactions in Committed status can be reported on a tax filing by Avalara's Managed Returns Service.\r\n            \r\nTransactions that have been previously reported to a tax authority by Avalara Managed Returns are considered locked and are no longer available for adjustments.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "AdjustMultiDocumentTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "code",
						"in": "path",
						"description": "The transaction code for this MultiDocument transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "type",
						"in": "path",
						"description": "The transaction type for this MultiDocument transaction",
						"required": true,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "model",
						"in": "body",
						"description": "The adjust request you wish to execute",
						"required": false,
						"schema": {
							"$ref": "#/definitions/AdjustMultiDocumentModel"
						}
					},
					{
						"name": "include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MultiDocumentModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/multidocument/{code}/type/{type}/audit": {
			"get": {
				"tags": ["MultiDocument"],
				"summary": "Get audit information about a MultiDocument transaction",
				"description": "Retrieve audit information about a MultiDocument transaction stored in AvaTax.\r\n            \r\nThe audit API retrieves audit information related to a specific MultiDocument transaction.  This audit\r\ninformation includes the following:\r\n            \r\n* The `code` of the MultiDocument transaction\r\n* The `type` of the MultiDocument transaction\r\n* The server timestamp representing the exact server time when the transaction was created\r\n* The server duration - how long it took to process this transaction\r\n* Whether exact API call details were logged\r\n* A reconstructed API call showing what the original create call looked like\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "AuditMultiDocumentTransaction",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "code",
						"in": "path",
						"description": "The transaction code for this MultiDocument transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "type",
						"in": "path",
						"description": "The transaction type for this MultiDocument transaction",
						"required": true,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AuditMultiDocumentModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/multidocument/{code}/type/{type}/refund": {
			"post": {
				"tags": ["MultiDocument"],
				"summary": "Create a refund for a MultiDocument transaction",
				"description": "Create a refund for a MultiDocument transaction.\r\n            \r\nA traditional transaction requires exactly two parties: a seller and a buyer.  MultiDocument transactions can\r\ninvolve a marketplace of vendors, each of which contributes some portion of the final transaction.  Within\r\na MultiDocument transaction, each individual buyer and seller pair are matched up and converted to a separate\r\ndocument.  This separation of documents allows each seller to file their taxes separately.\r\n            \r\nThe `RefundTransaction` API allows you to quickly and easily create a `ReturnInvoice` representing a refund\r\nfor a previously created `SalesInvoice` transaction.  You can choose to create a full or partial refund, and\r\nspecify individual line items from the original sale for refund.\r\n            \r\nThe `RefundTransaction` API ensures that the tax amount you refund to the customer exactly matches the tax that\r\nwas calculated during the original transaction, regardless of any changes to your company's configuration, rules,\r\nnexus, or any other setting.\r\n            \r\nThis API is intended to be a shortcut to allow you to quickly and accurately generate a refund for the following\r\ncommon refund scenarios:\r\n            \r\n* A full refund of a previous sale\r\n* Refunding the tax that was charged on a previous sale, when the customer provides an exemption certificate after the purchase\r\n* Refunding one or more items (lines) from a previous sale\r\n* Granting a customer a percentage refund of a previous sale\r\n            \r\nFor more complex scenarios than the ones above, please use `CreateTransaction` with document type `ReturnInvoice` to\r\ncreate a custom refund transaction.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n            \r\nIf you omit the `$include` parameter, the API will assume you want `Summary,Addresses`.\r\n\r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "RefundMultiDocumentTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "code",
						"in": "path",
						"description": "The code of this MultiDocument transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "type",
						"in": "path",
						"description": "The type of this MultiDocument transaction",
						"required": true,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "model",
						"in": "body",
						"description": "Information about the refund to create",
						"required": false,
						"schema": {
							"$ref": "#/definitions/RefundTransactionModel"
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in the response after transaction is created",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MultiDocumentModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/multidocument/{code}/type/{type}/void": {
			"post": {
				"tags": ["MultiDocument"],
				"summary": "Void a MultiDocument transaction",
				"description": "Voids the current transaction uniquely identified by this URL.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nWhen you void a transaction, that transaction's status is recorded as `DocVoided`.\r\n            \r\nTransactions that have been previously reported to a tax authority by Avalara Managed Returns Service are considered `locked`,\r\nand they are no longer available to be voided.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "VoidMultiDocumentTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "code",
						"in": "path",
						"description": "The transaction code for this MultiDocument transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "type",
						"in": "path",
						"description": "The transaction type for this MultiDocument transaction",
						"required": true,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "model",
						"in": "body",
						"description": "The void request you wish to execute",
						"required": false,
						"schema": {
							"$ref": "#/definitions/VoidTransactionModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MultiDocumentModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/multidocument/{id}": {
			"get": {
				"tags": ["MultiDocument"],
				"summary": "Retrieve a MultiDocument transaction by ID",
				"description": "Get the unique MultiDocument transaction identified by this URL.\r\n            \r\nA traditional transaction requires exactly two parties: a seller and a buyer.  MultiDocument transactions can\r\ninvolve a marketplace of vendors, each of which contributes some portion of the final transaction.  Within\r\na MultiDocument transaction, each individual buyer and seller pair are matched up and converted to a separate\r\ndocument.  This separation of documents allows each seller to file their taxes separately.\r\n            \r\nThis endpoint retrieves the exact transaction identified by this ID number even if that transaction was later adjusted\r\nby using the `AdjustTransaction` endpoint.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "GetMultiDocumentTransactionById",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of the MultiDocument transaction to retrieve",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in the response after transaction is created",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MultiDocumentModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/multidocument/commit": {
			"post": {
				"tags": ["MultiDocument"],
				"summary": "Commit a MultiDocument transaction",
				"description": "Marks a list of transactions by changing its status to `Committed`.\r\n            \r\nTransactions that are committed are available to be reported to a tax authority by Avalara Managed Returns.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nAny changes made to a committed transaction will generate a transaction history.\r\n\r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "CommitMultiDocumentTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The commit request you wish to execute",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CommitMultiDocumentModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MultiDocumentModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/multidocument/verify": {
			"post": {
				"tags": ["MultiDocument"],
				"summary": "Verify a MultiDocument transaction",
				"description": "Verifies that the MultiDocument transaction uniquely identified by this URL matches certain expected values.\r\n            \r\nIf the transaction does not match these expected values, this API will return an error code indicating which value did not match.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "VerifyMultiDocumentTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "Information from your accounting system to verify against this MultiDocument transaction as it is stored in AvaTax",
						"required": false,
						"schema": {
							"$ref": "#/definitions/VerifyMultiDocumentModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MultiDocumentModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/nexus": {
			"get": {
				"tags": ["Nexus"],
				"summary": "Retrieve nexus for this company",
				"description": "List all nexus objects defined for this company.\r\n            \r\nThe concept of Nexus indicates a place where your company is legally obligated to collect and remit transactional\r\ntaxes.  The legal requirements for nexus may vary per country and per jurisdiction; please seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\nYou may specify one or more of the following values in the '$include' parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n * Parameters\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListNexusByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns these nexus objects",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* streamlinedSalesTax, isSSTActive, taxAuthorityId, taxName, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Nexus"],
				"summary": "Create a new nexus",
				"description": "Creates one or more new nexus declarations attached to this company.\r\n            \r\nThe concept of Nexus indicates a place where your company is legally obligated to collect and remit transactional\r\ntaxes.  The legal requirements for nexus may vary per country and per jurisdiction; please seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\n            \r\nTo create a nexus declaration for your company, you must first call the Definitions API `ListNexus` to obtain a\r\nlist of Avalara-defined nexus.  Once you have determined which nexus you wish to declare, you should customize\r\nonly the user-selectable fields in this object.\r\n            \r\nThe user selectable fields for the nexus object are `companyId`, `effectiveDate`, `endDate`, `localNexusTypeId`,\r\n`taxId`, `nexusTypeId`, `hasPermanentEstablishment`, and `isSellerImporterOfRecord`.\r\n            \r\nWhen calling `CreateNexus` or `UpdateNexus`, all values in your nexus object except for the user-selectable fields\r\nmust match an Avalara-defined system nexus object.  You can retrieve a list of Avalara-defined system nexus objects\r\nby calling `ListNexus`.  If any data does not match, AvaTax may not recognize your nexus declaration.\r\n            \r\nPlease note that nexus changes may not take effect immediately and you should plan to update your nexus settings in advance\r\nof calculating tax for a location.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateNexus",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The nexus you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/NexusModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this nexus.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/NexusModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/nexus/{id}": {
			"get": {
				"tags": ["Nexus"],
				"summary": "Retrieve a single nexus",
				"description": "Get the nexus object identified by this URL.\r\n            \r\nThe concept of Nexus indicates a place where your company is legally obligated to collect and remit transactional\r\ntaxes.  The legal requirements for nexus may vary per country and per jurisdiction; please seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\nYou may specify one or more of the following values in the '$include' parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n * Parameters\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetNexus",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this nexus object",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this nexus",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NexusModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Nexus"],
				"summary": "Update a single nexus",
				"description": "Replace the existing nexus declaration object at this URL with an updated object.\r\n            \r\nThe concept of Nexus indicates a place where your company is legally obligated to collect and remit transactional\r\ntaxes.  The legal requirements for nexus may vary per country and per jurisdiction; please seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\n            \r\nTo create a nexus declaration for your company, you must first call the Definitions API `ListNexus` to obtain a\r\nlist of Avalara-defined nexus.  Once you have determined which nexus you wish to declare, you should customize\r\nonly the user-selectable fields in this object.\r\n            \r\nThe user selectable fields for the nexus object are `companyId`, `effectiveDate`, `endDate`, `localNexusTypeId`,\r\n`taxId`, `nexusTypeId`, `hasPermanentEstablishment`, and `isSellerImporterOfRecord`.\r\n            \r\nWhen calling `CreateNexus` or `UpdateNexus`, all values in your nexus object except for the user-selectable fields\r\nmust match an Avalara-defined system nexus object.  You can retrieve a list of Avalara-defined system nexus objects\r\nby calling `ListNexus`.  If any data does not match, AvaTax may not recognize your nexus declaration.\r\n            \r\nPlease note that nexus changes may not take effect immediately and you should plan to update your nexus settings in advance\r\nof calculating tax for a location.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateNexus",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The nexus object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/NexusModel"
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that this nexus belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the nexus you wish to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NexusModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Nexus"],
				"summary": "Delete a single nexus",
				"description": "Marks the existing nexus object at this URL as deleted.\r\n            \r\nThe concept of Nexus indicates a place where your company is legally obligated to collect and remit transactional\r\ntaxes.  The legal requirements for nexus may vary per country and per jurisdiction; please seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\n            \r\nPlease note that nexus changes may not take effect immediately and you should plan to update your nexus settings in advance\r\nof calculating tax for a location.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteNexus",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this nexus.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the nexus you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "cascadeDelete",
						"in": "query",
						"description": "If true, deletes all the child nexus if they exist along with parent nexus",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/nexus/{nexusId}/parameters": {
			"get": {
				"tags": ["Nexus"],
				"summary": "Retrieve parameters for a nexus",
				"description": "List parameters for a nexus.\r\nSome tax calculation and reporting are different depending on the properties of the nexus, such as isRemoteSeller. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an nexus will be used by default in tax calculation but will not show on the transaction line referencing the nexus.\r\n            \r\nA parameter specified on a transaction line will override an nexus parameter if they share the same parameter name. \r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListNexusParameters",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "nexusId",
						"in": "path",
						"description": "The nexus id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* name, unit",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusParameterDetailModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Nexus"],
				"summary": "Add parameters to a nexus.",
				"description": "Add parameters to the nexus.\r\nSome tax calculation and reporting are different depending on the properties of the nexus, such as isRemoteSeller. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an nexus will be used by default in tax calculation but will not show on the transaction line referencing the nexus.\r\n            \r\nA parameter specified on a transaction line will override an nexus parameter if they share the same parameter name.\r\n            \r\nTo see available parameters for this item, call `/api/v2/definitions/parameters?$filter=attributeType eq Nexus`\r\n            \r\nSome parameters are only available for use if you have subscribed to specific AvaTax services. To see which parameters you are able to use, add the query parameter \"$showSubscribed=true\" to the parameter definition call above.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateNexusParameters",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The nexus parameters you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/NexusParameterDetailModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this nexus parameter.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "nexusId",
						"in": "path",
						"description": "The nexus id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"201": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/NexusParameterDetailModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Nexus"],
				"summary": "Delete all parameters for an nexus",
				"description": "Delete all the parameters for a given nexus.\r\nSome tax calculation and reporting are different depending on the properties of the nexus, such as isRemoteSeller. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an nexus will be used by default in tax calculation but will not show on the transaction line referencing the nexus.\r\n            \r\nA parameter specified on a transaction line will override an nexus parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteNexusParameters",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this nexus.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "nexusId",
						"in": "path",
						"description": "The ID of the nexus you wish to delete the parameters.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/nexus/{nexusId}/parameters/{id}": {
			"get": {
				"tags": ["Nexus"],
				"summary": "Retrieve a single nexus parameter",
				"description": "Retrieve a single nexus parameter.\r\nSome tax calculation and reporting are different depending on the properties of the nexus, such as isRemoteSeller.In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an nexus will be used by default in tax calculation but will not show on the transaction line referencing the nexus.\r\n            \r\nA parameter specified on a transaction line will override an nexus parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetNexusParameter",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "nexusId",
						"in": "path",
						"description": "The nexus id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NexusParameterDetailModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Nexus"],
				"summary": "Update an nexus parameter",
				"description": "Update an nexus parameter.\r\n            \r\nSome tax calculation and reporting are different depending on the properties of the nexus, such as isRemoteSeller. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to a nexus will be used in tax calculation based on the locationcode and parameter value the transaction state line might have lines added.\r\n            \r\nA parameter specified on a transaction line will override an item parameter if they share the same parameter name.????? I dont know about this?\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateNexusParameter",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "nexusId",
						"in": "path",
						"description": "The nexus id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The nexus parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The nexus object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/NexusParameterDetailModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NexusParameterDetailModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Nexus"],
				"summary": "Delete a single nexus parameter",
				"description": "Delete a single nexus parameter.\r\nSome tax calculation and reporting are different depending on the properties of the nexus, such as isRemoteSeller. In AvaTax, these tax-affecting properties are called \"parameters\".\r\n            \r\nA parameter added to an nexus will be used by default in tax calculation but will not show on the transaction line referencing the nexus.\r\n            \r\nA parameter specified on a transaction line will override an nexus parameter if they share the same parameter name.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteNexusParameter",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The company id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "nexusId",
						"in": "path",
						"description": "The nexus id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The parameter id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/nexus/byaddress": {
			"post": {
				"tags": ["Nexus"],
				"summary": "Creates nexus for a list of addresses.",
				"description": "This call is intended to simplify adding all applicable nexus to a company, for an address or addresses. Calling this\r\nAPI declares nexus for this company, for the list of addresses provided,\r\nfor the date range provided. You may also use this API to extend effective date on an already-declared nexus.\r\n            \r\nThe concept of Nexus indicates a place where your company is legally obligated to collect and remit transactional\r\ntaxes.  The legal requirements for nexus may vary per country and per jurisdiction; please seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\n            \r\nNote that not all fields within a nexus can be updated; Avalara publishes a list of all defined nexus at the\r\n'/api/v2/definitions/nexus' endpoint.\r\n            \r\nYou may only define nexus matching the official list of declared nexus.\r\n            \r\nPlease note that nexus changes may not take effect immediately and you should plan to update your nexus settings in advance\r\nof calculating tax for a location.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeclareNexusByAddress",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that will own this nexus.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "models",
						"in": "body",
						"description": "The nexus you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/DeclareNexusByAddressModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/NexusByAddressModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/nexus/byform/{formCode}": {
			"get": {
				"tags": ["Nexus"],
				"summary": "List company nexus related to a tax form",
				"description": "Retrieves a list of nexus related to a tax form.\r\n            \r\nThe concept of Nexus indicates a place where your company is legally obligated to collect and remit transactional\r\ntaxes.  The legal requirements for nexus may vary per country and per jurisdiction; please seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\n            \r\nThis API is intended to provide useful information when examining a tax form.  If you are about to begin filing\r\na tax form, you may want to know whether you have declared nexus in all the jurisdictions related to that tax\r\nform in order to better understand how the form will be filled out.\r\nYou may specify one or more of the following values in the '$include' parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n * Parameters\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetNexusByFormCode",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this nexus object",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "formCode",
						"in": "path",
						"description": "The form code that we are looking up the nexus for",
						"required": true,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NexusByTaxFormModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/nexus": {
			"get": {
				"tags": ["Nexus"],
				"summary": "Retrieve all nexus",
				"description": "Get multiple nexus objects across all companies.\r\n            \r\nThe concept of Nexus indicates a place where your company is legally obligated to collect and remit transactional\r\ntaxes.  The legal requirements for nexus may vary per country and per jurisdiction; please seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\nYou may specify one or more of the following values in the '$include' parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n * Parameters\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "QueryNexus",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* streamlinedSalesTax, isSSTActive, taxAuthorityId, taxName, parameters",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/notifications": {
			"get": {
				"tags": ["Notifications"],
				"summary": "List all notifications.",
				"description": "List all notifications.\r\n            \r\nA notification is a message from Avalara that may have relevance to your business.  You may want\r\nto regularly review notifications and then dismiss them when you are certain that you have addressed\r\nany relevant concerns raised by this notification.\r\n            \r\nAn example of a notification would be a message about new software, or a change to AvaTax that may\r\naffect you, or a potential issue with your company's tax profile.\r\n            \r\nYou may search for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListNotifications",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[NotificationModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Registrar"],
				"summary": "Create new notifications.",
				"description": "This API is available by invitation only.\r\n            \r\nCreate a single notification.\r\n            \r\nA notification is a message from Avalara that may have relevance to your business.  You may want\r\nto regularly review notifications and then dismiss them when you are certain that you have addressed\r\nany relevant concerns raised by this notification.\r\n            \r\nA Global notification is a message which is directed to all the accounts and is set to expire within\r\na certain time and cannot be dismissed by the user. Make accountId and companyId null to create a global notification.\r\n            \r\nAn example of a notification would be a message about new software, or a change to AvaTax that may\r\naffect you, or a potential issue with your company's tax profile.\n\n### Security Policies\n\n* This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API is available by invitation only.  To request access to this feature, please speak to a business development manager and request access to [NotificationsAPI:Create].\n",
				"operationId": "CreateNotifications",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The notifications you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/NotificationModel"
							}
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/NotificationModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/notifications/{id}/dismiss": {
			"put": {
				"tags": ["Notifications"],
				"summary": "Mark a single notification as dismissed.",
				"description": "Marks the notification identified by this URL as dismissed.\r\n            \r\nA notification is a message from Avalara that may have relevance to your business.  You may want\r\nto regularly review notifications and then dismiss them when you are certain that you have addressed\r\nany relevant concerns raised by this notification.\r\n            \r\nAn example of a notification would be a message about new software, or a change to AvaTax that may\r\naffect you, or a potential issue with your company's tax profile.\r\n            \r\nWhen you dismiss a notification, the notification will track the user and time when it was\r\ndismissed.  You can then later review which employees of your company dismissed notifications to\r\ndetermine if they were resolved appropriately.\r\n            \r\nA Global notification with null accountId and companyId cannot be dismissed and will expire within a given time span.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "DismissNotification",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The id of the notification you wish to mark as dismissed.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NotificationModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{id}/entitlements/{offer}": {
			"post": {
				"tags": ["Provisioning"],
				"summary": "Request a new entitilement to an existing customer",
				"description": "This API is for use by partner provisioning services customers only. This will allow the partners to allow\r\nthe add new entitlement to an existing customer\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API is available by invitation only.\n* This API is available by invitation only.  To request access to this feature, please speak to a business development manager and request access to [Provisioning:RequestNewAccount].\n",
				"operationId": "RequestNewEntitlement",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The avatax account id of the customer",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "offer",
						"in": "path",
						"description": "The offer to be added to an already existing customer",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/OfferModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/request": {
			"post": {
				"tags": ["Provisioning"],
				"summary": "Request a new Avalara account",
				"description": "This API is for use by partner provisioning services customers only.\r\n            \r\nAvalara invites select partners to refer new customers to the AvaTax service using the onboarding features\r\nof AvaTax.  These partners can create accounts for new customers using this API.\r\n            \r\nCalling this API creates an account with the specified product subscriptions, but does not configure billing.\r\nThe customer will receive information from Avalara about how to configure billing for their account.\r\nYou should call this API when a customer has requested to begin using Avalara services.\r\n            \r\nIf the newly created account owner wishes, they can confirm that they have read and agree to the Avalara\r\nterms and conditions.  If they do so, they can receive a license key as part of this API and their\r\nAPI will be created in `Active` status.  If the customer has not yet read and accepted these terms and\r\nconditions, the account will be created in `New` status and they can receive a license key by logging\r\nonto the AvaTax website and reviewing terms and conditions online.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API is available by invitation only.\n* This API is available by invitation only.  To request access to this feature, please speak to a business development manager and request access to [Provisioning:RequestNewAccount].\n",
				"operationId": "RequestNewAccount",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "Information about the account you wish to create and the selected product offerings.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/NewAccountRequestModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NewAccountModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{accountId}/subscriptions/{id}": {
			"get": {
				"tags": ["Subscriptions"],
				"summary": "Retrieve a single subscription",
				"description": "Get the subscription object identified by this URL.\r\nA 'subscription' indicates a licensed subscription to a named Avalara service.\r\nTo request or remove subscriptions, please contact Avalara sales or your customer account manager.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetSubscription",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account that owns this subscription",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this subscription",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SubscriptionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Registrar"],
				"summary": "Update a single subscription",
				"description": "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar administrative users only.\r\n            \r\nReplace the existing subscription object at this URL with an updated object.\r\nA 'subscription' indicates a licensed subscription to a named Avalara service.\r\nTo request or remove subscriptions, please contact Avalara sales or your customer account manager.\r\nAll data from the existing object will be replaced with data in the object you PUT.\r\nTo set a field's value to null, you may either set its value to null or omit that field from the object you post.\n\n### Security Policies\n\n* This API requires one of the following user roles: Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateSubscription",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The subscription you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/SubscriptionModel"
						}
					},
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account that this subscription belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the subscription you wish to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SubscriptionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Registrar"],
				"summary": "Delete a single subscription",
				"description": "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar administrative users only.\r\n            \r\nMark the existing account identified by this URL as deleted.\n\n### Security Policies\n\n* This API requires one of the following user roles: Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteSubscription",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account that owns this subscription.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the subscription you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{id}": {
			"get": {
				"tags": ["Accounts"],
				"summary": "Retrieve a single account",
				"description": "Get the account object identified by this URL.\r\nYou may use the '$include' parameter to fetch additional nested data:\r\n            \r\n* Subscriptions\r\n* Users\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetAccount",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the account to retrieve",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of special fetch options",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Registrar"],
				"summary": "Update a single account",
				"description": "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar administrative users only.\r\n            \r\nReplace an existing account object with an updated account object.\n\n### Security Policies\n\n* This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateAccount",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The account object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/AccountModel"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the account you wish to update.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AccountModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Registrar"],
				"summary": "Delete a single account",
				"description": "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar administrative users only.\r\n            \r\nDelete an account.\r\nDeleting an account will delete all companies, all account level users and license keys attached to this account.\n\n### Security Policies\n\n* This API requires the user role SystemAdmin.\n",
				"operationId": "DeleteAccount",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the account you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/notifications/{id}": {
			"get": {
				"tags": ["Notifications"],
				"summary": "Retrieve a single notification.",
				"description": "Retrieve a single notification by its unique ID number.\r\n            \r\nA notification is a message from Avalara that may have relevance to your business.  You may want\r\nto regularly review notifications and then dismiss them when you are certain that you have addressed\r\nany relevant concerns raised by this notification.\r\n            \r\nAn example of a notification would be a message about new software, or a change to AvaTax that may\r\naffect you, or a potential issue with your company's tax profile.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetNotification",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The id of the notification to retrieve.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NotificationModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Registrar"],
				"summary": "Update a single notification.",
				"description": "This API is available by invitation only.\r\n            \r\nReplaces the notification identified by this URL with a new notification.\r\n            \r\nA notification is a message from Avalara that may have relevance to your business.  You may want\r\nto regularly review notifications and then dismiss them when you are certain that you have addressed\r\nany relevant concerns raised by this notification.\r\n            \r\nAn example of a notification would be a message about new software, or a change to AvaTax that may\r\naffect you, or a potential issue with your company's tax profile.\n\n### Security Policies\n\n* This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API is available by invitation only.  To request access to this feature, please speak to a business development manager and request access to [NotificationsAPI:Create].\n",
				"operationId": "UpdateNotification",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The notification object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/NotificationModel"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "The id of the notification you wish to update.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/NotificationModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Registrar"],
				"summary": "Delete a single notification.",
				"description": "This API is available by invitation only.\r\n            \r\nDelete the existing notification identified by this URL.\r\n            \r\nA notification is a message from Avalara that may have relevance to your business.  You may want\r\nto regularly review notifications and then dismiss them when you are certain that you have addressed\r\nany relevant concerns raised by this notification.\r\n            \r\nAn example of a notification would be a message about new software, or a change to AvaTax that may\r\naffect you, or a potential issue with your company's tax profile.\n\n### Security Policies\n\n* This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API is available by invitation only.  To request access to this feature, please speak to a business development manager and request access to [NotificationsAPI:Create].\n",
				"operationId": "DeleteNotification",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The id of the notification you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/passwords/{userId}/reset": {
			"post": {
				"tags": ["Registrar"],
				"summary": "Reset a user's password programmatically",
				"description": "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar administrative users only.\r\n            \r\nAllows a system admin to reset the password for a specific user via the API.\r\nThis API is only available for Avalara Registrar Admins, and can be used to reset the password of any\r\nuser based on internal Avalara business processes.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API is available to Avalara system-level (registrar-level) users only.\n",
				"operationId": "ResetPassword",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The new password for this user",
						"required": false,
						"schema": {
							"$ref": "#/definitions/SetPasswordModel"
						}
					},
					{
						"name": "userId",
						"in": "path",
						"description": "The unique ID of the user whose password will be changed",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "unmigrateFromAi",
						"in": "query",
						"description": "If user's password was migrated to AI, undo this.",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/reports/exportdocumentline/initiate": {
			"post": {
				"tags": ["Reports"],
				"summary": "Initiate an ExportDocumentLine report task",
				"description": "Begins running an `ExportDocumentLine` report task and returns the identity of the report.\r\n            \r\nReports are run as asynchronous report tasks on the server.  When complete, the report file will be available for download\r\nfor up to 30 days after completion.  To run an asynchronous report, you should follow these steps:\r\n            \r\n* Begin a report by calling the report's Initiate API.  There is a separate initiate API call for each report type.\r\n* In the result of the Initiate API, you receive back a report's `id` value.\r\n* Check the status of a report by calling `GetReport` and passing in the report's `id` value.\r\n* When a report's status is `Completed`, call `DownloadReport` to retrieve the file.\r\n            \r\nThe `ExportDocumentLine` report produces information about invoice lines recorded within your account.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "InitiateExportDocumentLineReport",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The unique ID number of the company to report on.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "model",
						"in": "body",
						"description": "Options that may be configured to customize the report.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/ExportDocumentLineModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ReportModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/reports": {
			"get": {
				"tags": ["Reports"],
				"summary": "List all report tasks for account",
				"description": "List all report tasks for your account.\r\n            \r\nReports are run as asynchronous report tasks on the server.  When complete, the report file will be available for download\r\nfor up to 30 days after completion.  To run an asynchronous report, you should follow these steps:\r\n            \r\n* Begin a report by calling the report's Initiate API.  There is a separate initiate API call for each report type.\r\n* In the result of the Initiate API, you receive back a report's `id` value.\r\n* Check the status of a report by calling `GetReport` and passing in the report's `id` value.\r\n* When a report's status is `Completed`, call `DownloadReport` to retrieve the file.\r\n            \r\nThis API call returns information about all report types across your entire account.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListReports",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "query",
						"description": "The id of the company for which to get reports.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "pageKey",
						"in": "query",
						"description": "Provide a page key to retrieve the next page of results.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32",
						"default": 25
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[ReportModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/reports/{id}": {
			"get": {
				"tags": ["Reports"],
				"summary": "Retrieve a single report",
				"description": "Retrieve a single report by its unique ID number.\r\n            \r\nReports are run as asynchronous report tasks on the server.  When complete, the report file will be available for download\r\nfor up to 30 days after completion.  To run an asynchronous report, you should follow these steps:\r\n            \r\n* Begin a report by calling the report's Initiate API.  There is a separate initiate API call for each report type.\r\n* In the result of the Initiate API, you receive back a report's `id` value.\r\n* Check the status of a report by calling `GetReport` and passing in the report's `id` value.\r\n* When a report's status is `Completed`, call `DownloadReport` to retrieve the file.\r\n            \r\nThis API call returns information about any report type.",
				"operationId": "GetReport",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of the report to retrieve",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ReportModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/reports/{id}/attachment": {
			"get": {
				"tags": ["Reports"],
				"summary": "Download a report",
				"description": "This API downloads the file associated with a report.\r\n            \r\nIf the report is not yet complete, you will receive a `ReportNotFinished` error.  To check if a report is complete,\r\nuse the `GetReport` API.\r\n            \r\nReports are run as asynchronous report tasks on the server.  When complete, the report file will be available for download\r\nfor up to 30 days after completion.  To run an asynchronous report, you should follow these steps:\r\n            \r\n* Begin a report by calling the report's Initiate API.  There is a separate initiate API call for each report type.\r\n* In the result of the Initiate API, you receive back a report's `id` value.\r\n* Check the status of a report by calling `GetReport` and passing in the report's `id` value.\r\n* When a report's status is `Completed`, call `DownloadReport` to retrieve the file.\r\n            \r\nThis API works for all report types.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "DownloadReport",
				"consumes": [],
				"produces": ["application/json", "application/octet-stream"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of this report",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"format": "byte",
							"type": "file"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/settings": {
			"get": {
				"tags": ["Settings"],
				"summary": "Retrieve all settings for this company",
				"description": "List all setting objects attached to this company.\r\n            \r\nThe company settings system is a metadata system that you can use to store extra information\r\nabout a company.  Your integration or connector could use this data storage to keep track of\r\npreference information, reminders, or any other storage that would need to persist even if\r\nthe customer uninstalls your application.\r\n            \r\nA setting can refer to any type of data you need to remember about this company object.\r\nWhen creating this object, you may define your own `set`, `name`, and `value` parameters.\r\nTo define your own values, please choose a `set` name that begins with `X-` to indicate an extension.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListSettingsByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns these settings",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[SettingModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Settings"],
				"summary": "Create a new setting",
				"description": "Create one or more new setting objects attached to this company.\r\n            \r\nThe company settings system is a metadata system that you can use to store extra information\r\nabout a company.  Your integration or connector could use this data storage to keep track of\r\npreference information, reminders, or any other storage that would need to persist even if\r\nthe customer uninstalls your application.\r\n            \r\nA setting can refer to any type of data you need to remember about this company object.\r\nWhen creating this object, you may define your own `set`, `name`, and `value` parameters.\r\nTo define your own values, please choose a `set` name that begins with `X-` to indicate an extension.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateSettings",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The setting you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/SettingModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this setting.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/SettingModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/settings/{id}": {
			"get": {
				"tags": ["Settings"],
				"summary": "Retrieve a single setting",
				"description": "Get a single setting object by its unique ID.\r\n            \r\nThe company settings system is a metadata system that you can use to store extra information\r\nabout a company.  Your integration or connector could use this data storage to keep track of\r\npreference information, reminders, or any other storage that would need to persist even if\r\nthe customer uninstalls your application.\r\n            \r\nA setting can refer to any type of data you need to remember about this company object.\r\nWhen creating this object, you may define your own `set`, `name`, and `value` parameters.\r\nTo define your own values, please choose a `set` name that begins with `X-` to indicate an extension.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetSetting",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this setting",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this setting",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SettingModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Settings"],
				"summary": "Update a single setting",
				"description": "Replace the existing setting object at this URL with an updated object.\r\n            \r\nThe company settings system is a metadata system that you can use to store extra information\r\nabout a company.  Your integration or connector could use this data storage to keep track of\r\npreference information, reminders, or any other storage that would need to persist even if\r\nthe customer uninstalls your application.\r\n            \r\nA setting can refer to any type of data you need to remember about this company object.\r\nWhen creating this object, you may define your own `set`, `name`, and `value` parameters.\r\nTo define your own values, please choose a `set` name that begins with `X-` to indicate an extension.\r\n            \r\nAll data from the existing object will be replaced with data in the object you `PUT`.\r\n            \r\nTo set a field's value to `null`, you may either set its value to `null` or omit that field from the object when calling update.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateSetting",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The setting you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/SettingModel"
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that this setting belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the setting you wish to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SettingModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Settings"],
				"summary": "Delete a single setting",
				"description": "Mark the setting object at this URL as deleted.\r\n            \r\nThe company settings system is a metadata system that you can use to store extra information\r\nabout a company.  Your integration or connector could use this data storage to keep track of\r\npreference information, reminders, or any other storage that would need to persist even if\r\nthe customer uninstalls your application.\r\n            \r\nA setting can refer to any type of data you need to remember about this company object.\r\nWhen creating this object, you may define your own `set`, `name`, and `value` parameters.\r\nTo define your own values, please choose a `set` name that begins with `X-` to indicate an extension.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteSetting",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this setting.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the setting you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/settings": {
			"get": {
				"tags": ["Settings"],
				"summary": "Retrieve all settings",
				"description": "Get multiple setting objects across all companies.\r\n            \r\nThe company settings system is a metadata system that you can use to store extra information\r\nabout a company.  Your integration or connector could use this data storage to keep track of\r\npreference information, reminders, or any other storage that would need to persist even if\r\nthe customer uninstalls your application.\r\n            \r\nA setting can refer to any type of data you need to remember about this company object.\r\nWhen creating this object, you may define your own `set`, `name`, and `value` parameters.\r\nTo define your own values, please choose a `set` name that begins with `X-` to indicate an extension.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "QuerySettings",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[SettingModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{accountId}/subscriptions": {
			"get": {
				"tags": ["Subscriptions"],
				"summary": "Retrieve subscriptions for this account",
				"description": "List all subscription objects attached to this account.\r\nA 'subscription' indicates a licensed subscription to a named Avalara service.\r\nTo request or remove subscriptions, please contact Avalara sales or your customer account manager.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListSubscriptionsByAccount",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account that owns these subscriptions",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* subscriptionDescription",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[SubscriptionModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Registrar"],
				"summary": "Create a new subscription",
				"description": "This API is for use by Avalara Registrar administrative users only.\r\n            \r\nCreate one or more new subscription objects attached to this account.\r\nA 'subscription' indicates a licensed subscription to a named Avalara service.\r\nTo request or remove subscriptions, please contact Avalara sales or your customer account manager.\n\n### Security Policies\n\n* This API requires one of the following user roles: Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateSubscriptions",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The subscription you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/SubscriptionModel"
							}
						}
					},
					{
						"name": "accountId",
						"in": "path",
						"description": "The ID of the account that owns this subscription.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/SubscriptionModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/subscriptions": {
			"get": {
				"tags": ["Subscriptions"],
				"summary": "Retrieve all subscriptions",
				"description": "Get multiple subscription objects across all accounts.\r\nA 'subscription' indicates a licensed subscription to a named Avalara service.\r\nTo request or remove subscriptions, please contact Avalara sales or your customer account manager.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "QuerySubscriptions",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* subscriptionDescription",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[SubscriptionModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/taxcodes": {
			"get": {
				"tags": ["TaxCodes"],
				"summary": "Retrieve tax codes for this company",
				"description": "List all taxcode objects attached to this company.\r\nA 'TaxCode' represents a uniquely identified type of product, good, or service.\r\nAvalara supports correct tax rates and taxability rules for all TaxCodes in all supported jurisdictions.\r\nIf you identify your products by tax code in your 'Create Transacion' API calls, Avalara will correctly calculate tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListTaxCodesByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns these tax codes",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxCodeModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["TaxCodes"],
				"summary": "Create a new tax code",
				"description": "Create one or more new taxcode objects attached to this company.\r\nA 'TaxCode' represents a uniquely identified type of product, good, or service.\r\nAvalara supports correct tax rates and taxability rules for all TaxCodes in all supported jurisdictions.\r\nIf you identify your products by tax code in your 'Create Transacion' API calls, Avalara will correctly calculate tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateTaxCodes",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The tax code you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/TaxCodeModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this tax code.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/TaxCodeModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/taxcodes/{id}": {
			"get": {
				"tags": ["TaxCodes"],
				"summary": "Retrieve a single tax code",
				"description": "Get the taxcode object identified by this URL.\r\nA 'TaxCode' represents a uniquely identified type of product, good, or service.\r\nAvalara supports correct tax rates and taxability rules for all TaxCodes in all supported jurisdictions.\r\nIf you identify your products by tax code in your 'Create Transacion' API calls, Avalara will correctly calculate tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetTaxCode",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this tax code",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this tax code",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TaxCodeModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["TaxCodes"],
				"summary": "Update a single tax code",
				"description": "Replace the existing taxcode object at this URL with an updated object.\r\nA 'TaxCode' represents a uniquely identified type of product, good, or service.\r\nAvalara supports correct tax rates and taxability rules for all TaxCodes in all supported jurisdictions.\r\nIf you identify your products by tax code in your 'Create Transacion' API calls, Avalara will correctly calculate tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\r\nAll data from the existing object will be replaced with data in the object you PUT.\r\nTo set a field's value to null, you may either set its value to null or omit that field from the object you post.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateTaxCode",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The tax code you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/TaxCodeModel"
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that this tax code belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the tax code you wish to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TaxCodeModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["TaxCodes"],
				"summary": "Delete a single tax code",
				"description": "Marks the existing TaxCode object at this URL as deleted.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteTaxCode",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this tax code.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the tax code you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/taxcodes": {
			"get": {
				"tags": ["TaxCodes"],
				"summary": "Retrieve all tax codes",
				"description": "Get multiple taxcode objects across all companies.\r\nA 'TaxCode' represents a uniquely identified type of product, good, or service.\r\nAvalara supports correct tax rates and taxability rules for all TaxCodes in all supported jurisdictions.\r\nIf you identify your products by tax code in your 'Create Transacion' API calls, Avalara will correctly calculate tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "QueryTaxCodes",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxCodeModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/locations/{id}/pointofsaledata": {
			"get": {
				"tags": ["TaxContent"],
				"summary": "Build a tax content file for a single location",
				"description": "Builds a tax content file containing information useful for a retail point-of-sale solution.\r\n            \r\nSince tax rates may change based on decisions made by a variety of tax authorities, we recommend\r\nthat users of this tax content API download new data every day.  Many tax authorities may finalize\r\ndecisions on tax changes at unexpected times and may make changes in response to legal issues or\r\ngovernmental priorities.  Any tax content downloaded for future time periods is subject to change\r\nif tax rates or tax laws change.\r\n            \r\nA TaxContent file contains a matrix of the taxes that would be charged when you sell any of your\r\nItems at any of your Locations.  To create items, use `CreateItems()`.  To create locations, use\r\n`CreateLocations()`.  The file is built by looking up the tax profile for your location and your\r\nitem and calculating taxes for each in turn.  To include a custom `TaxCode` in this tax content\r\nfile, first create the custom tax code using `CreateTaxCodes()` to create the custom tax code,\r\nthen use `CreateItems()` to create an item that uses the custom tax code.\r\n            \r\nThis data file can be customized for specific partner devices and usage conditions.\r\n            \r\nThe result of this API is the file you requested in the format you requested using the `responseType` field.\r\n            \r\nThis API builds the file on demand, and is limited to files with no more than 7500 scenarios.  To build a tax content\r\nfile for a multiple locations in a single file, please use `BuildTaxContentFile`.\r\n            \r\nNOTE: This API does not work for Tennessee tax holiday scenarios.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "BuildTaxContentFileForLocation",
				"consumes": [],
				"produces": ["application/json", "application/octet-stream"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID number of the company that owns this location.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID number of the location to retrieve point-of-sale data.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "date",
						"in": "query",
						"description": "The date for which point-of-sale data would be calculated (today by default)",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "format",
						"in": "query",
						"description": "The format of the file (JSON by default)",
						"required": false,
						"type": "string",
						"enum": ["Json", "Csv", "Xml"],
						"x-enum-metadata": {
							"name": "PointOfSaleFileType",
							"values": [
								{
									"name": "Json",
									"value": 0
								},
								{
									"name": "Csv",
									"value": 1
								},
								{
									"name": "Xml",
									"value": 2
								}
							]
						}
					},
					{
						"name": "partnerId",
						"in": "query",
						"description": "If specified, requests a custom partner-formatted version of the file.",
						"required": false,
						"type": "string",
						"enum": ["DMA", "AX7"],
						"x-enum-metadata": {
							"name": "PointOfSalePartnerId",
							"values": [
								{
									"name": "DMA",
									"value": 1
								},
								{
									"name": "AX7",
									"value": 2
								}
							]
						}
					},
					{
						"name": "includeJurisCodes",
						"in": "query",
						"description": "When true, the file will include jurisdiction codes in the result.",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"format": "byte",
							"type": "file"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/pointofsaledata/build": {
			"post": {
				"tags": ["TaxContent"],
				"summary": "Build a multi-location tax content file",
				"description": "Builds a tax content file containing information useful for a retail point-of-sale solution.\r\n            \r\nSince tax rates may change based on decisions made by a variety of tax authorities, we recommend\r\nthat users of this tax content API download new data every day.  Many tax authorities may finalize\r\ndecisions on tax changes at unexpected times and may make changes in response to legal issues or\r\ngovernmental priorities.  Any tax content downloaded for future time periods is subject to change\r\nif tax rates or tax laws change.\r\n            \r\nA TaxContent file contains a matrix of the taxes that would be charged when you sell any of your\r\nItems at any of your Locations.  To create items, use `CreateItems()`.  To create locations, use\r\n`CreateLocations()`.  The file is built by looking up the tax profile for your location and your\r\nitem and calculating taxes for each in turn.  To include a custom `TaxCode` in this tax content\r\nfile, first create the custom tax code using `CreateTaxCodes()` to create the custom tax code,\r\nthen use `CreateItems()` to create an item that uses the custom tax code.\r\n            \r\nThis data file can be customized for specific partner devices and usage conditions.\r\n            \r\nThe result of this API is the file you requested in the format you requested using the `responseType` field.\r\n            \r\nThis API builds the file on demand, and is limited to files with no more than 7500 scenarios.  To build a tax content\r\nfile for a single location at a time, please use `BuildTaxContentFileForLocation`.\r\n            \r\nNOTE: This API does not work for Tennessee tax holiday scenarios.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro.\n",
				"operationId": "BuildTaxContentFile",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json", "application/octet-stream"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "Parameters about the desired file format and report format, specifying which company, locations and TaxCodes to include.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/PointOfSaleDataRequestModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"format": "byte",
							"type": "file"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/taxratesbyzipcode/download/{date}": {
			"get": {
				"tags": ["TaxContent"],
				"summary": "Download a file listing tax rates by postal code",
				"description": "Download a CSV file containing all five digit postal codes in the United States and their sales\r\nand use tax rates for tangible personal property.\r\n            \r\nSince tax rates may change based on decisions made by a variety of tax authorities, we recommend\r\nthat users of this tax content API download new data every day.  Many tax authorities may finalize\r\ndecisions on tax changes at unexpected times and may make changes in response to legal issues or\r\ngovernmental priorities.  Any tax content downloaded for future time periods is subject to change\r\nif tax rates or tax laws change.\r\n            \r\nThis rates file is intended to be used as a default for tax calculation when your software cannot\r\ncall the `CreateTransaction` API call.  When using this file, your software will be unable to\r\nhandle complex tax rules such as:\r\n            \r\n* Zip+4 - This tax file contains five digit zip codes only.\r\n* Different product types - This tax file contains tangible personal property tax rates only.\r\n* Mixed sourcing - This tax file cannot be used to resolve origin-based taxes.\r\n* Threshold-based taxes - This tax file does not contain information about thresholds.\r\n            \r\nIf you use this file to provide default tax rates, please ensure that your software calls `CreateTransaction`\r\nto reconcile the actual transaction and determine the difference between the estimated general tax\r\nrate and the final transaction tax.\r\n            \r\nThe file provided by this API is in CSV format with the following columns:\r\n            \r\n* ZIP_CODE - The five digit zip code for this record.\r\n* STATE_ABBREV - A valid two character US state abbreviation for this record.  Zip codes may span multiple states.\r\n* COUNTY_NAME - A valid county name for this record.  Zip codes may span multiple counties.\r\n* CITY_NAME - A valid city name for this record.  Zip codes may span multiple cities.\r\n* STATE_SALES_TAX - The state component of the sales tax rate.\r\n* STATE_USE_TAX - The state component of the use tax rate.\r\n* COUNTY_SALES_TAX - The county component of the sales tax rate.\r\n* COUNTY_USE_TAX - The county component of the use tax rate.\r\n* CITY_SALES_TAX - The city component of the sales tax rate.\r\n* CITY_USE_TAX - The city component of the use tax rate.\r\n* TOTAL_SALES_TAX - The total tax rate for sales tax for this postal code.  This value may not equal the sum of the state/county/city due to special tax jurisdiction rules.\r\n* TOTAL_USE_TAX - The total tax rate for use tax for this postal code.  This value may not equal the sum of the state/county/city due to special tax jurisdiction rules.\r\n* TAX_SHIPPING_ALONE - This column contains 'Y' if shipping is taxable.\r\n* TAX_SHIPPING_AND_HANDLING_TOGETHER - This column contains 'Y' if shipping and handling are taxable when sent together.\r\n            \r\nFor more detailed tax content, please use the `BuildTaxContentFile` API which allows usage of exact items and exact locations.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "DownloadTaxRatesByZipCode",
				"consumes": [],
				"produces": ["application/json", "application/octet-stream"],
				"parameters": [
					{
						"name": "date",
						"in": "path",
						"description": "The date for which point-of-sale data would be calculated (today by default). Example input: 2016-12-31",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "region",
						"in": "query",
						"description": "A two character region code which limits results to a specific region.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"format": "byte",
							"type": "file"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/taxrules": {
			"get": {
				"tags": ["TaxRules"],
				"summary": "Retrieve tax rules for this company",
				"description": "List all taxrule objects attached to this company.\r\n            \r\nA tax rule represents a rule that changes the default AvaTax behavior for a product or jurisdiction.  Custom tax rules\r\ncan be used to change the taxability of an item, to change the tax base of an item, or to change the tax rate\r\ncharged when selling an item.  Tax rules can also change tax behavior depending on the `entityUseCode` value submitted\r\nwith the transaction.\r\n            \r\nYou can create custom tax rules to customize the behavior of AvaTax to match specific rules that are custom to your\r\nbusiness.  If you have obtained a ruling from a tax auditor that requires custom tax calculations, you can use\r\ncustom tax rules to redefine the behavior for your company or item.\r\n            \r\nPlease use custom tax rules carefully and ensure that these tax rules match the behavior agreed upon with your\r\nauditor, legal representative, and accounting team.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "ListTaxRules",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns these tax rules",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* taxCode, rateTypeCode, taxTypeGroup, taxSubType",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxRuleModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["TaxRules"],
				"summary": "Create a new tax rule",
				"description": "Create one or more custom tax rules attached to this company.\r\n            \r\nA tax rule represents a rule that changes the default AvaTax behavior for a product or jurisdiction.  Custom tax rules\r\ncan be used to change the taxability of an item, to change the tax base of an item, or to change the tax rate\r\ncharged when selling an item.  Tax rules can also change tax behavior depending on the `entityUseCode` value submitted\r\nwith the transaction.\r\n            \r\nYou can create custom tax rules to customize the behavior of AvaTax to match specific rules that are custom to your\r\nbusiness.  If you have obtained a ruling from a tax auditor that requires custom tax calculations, you can use\r\ncustom tax rules to redefine the behavior for your company or item.\r\n            \r\nPlease use custom tax rules carefully and ensure that these tax rules match the behavior agreed upon with your\r\nauditor, legal representative, and accounting team.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CreateTaxRules",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The tax rule you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/TaxRuleModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this tax rule.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/TaxRuleModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/taxrules/{id}": {
			"get": {
				"tags": ["TaxRules"],
				"summary": "Retrieve a single tax rule",
				"description": "Get the taxrule object identified by this URL.\r\n            \r\nA tax rule represents a rule that changes the default AvaTax behavior for a product or jurisdiction.  Custom tax rules\r\ncan be used to change the taxability of an item, to change the tax base of an item, or to change the tax rate\r\ncharged when selling an item.  Tax rules can also change tax behavior depending on the `entityUseCode` value submitted\r\nwith the transaction.\r\n            \r\nYou can create custom tax rules to customize the behavior of AvaTax to match specific rules that are custom to your\r\nbusiness.  If you have obtained a ruling from a tax auditor that requires custom tax calculations, you can use\r\ncustom tax rules to redefine the behavior for your company or item.\r\n            \r\nPlease use custom tax rules carefully and ensure that these tax rules match the behavior agreed upon with your\r\nauditor, legal representative, and accounting team.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "GetTaxRule",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this tax rule",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this tax rule",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TaxRuleModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["TaxRules"],
				"summary": "Update a single tax rule",
				"description": "Replace the existing custom tax rule object at this URL with an updated object.\r\n            \r\nA tax rule represents a rule that changes the default AvaTax behavior for a product or jurisdiction.  Custom tax rules\r\ncan be used to change the taxability of an item, to change the tax base of an item, or to change the tax rate\r\ncharged when selling an item.  Tax rules can also change tax behavior depending on the `entityUseCode` value submitted\r\nwith the transaction.\r\n            \r\nYou can create custom tax rules to customize the behavior of AvaTax to match specific rules that are custom to your\r\nbusiness.  If you have obtained a ruling from a tax auditor that requires custom tax calculations, you can use\r\ncustom tax rules to redefine the behavior for your company or item.\r\n            \r\nPlease use custom tax rules carefully and ensure that these tax rules match the behavior agreed upon with your\r\nauditor, legal representative, and accounting team.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "UpdateTaxRule",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The tax rule you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/TaxRuleModel"
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that this tax rule belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the tax rule you wish to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TaxRuleModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["TaxRules"],
				"summary": "Delete a single tax rule",
				"description": "Mark the custom tax rule identified by this URL as deleted.\r\n            \r\nA tax rule represents a rule that changes the default AvaTax behavior for a product or jurisdiction.  Custom tax rules\r\ncan be used to change the taxability of an item, to change the tax base of an item, or to change the tax rate\r\ncharged when selling an item.  Tax rules can also change tax behavior depending on the `entityUseCode` value submitted\r\nwith the transaction.\r\n            \r\nYou can create custom tax rules to customize the behavior of AvaTax to match specific rules that are custom to your\r\nbusiness.  If you have obtained a ruling from a tax auditor that requires custom tax calculations, you can use\r\ncustom tax rules to redefine the behavior for your company or item.\r\n            \r\nPlease use custom tax rules carefully and ensure that these tax rules match the behavior agreed upon with your\r\nauditor, legal representative, and accounting team.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "DeleteTaxRule",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this tax rule.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the tax rule you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/taxrules": {
			"get": {
				"tags": ["TaxRules"],
				"summary": "Retrieve all tax rules",
				"description": "Get multiple taxrule objects across all companies.\r\n            \r\nA tax rule represents a rule that changes the default AvaTax behavior for a product or jurisdiction.  Custom tax rules\r\ncan be used to change the taxability of an item, to change the tax base of an item, or to change the tax rate\r\ncharged when selling an item.  Tax rules can also change tax behavior depending on the `entityUseCode` value submitted\r\nwith the transaction.\r\n            \r\nYou can create custom tax rules to customize the behavior of AvaTax to match specific rules that are custom to your\r\nbusiness.  If you have obtained a ruling from a tax auditor that requires custom tax calculations, you can use\r\ncustom tax rules to redefine the behavior for your company or item.\r\n            \r\nPlease use custom tax rules carefully and ensure that these tax rules match the behavior agreed upon with your\r\nauditor, legal representative, and accounting team.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n",
				"operationId": "QueryTaxRules",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* taxCode, rateTypeCode, taxTypeGroup, taxSubType",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxRuleModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions": {
			"get": {
				"tags": ["Transactions"],
				"summary": "Retrieve all transactions",
				"description": "List all transactions attached to this company.\r\n            \r\nThis endpoint is limited to returning 1,000 transactions at a time maximum.\r\n            \r\nWhen listing transactions, you must specify a `date` range filter.  If you do not specify a `$filter` that includes a `date` field\r\ncriteria, the query will default to looking at only those transactions with `date` in the past 30 days.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "ListTransactionsByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "dataSourceId",
						"in": "query",
						"description": "Optionally filter transactions to those from a specific data source.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br />*Not filterable:* totalDiscount, lines, addresses, locationTypes, summary, taxDetailsByTaxType, parameters, messages, invoiceMessages, isFakeTransaction",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[TransactionModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}": {
			"get": {
				"tags": ["Transactions"],
				"summary": "Retrieve a single transaction by code",
				"description": "Get the current transaction identified by this company code, transaction code, and document type.\r\n            \r\nA transaction is uniquely identified by `companyCode`, `code` (often called Transaction Code), and `documentType`.\r\n            \r\nFor compatibility purposes, when this API finds multiple transactions with the same transaction code, and if you have not specified\r\nthe `type` parameter to this API, it will default to selecting the `SalesInvoices` transaction. To change this behavior, use the\r\noptional `documentType` parameter to specify the specific document type you wish to find.\r\n            \r\nIf this transaction was adjusted, the return value of this API will be the current transaction with this code.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "GetTransactionByCode",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to retrieve",
						"required": true,
						"type": "string"
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to retrieve",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/adjust": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Correct a previously created transaction",
				"description": "Replaces the current transaction uniquely identified by this URL with a new transaction.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nWhen you adjust a committed transaction, the original transaction will be updated with the status code `Adjusted`, and\r\nboth revisions will be available for retrieval based on their code and ID numbers.\r\nOnly transactions in `Committed` status are reported by Avalara Managed Returns.\r\n            \r\nTransactions that have been previously reported to a tax authority by Avalara Managed Returns are considered `locked` and are\r\nno longer available for adjustments.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "AdjustTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to adjust",
						"required": true,
						"type": "string"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The adjustment you wish to make",
						"required": false,
						"schema": {
							"$ref": "#/definitions/AdjustTransactionModel"
						}
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to adjust.",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/audit": {
			"get": {
				"tags": ["Transactions"],
				"summary": "Get audit information about a transaction",
				"description": "Retrieve audit information about a transaction stored in AvaTax.\r\n            \r\nThe `AuditTransaction` API retrieves audit information related to a specific transaction.  This audit\r\ninformation includes the following:\r\n            \r\n* The `CompanyId` of the company that created the transaction\r\n* The server timestamp representing the exact server time when the transaction was created\r\n* The server duration - how long it took to process this transaction\r\n* Whether exact API call details were logged\r\n* A reconstructed API call showing what the original CreateTransaction call looked like\r\n            \r\nThis API can be used to examine information about a previously created transaction.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "AuditTransaction",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The code identifying the company that owns this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The code identifying the transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AuditTransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/changecode": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Change a transaction's code",
				"description": "Renames a transaction uniquely identified by this URL by changing its `code` value.\r\n            \r\nThis API is available as long as the transaction is in `saved` or `posted` status.  When a transaction\r\nis `committed`, it can be modified by using the [AdjustTransaction](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/AdjustTransaction/) method.\r\n            \r\nAfter this API call succeeds, the transaction will have a new URL matching its new `code`.\r\n            \r\nIf you have more than one document with the same `code`, specify the `documentType` parameter to choose between them.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "ChangeTransactionCode",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to change",
						"required": true,
						"type": "string"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The code change request you wish to execute",
						"required": false,
						"schema": {
							"$ref": "#/definitions/ChangeTransactionCodeModel"
						}
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to change document code. If not provided, the default is SalesInvoice.",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/commit": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Commit a transaction for reporting",
				"description": "Marks a transaction by changing its status to `Committed`.\r\n            \r\nTransactions that are committed are available to be reported to a tax authority by Avalara Managed Returns.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nIf you have more than one document with the same `code`, specify the `documentType` parameter to choose between them.\r\n            \r\nAny changes made to a committed transaction will generate a transaction history.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "CommitTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to commit",
						"required": true,
						"type": "string"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The commit request you wish to execute",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CommitTransactionModel"
						}
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to commit. If not provided, the default is SalesInvoice.",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/lock": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Lock a single transaction",
				"description": "Lock a transaction uniquely identified by this URL.\r\n            \r\nThis API is mainly used for connector developer to simulate what happens when Returns product locks a document.\r\nAfter this API call succeeds, the document will be locked and can't be voided or adjusted.\r\n            \r\nThis API is only available to customers in Sandbox with AvaTaxPro subscription.  On production servers, this API is available by invitation only.\r\n            \r\nIf you have more than one document with the same `code`, specify the `documentType` parameter to choose between them.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "LockTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to lock",
						"required": true,
						"type": "string"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The lock request you wish to execute",
						"required": false,
						"schema": {
							"$ref": "#/definitions/LockTransactionModel"
						}
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to lock. If not provided, the default is SalesInvoice.",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/refund": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Create a refund for a transaction",
				"description": "Create a refund for a transaction.\r\n            \r\nThe `RefundTransaction` API allows you to quickly and easily create a `ReturnInvoice` representing a refund\r\nfor a previously created `SalesInvoice` transaction.  You can choose to create a full or partial refund, and\r\nspecify individual line items from the original sale for refund.\r\n            \r\nThe `RefundTransaction` API ensures that the tax amount you refund to the customer exactly matches the tax that\r\nwas calculated during the original transaction, regardless of any changes to your company's configuration, rules,\r\nnexus, or any other setting.\r\n            \r\nThis API is intended to be a shortcut to allow you to quickly and accurately generate a refund for the following\r\ncommon refund scenarios:\r\n            \r\n* A full refund of a previous sale\r\n* Refunding the tax that was charged on a previous sale, when the customer provides an exemption certificate after the purchase\r\n* Refunding one or more items (lines) from a previous sale\r\n* Granting a customer a percentage refund of a previous sale\r\n            \r\nFor more complex scenarios than the ones above, please use `CreateTransaction` with document type `ReturnInvoice` to\r\ncreate a custom refund transaction.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\nIf you omit the `$include` parameter, the API will assume you want `Summary,Addresses`.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "RefundTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The code of the company that made the original sale",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code of the original sale",
						"required": true,
						"type": "string"
					},
					{
						"name": "model",
						"in": "body",
						"description": "Information about the refund to create",
						"required": false,
						"schema": {
							"$ref": "#/definitions/RefundTransactionModel"
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in the response after transaction is created",
						"required": false,
						"type": "string"
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to refund. If not provided, the default is SalesInvoice.",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "useTaxDateOverride",
						"in": "query",
						"description": "(Optional): If set to true, processes refund using taxDateOverride rather than taxAmountOverride (Note: taxAmountOverride is not allowed for SST states).",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/settle": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Perform multiple actions on a transaction",
				"description": "Performs one or more actions against the current transaction uniquely identified by this URL.\r\n            \r\nThe `SettleTransaction` API call can perform the work of `ChangeCode`, `VerifyTransaction`, and `CommitTransaction`.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nIf you have more than one document with the same `code`, specify the `documentType` parameter to choose between them.\r\n            \r\nThis API is available for users who want to execute more than one action at a time.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n",
				"operationId": "SettleTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to settle",
						"required": true,
						"type": "string"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The data from an external system to reconcile against AvaTax",
						"required": false,
						"schema": {
							"$ref": "#/definitions/SettleTransactionModel"
						}
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to settle. If not provided, the default is SalesInvoice.",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/types/{documentType}": {
			"get": {
				"tags": ["Transactions"],
				"summary": "Retrieve a single transaction by code",
				"description": "DEPRECATED: Please use the `GetTransactionByCode` API instead.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "GetTransactionByCodeAndType",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to retrieve",
						"required": true,
						"type": "string"
					},
					{
						"name": "documentType",
						"in": "path",
						"description": "The transaction type to retrieve",
						"required": true,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/types/{documentType}/audit": {
			"get": {
				"tags": ["Transactions"],
				"summary": "Get audit information about a transaction",
				"description": "Retrieve audit information about a transaction stored in AvaTax.\r\n            \r\nThe `AuditTransaction` API retrieves audit information related to a specific transaction.  This audit\r\ninformation includes the following:\r\n            \r\n* The `CompanyId` of the company that created the transaction\r\n* The server timestamp representing the exact server time when the transaction was created\r\n* The server duration - how long it took to process this transaction\r\n* Whether exact API call details were logged\r\n* A reconstructed API call showing what the original CreateTransaction call looked like\r\n            \r\nThis API can be used to examine information about a previously created transaction.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "AuditTransactionWithType",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The code identifying the company that owns this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The code identifying the transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "documentType",
						"in": "path",
						"description": "The document type of the original transaction",
						"required": true,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AuditTransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/uncommit": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Uncommit a transaction for reporting",
				"description": "Adjusts a transaction by changing it to an uncommitted status.\r\n            \r\nTransactions that have been previously reported to a tax authority by Avalara Managed Returns are considered `locked` and are\r\nno longer available to be uncommitted.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "UncommitTransaction",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to Uncommit",
						"required": true,
						"type": "string"
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to Uncommit. If not provided, the default is SalesInvoice.",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/unvoid": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Unvoids a transaction",
				"description": "Unvoids a voided transaction\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "UnvoidTransaction",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to commit",
						"required": true,
						"type": "string"
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to commit. If not provided, the default is SalesInvoice.",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/verify": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Verify a transaction",
				"description": "Verifies that the transaction uniquely identified by this URL matches certain expected values.\r\n            \r\nIf the transaction does not match these expected values, this API will return an error code indicating which value did not match.\r\n            \r\nIf you have more than one document with the same `code`, specify the `documentType` parameter to choose between them.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "VerifyTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to settle",
						"required": true,
						"type": "string"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The data from an external system to reconcile against AvaTax",
						"required": false,
						"schema": {
							"$ref": "#/definitions/VerifyTransactionModel"
						}
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to verify. If not provided, the default is SalesInvoice.",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/void": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Void a transaction",
				"description": "Voids the current transaction uniquely identified by this URL.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nWhen you void a transaction, that transaction's status is recorded as `DocVoided`.\r\n            \r\nIf you have more than one document with the same `code`, specify the `documentType` parameter to choose between them.\r\n            \r\nTransactions that have been previously reported to a tax authority by Avalara Managed Returns are no longer available to be voided.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode or transactionCode contains any of these characters /, +, ? or a space please use the following encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "VoidTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyCode",
						"in": "path",
						"description": "The company code of the company that recorded this transaction",
						"required": true,
						"type": "string"
					},
					{
						"name": "transactionCode",
						"in": "path",
						"description": "The transaction code to void",
						"required": true,
						"type": "string"
					},
					{
						"name": "model",
						"in": "body",
						"description": "The void request you wish to execute. To void a transaction the code must be set to 'DocVoided'",
						"required": false,
						"schema": {
							"$ref": "#/definitions/VoidTransactionModel"
						}
					},
					{
						"name": "documentType",
						"in": "query",
						"description": "(Optional): The document type of the transaction to void. If not provided, the default is SalesInvoice.",
						"required": false,
						"type": "string",
						"enum": [
							"SalesOrder",
							"SalesInvoice",
							"PurchaseOrder",
							"PurchaseInvoice",
							"ReturnOrder",
							"ReturnInvoice",
							"InventoryTransferOrder",
							"InventoryTransferInvoice",
							"ReverseChargeOrder",
							"ReverseChargeInvoice",
							"Any"
						],
						"x-enum-metadata": {
							"name": "DocumentType",
							"values": [
								{
									"name": "SalesOrder",
									"value": 0
								},
								{
									"name": "SalesInvoice",
									"value": 1
								},
								{
									"name": "PurchaseOrder",
									"value": 2
								},
								{
									"name": "PurchaseInvoice",
									"value": 3
								},
								{
									"name": "ReturnOrder",
									"value": 4
								},
								{
									"name": "ReturnInvoice",
									"value": 5
								},
								{
									"name": "InventoryTransferOrder",
									"value": 6
								},
								{
									"name": "InventoryTransferInvoice",
									"value": 7
								},
								{
									"name": "ReverseChargeOrder",
									"value": 8
								},
								{
									"name": "ReverseChargeInvoice",
									"value": 9
								},
								{
									"name": "Any",
									"value": -1
								}
							]
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/transactions/lines/add": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Add lines to an existing unlocked transaction",
				"description": " Add lines to an existing unlocked transaction.\r\n            \r\n The `AddLines` API allows you to add additional transaction lines to existing transaction, so that customer will\r\n be able to append multiple calls together and form an extremely large transaction. If customer does not specify line number\r\n in the lines to be added, a new random Guid string will be generated for line number. If customer are not satisfied with\r\n the line number for the transaction lines, they can turn on the renumber switch to have REST v2 automatically renumber all\r\n transaction lines for them, in this case, the line number becomes: \"1\", \"2\", \"3\", ...\r\n            \r\n A transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\n sales, purchases, inventory transfer, and returns (also called refunds).\r\n You may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n * Lines\r\n * Details (implies lines)\r\n * Summary (implies details)\r\n * Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n            \r\n If you omit the `$include` parameter, the API will assume you want `Summary,Addresses`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "AddLines",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "information about the transaction and lines to be added",
						"required": false,
						"schema": {
							"$ref": "#/definitions/AddTransactionLineModel"
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in the response after transaction is created",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/transactions/lines/delete": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Remove lines from an existing unlocked transaction",
				"description": " Remove lines to an existing unlocked transaction.\r\n            \r\n The `DeleteLines` API allows you to remove transaction lines from existing unlocked transaction, so that customer will\r\n be able to delete transaction lines and adjust original transaction the way they like\r\n            \r\n A transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\n sales, purchases, inventory transfer, and returns (also called refunds).\r\n You may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n * Lines\r\n * Details (implies lines)\r\n * Summary (implies details)\r\n * Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n            \r\n If you omit the `$include` parameter, the API will assume you want `Summary,Addresses`.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "DeleteLines",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "information about the transaction and lines to be removed",
						"required": false,
						"schema": {
							"$ref": "#/definitions/RemoveTransactionLineModel"
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in the response after transaction is created",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/{id}": {
			"get": {
				"tags": ["Transactions"],
				"summary": "Retrieve a single transaction by ID",
				"description": "Get the unique transaction identified by this URL.\r\n            \r\nThis endpoint retrieves the exact transaction identified by this ID number even if that transaction was later adjusted\r\nby using the `AdjustTransaction` endpoint.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "GetTransactionById",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The unique ID number of the transaction to retrieve",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in this fetch call",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/create": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Create a new transaction",
				"description": "Records a new transaction in AvaTax.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\n            \r\nThe `CreateTransaction` endpoint uses the tax profile of your company to identify the correct tax rules\r\nand rates to apply to all line items in this transaction.  The end result will be the total tax calculated by AvaTax based on your\r\ncompany's configuration and the data provided in this API call.\r\n            \r\nThe `CreateTransaction` API will report an error if a committed transaction already exists with the same `code`.  To\r\navoid this error, use the `CreateOrAdjustTransaction` API - it will create the transaction if it does not exist, or\r\nupdate it if it does exist.\r\n            \r\nTo generate a refund for a transaction, use the `RefundTransaction` API.\r\n            \r\nThe field `type` identifies the kind of transaction - for example, a sale, purchase, or refund.  If you do not specify\r\na `type` value, you will receive an estimate of type `SalesOrder`, which will not be recorded.\r\n            \r\nThe origin and destination locations for a transaction must be identified by either address or geocode.  For address-based transactions, please\r\nprovide addresses in the fields `line`, `city`, `region`, `country` and `postalCode`.  For geocode-based transactions, please provide the geocode\r\ninformation in the fields `latitude` and `longitude`.  If either `latitude` or `longitude` or both are null, the transaction will be calculated\r\nusing the best available address location information.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* ForceTimeout - Simulates a timeout.  This adds a 30 second delay and error to your API call.  This can be used to test your code to ensure it can respond correctly in the case of a dropped connection.\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable and non-taxable for each tax type returned in the transaction summary.\r\n            \r\nIf you omit the `$include` parameter, the API will assume you want `Summary,Addresses`.\r\n            \r\nNOTE: Avoid using the following strings in your transaction codes as they are encoding strings and will be interpreted differently:\r\n* \\_-ava2f-\\_\r\n* \\_-ava2b-\\_\r\n* \\_-ava3f-\\_\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "CreateTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The transaction you wish to create",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CreateTransactionModel"
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in the response after transaction is created",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/createoradjust": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Create or adjust a transaction",
				"description": "Records a new transaction or adjust an existing transaction in AvaTax.\r\n            \r\nThe `CreateOrAdjustTransaction` endpoint is used to create a new transaction or update an existing one.  This API\r\ncan help you create an idempotent service that creates transactions\r\nIf there exists a transaction identified by code, the original transaction will be adjusted by using the meta data\r\nin the input transaction.\r\n            \r\nThe `CreateOrAdjustTransaction` API cannot modify any transaction that has been reported to a tax authority using\r\nthe Avalara Managed Returns Service or any other tax filing service.  If you call this API to attempt to modify\r\na transaction that has been reported on a tax filing, you will receive the error `CannotModifyLockedTransaction`.\r\n            \r\nTo generate a refund for a transaction, use the `RefundTransaction` API.\r\n            \r\nIf you don't specify the field `type` in your request, you will get an estimate of type `SalesOrder`, which will not be recorded in the database.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* ForceTimeout - Simulates a timeout.  This adds a 30 second delay and error to your API call.  This can be used to test your code to ensure it can respond correctly in the case of a dropped connection.\r\n            \r\nIf you omit the `$include` parameter, the API will assume you want `Summary,Addresses`.\r\n            \r\nNOTE: Avoid using the following strings in your transaction codes as they are encoding strings and will be interpreted differently:\r\n* \\_-ava2f-\\_\r\n* \\_-ava2b-\\_\r\n* \\_-ava3f-\\_\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaTaxPro, BasicReturns.\n",
				"operationId": "CreateOrAdjustTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The transaction you wish to create or adjust",
						"required": false,
						"schema": {
							"$ref": "#/definitions/CreateOrAdjustTransactionModel"
						}
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Specifies objects to include in the response after transaction is created",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/transactions/lock": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Lock a set of documents",
				"description": "This API is available by invitation only.\r\n            \r\nLock a set of transactions uniquely identified by DocumentIds provided. This API allows locking multiple documents at once.\r\nAfter this API call succeeds, documents will be locked and can't be voided.\r\n            \r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\n\n### Security Policies\n\n* This API requires the user role Compliance Root User.\n* This API depends on the following active services<br />*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.<br />*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n",
				"operationId": "BulkLockTransaction",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "bulk lock request",
						"required": false,
						"schema": {
							"$ref": "#/definitions/BulkLockTransactionModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BulkLockTransactionResult"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/upcs": {
			"get": {
				"tags": ["Upcs"],
				"summary": "Retrieve UPCs for this company",
				"description": "List all UPC objects attached to this company.\r\nA UPC represents a single UPC code in your catalog and matches this product to the tax code identified by this UPC.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaUpc.\n",
				"operationId": "ListUPCsByCompany",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns these UPCs",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[UPCModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Upcs"],
				"summary": "Create a new UPC",
				"description": "Create one or more new UPC objects attached to this company.\r\nA UPC represents a single UPC code in your catalog and matches this product to the tax code identified by this UPC.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaUpc.\n",
				"operationId": "CreateUPCs",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The UPC you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/UPCModel"
							}
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this UPC.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/UPCModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/companies/{companyId}/upcs/{id}": {
			"get": {
				"tags": ["Upcs"],
				"summary": "Retrieve a single UPC",
				"description": "Get the UPC object identified by this URL.\r\nA UPC represents a single UPC code in your catalog and matches this product to the tax code identified by this UPC.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaUpc.\n",
				"operationId": "GetUPC",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this UPC",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The primary key of this UPC",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UPCModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Upcs"],
				"summary": "Update a single UPC",
				"description": "Replace the existing UPC object at this URL with an updated object.\r\nA UPC represents a single UPC code in your catalog and matches this product to the tax code identified by this UPC.\r\nAll data from the existing object will be replaced with data in the object you PUT.\r\nTo set a field's value to null, you may either set its value to null or omit that field from the object you post.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaUpc.\n",
				"operationId": "UpdateUPC",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The UPC you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/UPCModel"
						}
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that this UPC belongs to.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the UPC you wish to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UPCModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Upcs"],
				"summary": "Delete a single UPC",
				"description": "Marks the UPC object identified by this URL as deleted.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active services<br />*Required* (all):  AvaUpc.\n",
				"operationId": "DeleteUPC",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "The ID of the company that owns this UPC.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the UPC you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/upcs": {
			"get": {
				"tags": ["Upcs"],
				"summary": "Retrieve all UPCs",
				"description": "Get multiple UPC objects across all companies.\r\nA UPC represents a single UPC code in your catalog and matches this product to the tax code identified by this UPC.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the following active services<br />*Required* (all):  AvaUpc.\n",
				"operationId": "QueryUPCs",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "A comma separated list of additional data to retrieve.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[UPCModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{accountId}/users": {
			"get": {
				"tags": ["Users"],
				"summary": "Retrieve users for this account",
				"description": "List all user objects attached to this account.\r\nA user represents one person with access privileges to make API calls and work with a specific account.\r\n            \r\nWhen an API is called using a legacy AvaTax License Key, the API log entry is recorded as being performed by a special user attached to that license key.\r\nBy default, this API will not return a listing of license key users.  Users with registrar-level security may call this API to list license key users.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* FetchDeleted\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ListUsersByAccount",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "accountId",
						"in": "path",
						"description": "The accountID of the user you wish to list.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Optional fetch commands.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[UserModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"post": {
				"tags": ["Users"],
				"summary": "Create new users",
				"description": "Create one or more new user objects attached to this account.\r\n            \r\nA user represents one person with access privileges to make API calls and work with a specific account.\r\n            \r\nUsers who are account administrators or company users are permitted to create user records to invite\r\nadditional team members to work with AvaTax.\r\n            \r\nA newly created user will receive an email inviting them to create their password.  This means that you\r\nmust provide a valid email address for all user accounts created.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "CreateUsers",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "models",
						"in": "body",
						"description": "The user or array of users you wish to create.",
						"required": false,
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/UserModel"
							}
						}
					},
					{
						"name": "accountId",
						"in": "path",
						"description": "The unique ID number of the account where these users will be created.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/UserModel"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{accountId}/users/{id}": {
			"get": {
				"tags": ["Users"],
				"summary": "Retrieve a single user",
				"description": "Get the user object identified by this URL.\r\nA user represents one person with access privileges to make API calls and work with a specific account.\r\n            \r\n You may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* FetchDeleted\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetUser",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the user to retrieve.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "accountId",
						"in": "path",
						"description": "The accountID of the user you wish to get.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$include",
						"in": "query",
						"description": "Optional fetch commands.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UserModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"put": {
				"tags": ["Users"],
				"summary": "Update a single user",
				"description": "Replace the existing user object at this URL with an updated object.\r\nA user represents one person with access privileges to make API calls and work with a specific account.\r\nAll data from the existing object will be replaced with data in the object you PUT.\r\nTo set a field's value to null, you may either set its value to null or omit that field from the object you post.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "UpdateUser",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "The user object you wish to update.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/UserModel"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the user you wish to update.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "accountId",
						"in": "path",
						"description": "The accountID of the user you wish to update.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UserModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			},
			"delete": {
				"tags": ["Users"],
				"summary": "Delete a single user",
				"description": "Mark the user object identified by this URL as deleted.\r\n            \r\nThis API is available for use by account and company administrators only.\r\n            \r\nAccount and company administrators may only delete users within the appropriate organizations\r\nthey control.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin, Compliance Root User, CSPTester, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TreasuryAdmin.\n",
				"operationId": "DeleteUser",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the user you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "accountId",
						"in": "path",
						"description": "The accountID of the user you wish to delete.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"uniqueItems": false,
							"type": "array",
							"items": {
								"$ref": "#/definitions/ErrorDetail"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/accounts/{accountId}/users/{id}/entitlements": {
			"get": {
				"tags": ["Users"],
				"summary": "Retrieve all entitlements for a single user",
				"description": "Return a list of all entitlements to which this user has rights to access.\r\nEntitlements are a list of specified API calls the user is permitted to make, a list of identifier numbers for companies the user is\r\nallowed to use, and an access level identifier that indicates what types of access roles the user is allowed to use.\r\nThis API call is intended to provide a validation endpoint to determine, before making an API call, whether this call is likely to succeed.\r\nFor example, if user 567 within account 999 is attempting to create a new child company underneath company 12345, you could preview the user's\r\nentitlements and predict whether this call would succeed:\r\n            \r\n* Retrieve entitlements by calling '/api/v2/accounts/999/users/567/entitlements' .  If the call fails, you do not have accurate\r\n    credentials for this user.\r\n* If the 'accessLevel' field within entitlements is 'None', the call will fail.\r\n* If the 'accessLevel' field within entitlements is 'SingleCompany' or 'SingleAccount', the call will fail if the companies\r\n    table does not contain the ID number 12345.\r\n* If the 'permissions' array within entitlements does not contain 'AccountSvc.CompanySave', the call will fail.\r\n            \r\nFor a full list of defined permissions, please use '/api/v2/definitions/permissions' .\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "GetUserEntitlements",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the user to retrieve.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "accountId",
						"in": "path",
						"description": "The accountID of the user you wish to get.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UserEntitlementModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/passwords": {
			"put": {
				"tags": ["Users"],
				"summary": "Change Password",
				"description": "Allows a user to change their password via an API call.\r\n            \r\nThis API allows an authenticated user to change their password via an API call.  This feature is only available\r\nfor accounts that do not use SAML integrated password validation.\r\n            \r\nThis API only allows the currently authenticated user to change their password; it cannot be used to apply to a\r\ndifferent user than the one authenticating the current API call.\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "ChangePassword",
				"consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "model",
						"in": "body",
						"description": "An object containing your current password and the new password.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/PasswordChangeModel"
						}
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/users": {
			"get": {
				"tags": ["Users"],
				"summary": "Retrieve all users",
				"description": "Get multiple user objects across all accounts.\r\n            \r\nA user represents one person or set of credentials with access privileges to make API calls and work with a specific account.  A user can be authenticated\r\nvia either username / password authentication, an OpenID / OAuth Bearer Token, or a legacy AvaTax License Key.\r\n            \r\nWhen an API is called using a legacy AvaTax License Key, the API log entry is recorded as being performed by a special user attached to that license key.\r\nBy default, this API will not return a listing of license key users.  Users with registrar-level security may call this API to list license key users.\r\n            \r\nSearch for specific objects using the criteria in the `$filter` parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\n            \r\nYou may specify one or more of the following values in the `$include` parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* FetchDeleted\n\n### Security Policies\n\n* This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n",
				"operationId": "QueryUsers",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "$include",
						"in": "query",
						"description": "Optional fetch commands.",
						"required": false,
						"type": "string"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "A filter statement to identify specific records to retrieve.  For more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).",
						"required": false,
						"type": "string"
					},
					{
						"name": "$top",
						"in": "query",
						"description": "If nonzero, return no more than this number of results.  Used with `$skip` to provide pagination for large datasets.  Unless otherwise specified, the maximum number of records that can be returned from an API call is 1,000 records.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$skip",
						"in": "query",
						"description": "If nonzero, skip this number of results before returning data.  Used with `$top` to provide pagination for large datasets.",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "$orderBy",
						"in": "query",
						"description": "A comma separated list of sort statements in the format `(fieldname) [ASC|DESC]`, for example `id ASC`.",
						"required": false,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[UserModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/utilities/ping": {
			"get": {
				"tags": ["Utilities"],
				"summary": "Tests connectivity and version of the service",
				"description": "Check connectivity to AvaTax and return information about the AvaTax API server.\r\n            \r\nThis API is intended to help you verify that your connection is working.  This API will always succeed and will\r\nnever return a error.  It provides basic information about the server you connect to:\r\n            \r\n* `version` - The version number of the AvaTax API server that responded to your request.  The AvaTax API version number is updated once per month during Avalara's update process.\r\n* `authenticated` - A boolean flag indicating whether or not you sent valid credentials with your API request.\r\n* `authenticationType` - If you provided valid credentials to the API, this field will tell you whether you used Bearer, Username, or LicenseKey authentication.\r\n* `authenticatedUserName` - If you provided valid credentials to the API, this field will tell you the username of the currently logged in user.\r\n* `authenticatedUserId` - If you provided valid credentials to the API, this field will tell you the user ID of the currently logged in user.\r\n* `authenticatedAccountId` - If you provided valid credentials to the API, this field will contain the account ID of the currently logged in user.\r\n            \r\nThis API helps diagnose connectivity problems between your application and AvaTax; you may call this API even\r\nif you do not have verified connection credentials.  If this API fails, either your computer is not connected to\r\nthe internet, or there is a routing problem between your office and Avalara, or the Avalara server is not available.\r\nFor more information on the uptime of AvaTax, please see [Avalara's AvaTax Status Page](https://status.avalara.com/).\n\n### Security Policies\n\n* This API may be called without providing authentication credentials.\n",
				"operationId": "Ping",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PingResultModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/utilities/subscriptions": {
			"get": {
				"tags": ["Utilities"],
				"summary": "List all services to which the current user is subscribed",
				"description": "Returns the list of all subscriptions enabled for the currently logged in user.\r\n            \r\nThis API will return an error if it is called with invalid authentication credentials.\r\n            \r\nThis API is intended to help you determine whether you have the necessary subscription to use certain API calls\r\nwithin AvaTax.  You can examine the subscriptions returned from this API call to look for a particular product\r\nor subscription to provide useful information to the current user as to whether they are entitled to use\r\nspecific features of AvaTax.",
				"operationId": "ListMySubscriptions",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FetchResult[SubscriptionModel]"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		},
		"/api/v2/utilities/subscriptions/{serviceTypeId}": {
			"get": {
				"tags": ["Utilities"],
				"summary": "Checks if the current user is subscribed to a specific service",
				"description": "Returns a subscription object for the current account, or 404 Not Found if this subscription is not enabled for this account.\r\n            \r\nThis API will return an error if it is called with invalid authentication credentials.\r\n            \r\nThis API is intended to help you determine whether you have the necessary subscription to use certain API calls\r\nwithin AvaTax.  You can examine the subscriptions returned from this API call to look for a particular product\r\nor subscription to provide useful information to the current user as to whether they are entitled to use\r\nspecific features of AvaTax.",
				"operationId": "GetMySubscription",
				"consumes": [],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "serviceTypeId",
						"in": "path",
						"description": "The service to check",
						"required": true,
						"type": "string"
					},
					{
						"name": "X-Avalara-Client",
						"in": "header",
						"description": "Identifies the software you are using to call this API.  For more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/) .",
						"required": false,
						"type": "string",
						"default": "Swagger UI; 20.7.2; Custom; 1.0"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SubscriptionModel"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"UserSecurity": [],
						"OauthSecurity": []
					}
				]
			}
		}
	},
	"definitions": {
		"AccountModel": {
			"description": "An AvaTax account.",
			"required": ["id", "name"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number assigned to this account.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"crmid": {
					"description": "For system registrar use only.",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"name": {
					"description": "The name of this account.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Test Account"
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "The earliest date on which this account may be used.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "If this account has been closed, this is the last date the account was open.",
					"type": "string"
				},
				"accountStatusId": {
					"description": "The current status of this account.",
					"enum": ["Inactive", "Active", "Test", "New"],
					"type": "string",
					"example": "Test",
					"x-enum-metadata": {
						"name": "AccountStatusId",
						"values": [
							{
								"name": "Inactive",
								"value": 0
							},
							{
								"name": "Active",
								"value": 1
							},
							{
								"name": "Test",
								"value": 2
							},
							{
								"name": "New",
								"value": 3
							}
						]
					}
				},
				"accountTypeId": {
					"description": "The type of this account.",
					"enum": ["Regular", "Firm", "FirmClient"],
					"type": "string",
					"example": "Regular",
					"x-enum-metadata": {
						"name": "AccountTypeId",
						"values": [
							{
								"name": "Regular",
								"value": 1
							},
							{
								"name": "Firm",
								"value": 2
							},
							{
								"name": "FirmClient",
								"value": 3
							}
						]
					}
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"subscriptions": {
					"description": "Optional: A list of subscriptions granted to this account.  To fetch this list, add the query string \"?$include=Subscriptions\" to your URL.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/SubscriptionModel"
					}
				},
				"users": {
					"description": "Optional: A list of all the users belonging to this account.  To fetch this list, add the query string \"?$include=Users\" to your URL.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserModel"
					}
				}
			},
			"example": {
				"id": 12345,
				"name": "Test Account",
				"effectiveDate": "2020-07-30T00:00:00+00:00",
				"accountStatusId": "Test",
				"accountTypeId": "Regular"
			}
		},
		"SubscriptionModel": {
			"description": "Represents a service that this account has subscribed to.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this subscription.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the account this subscription belongs to.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"subscriptionTypeId": {
					"format": "int32",
					"description": "The unique ID number of the service that the account is subscribed to. If this is provided, subscription description is ignored.",
					"type": "integer",
					"example": 2
				},
				"subscriptionDescription": {
					"description": "A friendly description of the service that the account is subscribed to. You can either provide the subscription type Id or this but not both. If\r\nsubscription type Id is provided, then this information is ignored and this field will be updated with the information from subscription type id.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "AvaTaxPro"
				},
				"effectiveDate": {
					"format": "date",
					"description": "The date when the subscription began.",
					"type": "string",
					"example": "2015-01-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "If the subscription has ended or will end, this date indicates when the subscription ends.",
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 12345,
				"accountId": 123456789,
				"subscriptionTypeId": 2,
				"subscriptionDescription": "AvaTaxPro",
				"effectiveDate": "2015-01-01"
			}
		},
		"UserModel": {
			"description": "An account user who is permitted to use AvaTax.",
			"required": ["id", "accountId", "userName", "firstName", "lastName", "email", "securityRoleId"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this user.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the account to which this user belongs.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"companyId": {
					"format": "int32",
					"description": "If this user is locked to one company (and its children), this is the unique ID number of the company to which this user belongs.",
					"type": "integer",
					"example": 123456
				},
				"userName": {
					"description": "The username which is used to log on to the AvaTax website, or to authenticate against API calls.",
					"maxLength": 50,
					"minLength": 5,
					"type": "string",
					"readOnly": true,
					"example": "bobExample"
				},
				"firstName": {
					"description": "The first or given name of the user.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob"
				},
				"lastName": {
					"description": "The last or family name of the user.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Example"
				},
				"email": {
					"description": "The email address to be used to contact this user.  If the user has forgotten a password, an email can be sent to this email address with information on how to reset this password.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "bob@example.org"
				},
				"postalCode": {
					"description": "The postal code in which this user resides.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "98110"
				},
				"securityRoleId": {
					"description": "The security level for this user.",
					"enum": [
						"NoAccess",
						"SiteAdmin",
						"AccountOperator",
						"AccountAdmin",
						"AccountUser",
						"SystemAdmin",
						"Registrar",
						"CSPTester",
						"CSPAdmin",
						"SystemOperator",
						"TechnicalSupportUser",
						"TechnicalSupportAdmin",
						"TreasuryUser",
						"TreasuryAdmin",
						"ComplianceUser",
						"ComplianceAdmin",
						"ProStoresOperator",
						"CompanyUser",
						"CompanyAdmin",
						"ComplianceTempUser",
						"ComplianceRootUser",
						"ComplianceOperator",
						"SSTAdmin",
						"FirmUser",
						"FirmAdmin"
					],
					"type": "string",
					"example": "AccountUser",
					"x-enum-metadata": {
						"name": "SecurityRoleId",
						"values": [
							{
								"name": "NoAccess",
								"value": 0
							},
							{
								"name": "SiteAdmin",
								"value": 1
							},
							{
								"name": "AccountOperator",
								"value": 2
							},
							{
								"name": "AccountAdmin",
								"value": 3
							},
							{
								"name": "AccountUser",
								"value": 4
							},
							{
								"name": "SystemAdmin",
								"value": 5
							},
							{
								"name": "Registrar",
								"value": 6
							},
							{
								"name": "CSPTester",
								"value": 7
							},
							{
								"name": "CSPAdmin",
								"value": 8
							},
							{
								"name": "SystemOperator",
								"value": 9
							},
							{
								"name": "TechnicalSupportUser",
								"value": 10
							},
							{
								"name": "TechnicalSupportAdmin",
								"value": 11
							},
							{
								"name": "TreasuryUser",
								"value": 12
							},
							{
								"name": "TreasuryAdmin",
								"value": 13
							},
							{
								"name": "ComplianceUser",
								"value": 14
							},
							{
								"name": "ComplianceAdmin",
								"value": 15
							},
							{
								"name": "ProStoresOperator",
								"value": 16
							},
							{
								"name": "CompanyUser",
								"value": 17
							},
							{
								"name": "CompanyAdmin",
								"value": 18
							},
							{
								"name": "ComplianceTempUser",
								"value": 19
							},
							{
								"name": "ComplianceRootUser",
								"value": 20
							},
							{
								"name": "ComplianceOperator",
								"value": 21
							},
							{
								"name": "SSTAdmin",
								"value": 22
							},
							{
								"name": "FirmUser",
								"value": 23
							},
							{
								"name": "FirmAdmin",
								"value": 24
							}
						]
					}
				},
				"passwordStatus": {
					"description": "The status of the user's password. For a new user created, this is always going to be `UserMustChange`",
					"enum": ["UserCannotChange", "UserCanChange", "UserMustChange"],
					"type": "string",
					"example": "UserCanChange",
					"x-enum-metadata": {
						"name": "PasswordStatusId",
						"values": [
							{
								"name": "UserCannotChange",
								"value": 0
							},
							{
								"name": "UserCanChange",
								"value": 1
							},
							{
								"name": "UserMustChange",
								"value": 2
							}
						]
					}
				},
				"isActive": {
					"description": "True if this user is currently active.",
					"type": "boolean",
					"example": true
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				}
			},
			"example": {
				"id": 12345,
				"accountId": 123456789,
				"companyId": 123456,
				"userName": "bobExample",
				"firstName": "Bob",
				"lastName": "Example",
				"email": "bob@example.org",
				"postalCode": "98110",
				"securityRoleId": "AccountUser",
				"passwordStatus": "UserCanChange",
				"isActive": true
			}
		},
		"ErrorDetail": {
			"description": "Message object",
			"type": "object",
			"properties": {
				"code": {
					"description": "Name of the error or message.",
					"enum": [
						"ServerConfiguration",
						"AccountInvalidException",
						"CompanyInvalidException",
						"EntityNotFoundError",
						"ValueRequiredError",
						"RangeError",
						"RangeCompareError",
						"RangeSetError",
						"TaxpayerNumberRequired",
						"EntityLimitExceeded",
						"CommonPassword",
						"WeakPassword",
						"StringLengthError",
						"MaxStringLengthError",
						"EmailValidationError",
						"EmailMissingError",
						"InvalidQueryField",
						"InvalidQueryValue",
						"SyntaxError",
						"TooManyParametersError",
						"UnterminatedValueError",
						"DeleteUserSelfError",
						"OldPasswordInvalid",
						"CannotChangePassword",
						"ReadOnly",
						"DateFormatError",
						"NoDefaultCompany",
						"AccountTypeNotSupported",
						"AuthenticationException",
						"AuthorizationException",
						"ValidationException",
						"InactiveUserError",
						"AuthenticationIncomplete",
						"BasicAuthIncorrect",
						"IdentityServerError",
						"BearerTokenInvalid",
						"ModelRequiredException",
						"AccountExpiredException",
						"BearerTokenNotSupported",
						"InvalidSecurityRole",
						"InvalidRegistrarAction",
						"RemoteServerError",
						"NoFilterCriteriaException",
						"OpenClauseException",
						"JsonFormatError",
						"InvalidDecimalValue",
						"PermissionRequired",
						"UnhandledException",
						"InactiveAccount",
						"LinkageNotAllowed",
						"LinkageStatusUpdateNotSupported",
						"ReportingCompanyMustHaveContactsError",
						"CompanyProfileNotSet",
						"CannotAssignUserToCompany",
						"MustAssignUserToCompany",
						"InvalidTaxTypeMapping",
						"ModelStateInvalid",
						"DateRangeError",
						"InvalidDateRangeError",
						"RuleMustHaveTaxCode",
						"RuleTypeRestricted",
						"InvalidCompanyLocationSetting",
						"InvalidAdjustmentType",
						"DeleteInformation",
						"OutOfRange",
						"UnspecifiedTimeZone",
						"CannotCreateDeletedObjects",
						"CannotModifyDeletedObjects",
						"ReturnNameNotFound",
						"InvalidAddressTypeAndCategory",
						"DefaultCompanyLocation",
						"InvalidCountry",
						"InvalidCountryRegion",
						"BrazilValidationError",
						"BrazilExemptValidationError",
						"BrazilPisCofinsError",
						"JurisdictionNotFoundError",
						"MedicalExciseError",
						"RateDependsTaxabilityError",
						"InvalidRateTypeCode",
						"RateTypeNotSupported",
						"CannotUpdateNestedObjects",
						"UPCCodeInvalidChars",
						"UPCCodeInvalidLength",
						"IncorrectPathError",
						"InvalidJurisdictionType",
						"MustConfirmResetLicenseKey",
						"DuplicateCompanyCode",
						"TINFormatError",
						"DuplicateNexusError",
						"UnknownNexusError",
						"ParentNexusNotFound",
						"InvalidTaxCodeType",
						"CannotActivateCompany",
						"DuplicateEntityProperty",
						"ReportingEntityError",
						"InvalidReturnOperationError",
						"CannotDeleteCompany",
						"CountryOverridesNotAvailable",
						"JurisdictionOverrideMismatch",
						"DuplicateSystemTaxCode",
						"NexusDateMismatch",
						"NexusParentDateMismatch",
						"BearerTokenParseUserIdError",
						"RetrieveUserError",
						"InvalidConfigurationSetting",
						"InvalidConfigurationValue",
						"InvalidEnumValue",
						"TaxCodeAssociatedTaxRule",
						"CannotSwitchAccountId",
						"RequestIncomplete",
						"AccountNotNew",
						"PasswordLengthInvalid",
						"InvalidPageKey",
						"InvalidEcmsOverrideCode",
						"AccountDoesNotExist",
						"InvalidTaxType",
						"IncorrectFieldValue",
						"LeadingOrTrailingException",
						"NotEnoughAddressesInfo",
						"ReportNotInitiated",
						"FailedToBuildReport",
						"ReportNotFinished",
						"FailedToDownloadReport",
						"MalformedFilterException",
						"ExpectedConjunctionError",
						"CriteriaNotSupportedError",
						"CompanyAccountAndParentAccountMismatch",
						"InvalidFileContentType",
						"RequestTooLarge",
						"EcmsDisabled",
						"UnknownConjunctionError",
						"NoLinesDiscounted",
						"FailedToDelete",
						"CircularCompanyHierarchies",
						"DuplicateEntry",
						"DuplicateFieldNameInOrderBy",
						"CannotAdjustDocumentType",
						"UserNoAccess",
						"InvalidEntry",
						"TransactionAlreadyCancelled",
						"QueryParameterOutOfRange",
						"BatchSalesAuditMustBeZippedError",
						"BatchZipMustContainOneFileError",
						"BatchInvalidFileTypeError",
						"BatchCannotSaveBatchFile",
						"BatchCannotGetBatchFile",
						"BatchCannotDeleteBatchFile",
						"BatchMustContainOneFile",
						"MissingBatchFileContent",
						"BatchCannotBeDeletedWhileProcessing",
						"InternalServerError",
						"PointOfSaleFileSize",
						"PointOfSaleSetup",
						"InvalidInputDate",
						"GetTaxError",
						"AddressConflictException",
						"DocumentCodeConflict",
						"MissingAddress",
						"InvalidParameterValue",
						"FetchLimit",
						"InvalidAddress",
						"AddressLocationNotFound",
						"MissingLine",
						"InvalidAddressTextCase",
						"DocumentNotCommitted",
						"InvalidDocumentTypesToFetch",
						"TimeoutRequested",
						"InvalidPostalCode",
						"InvalidSubscriptionDescription",
						"InvalidSubscriptionTypeId",
						"CannotChangeFilingStatus",
						"FEINFormatError",
						"ServerUnreachable",
						"SubscriptionRequired",
						"AccountExists",
						"InvitationOnly",
						"FreeTrialNotAvailable",
						"AccountExistsDifferentEmail",
						"AvalaraIdentityApiError",
						"InvalidIPAddress",
						"OfferCodeAlreadyApplied",
						"AccountAlreadyExists",
						"LicenseKeyNameAlreadyExistsForAccount",
						"RefundTypeAndPercentageMismatch",
						"InvalidDocumentTypeForRefund",
						"RefundTypeAndLineMismatch",
						"RefundLinesRequired",
						"InvalidRefundType",
						"RefundPercentageForTaxOnly",
						"LineNoOutOfRange",
						"RefundPercentageOutOfRange",
						"RefundPercentageMissing",
						"MustUseCreateTransaction",
						"MustAcceptTermsAndConditions",
						"FilingCalendarCannotBeDeleted",
						"InvalidEffectiveDate",
						"NonOutletForm",
						"OverlappingFilingCalendar",
						"FilingCalendarCannotBeEdited",
						"CannotModifyLockedTransaction",
						"LineAlreadyExists",
						"LineDoesNotExist",
						"LinesNotSpecified",
						"LineDetailsDoesNotExist",
						"CannotCreateTransactionWithDeletedDataSource",
						"ShipToRegionRequiredWithDataSource",
						"InvalidBusinessType",
						"CannotModifyExemptCert",
						"CertificatesError",
						"MissingRequiredFields",
						"CertificatesNotSetup",
						"ConflictingExposureZone",
						"MissingFieldToCreateExposureZone",
						"MissingExemptReason",
						"InvalidExemptReason",
						"InvalidExemptionOperation",
						"ConflictingFields",
						"InvalidPdfOrImageFile",
						"InvalidCoverLetterTitle",
						"AccountNotProvisioned",
						"InvalidRequestContentType",
						"ExemptionPaginationLimits",
						"ExemptionSortLimits",
						"CustomerCantBeBothShipToAndBillTo",
						"BillToCustomerExpected",
						"ShipToCustomerExpected",
						"EcmsSstCertsRequired",
						"TransactionNotCancelled",
						"TooManyTransactions",
						"OnlyTaxDateOverrideIsAllowed",
						"TransactionAlreadyExists",
						"DateMismatch",
						"InvalidDocumentStatusForVerify",
						"TotalAmountMismatch",
						"TotalTaxMismatch",
						"InvalidDocumentType",
						"MultiDocumentPartiallyLocked",
						"TransactionIsCommitted",
						"InvalidDocumentStatus",
						"CommsConfigClientIdMissing",
						"CommsConfigClientIdBadValue",
						"AccountInNewStatusException",
						"WorksheetException",
						"InvalidAccountOverride",
						"AccountOverrideNotAuthorized",
						"FieldNotQueryableError",
						"UsernameRequired",
						"InvalidAuditMessage",
						"FieldNotOrderableError",
						"CannotDeleteParentBeforeChildNexus",
						"NexusChildDateMismatch",
						"CannotModifySstNexus",
						"InvalidLocalNexusTypeId",
						"RemoteValidationError",
						"AdvancedRuleRequestRuleError",
						"AdvancedRuleResponseRuleError",
						"AdvancedRuleError",
						"TaxRuleRequiresNexus",
						"UPCCodeNotUnique",
						"TaxCodeAssociatedWithItemCodeNotFound",
						"DuplicateSystemForItem",
						"CannotDismissGlobalNotification",
						"CannotUpdateAccountTypeId",
						"TaxpayerNumberIsRequired",
						"RequestLimitExceeded",
						"ConcurrentRequestLimitExceeded",
						"InvalidDocumentTypeForInspect",
						"ServiceNotReady",
						"UpdateLocationRemittanceMismatchTypeAndCategory",
						"UpdateLocationRemittanceCheckExistingEffectiveDateError",
						"UpdateLocationRemittanceCheckExistingEndDateError",
						"ErrorCountLimitExceededError",
						"RateLimitExceededError",
						"UnsupportedFileFormat",
						"UnsupportedOutputFileType",
						"TaxProfileNotProvided",
						"InvalidTaxProfile",
						"CompanyTaxProfileEntryRequired",
						"ErrorReadingTaxProfileEntry",
						"TraceDataNotAvailable",
						"InvalidParameterUnitMeasurementType",
						"ParameterUnitRequired",
						"InvalidParameterValueDataType",
						"InvalidParameterAttributeType",
						"SubscriptionRequiredForParameter",
						"InvalidAccountType",
						"InvalidFirmSubscriptions",
						"GenericTaxCodeForItem",
						"CannotCertifyCompany",
						"NoVoidedDocuments",
						"InadequateCommittedDocuments",
						"DocumentCodeIsGuid",
						"CustomerVendorCodeIsGuid",
						"InadequateDocumentLineCount",
						"SameDocumentDescription",
						"NoExemptionNoOrCustomerUsageType",
						"InadequateUniqueAddresses",
						"ItemCodesAreAllSame",
						"TaxCodesAreAllSame",
						"LocationCodeNotUsed",
						"RepeatedLinesInDocument",
						"TaxDateOverrideAndNegativeLineAmount",
						"AllUSDCurrencyCodes",
						"NoVATBuyerId",
						"AllUSCountryCodes",
						"NoDocumentsToTest",
						"NoShippingCharge",
						"FailedToUpdateCompanyLocation",
						"CompanyLocationDateRangeOverlap",
						"FieldLengthError",
						"InputContainsBlacklistedCharacters",
						"CannotCreateNestedObjects",
						"BatchTransactionTypeError",
						"BatchTransactionLineLimitExceeded",
						"BatchCompanyIdAndCompanyCodeMismatch",
						"BatchCannotBeCancelledStatusError",
						"BatchCannotBeCancelledFormatError",
						"InvalidParameterDataType"
					],
					"type": "string",
					"example": "DeleteInformation",
					"x-enum-metadata": {
						"name": "ErrorCodeId",
						"values": [
							{
								"name": "ServerConfiguration",
								"value": 1
							},
							{
								"name": "AccountInvalidException",
								"value": 2
							},
							{
								"name": "CompanyInvalidException",
								"value": 3
							},
							{
								"name": "EntityNotFoundError",
								"value": 4
							},
							{
								"name": "ValueRequiredError",
								"value": 5
							},
							{
								"name": "RangeError",
								"value": 6
							},
							{
								"name": "RangeCompareError",
								"value": 7
							},
							{
								"name": "RangeSetError",
								"value": 8
							},
							{
								"name": "TaxpayerNumberRequired",
								"value": 9
							},
							{
								"name": "EntityLimitExceeded",
								"value": 10
							},
							{
								"name": "CommonPassword",
								"value": 11
							},
							{
								"name": "WeakPassword",
								"value": 12
							},
							{
								"name": "StringLengthError",
								"value": 13
							},
							{
								"name": "MaxStringLengthError",
								"value": 14
							},
							{
								"name": "EmailValidationError",
								"value": 15
							},
							{
								"name": "EmailMissingError",
								"value": 16
							},
							{
								"name": "InvalidQueryField",
								"value": 17
							},
							{
								"name": "InvalidQueryValue",
								"value": 18
							},
							{
								"name": "SyntaxError",
								"value": 19
							},
							{
								"name": "TooManyParametersError",
								"value": 20
							},
							{
								"name": "UnterminatedValueError",
								"value": 21
							},
							{
								"name": "DeleteUserSelfError",
								"value": 22
							},
							{
								"name": "OldPasswordInvalid",
								"value": 23
							},
							{
								"name": "CannotChangePassword",
								"value": 24
							},
							{
								"name": "ReadOnly",
								"value": 25
							},
							{
								"name": "DateFormatError",
								"value": 26
							},
							{
								"name": "NoDefaultCompany",
								"value": 27
							},
							{
								"name": "AccountTypeNotSupported",
								"value": 28
							},
							{
								"name": "AuthenticationException",
								"value": 30
							},
							{
								"name": "AuthorizationException",
								"value": 31
							},
							{
								"name": "ValidationException",
								"value": 32
							},
							{
								"name": "InactiveUserError",
								"value": 33
							},
							{
								"name": "AuthenticationIncomplete",
								"value": 34
							},
							{
								"name": "BasicAuthIncorrect",
								"value": 35
							},
							{
								"name": "IdentityServerError",
								"value": 36
							},
							{
								"name": "BearerTokenInvalid",
								"value": 37
							},
							{
								"name": "ModelRequiredException",
								"value": 38
							},
							{
								"name": "AccountExpiredException",
								"value": 39
							},
							{
								"name": "BearerTokenNotSupported",
								"value": 41
							},
							{
								"name": "InvalidSecurityRole",
								"value": 42
							},
							{
								"name": "InvalidRegistrarAction",
								"value": 43
							},
							{
								"name": "RemoteServerError",
								"value": 44
							},
							{
								"name": "NoFilterCriteriaException",
								"value": 45
							},
							{
								"name": "OpenClauseException",
								"value": 46
							},
							{
								"name": "JsonFormatError",
								"value": 47
							},
							{
								"name": "InvalidDecimalValue",
								"value": 48
							},
							{
								"name": "PermissionRequired",
								"value": 49
							},
							{
								"name": "UnhandledException",
								"value": 50
							},
							{
								"name": "InactiveAccount",
								"value": 51
							},
							{
								"name": "LinkageNotAllowed",
								"value": 52
							},
							{
								"name": "LinkageStatusUpdateNotSupported",
								"value": 53
							},
							{
								"name": "ReportingCompanyMustHaveContactsError",
								"value": 60
							},
							{
								"name": "CompanyProfileNotSet",
								"value": 61
							},
							{
								"name": "CannotAssignUserToCompany",
								"value": 62
							},
							{
								"name": "MustAssignUserToCompany",
								"value": 63
							},
							{
								"name": "InvalidTaxTypeMapping",
								"value": 64
							},
							{
								"name": "ModelStateInvalid",
								"value": 70
							},
							{
								"name": "DateRangeError",
								"value": 80
							},
							{
								"name": "InvalidDateRangeError",
								"value": 81
							},
							{
								"name": "RuleMustHaveTaxCode",
								"value": 82
							},
							{
								"name": "RuleTypeRestricted",
								"value": 83
							},
							{
								"name": "InvalidCompanyLocationSetting",
								"value": 85
							},
							{
								"name": "InvalidAdjustmentType",
								"value": 99
							},
							{
								"name": "DeleteInformation",
								"value": 100
							},
							{
								"name": "OutOfRange",
								"value": 118
							},
							{
								"name": "UnspecifiedTimeZone",
								"value": 119
							},
							{
								"name": "CannotCreateDeletedObjects",
								"value": 120
							},
							{
								"name": "CannotModifyDeletedObjects",
								"value": 121
							},
							{
								"name": "ReturnNameNotFound",
								"value": 122
							},
							{
								"name": "InvalidAddressTypeAndCategory",
								"value": 123
							},
							{
								"name": "DefaultCompanyLocation",
								"value": 124
							},
							{
								"name": "InvalidCountry",
								"value": 125
							},
							{
								"name": "InvalidCountryRegion",
								"value": 126
							},
							{
								"name": "BrazilValidationError",
								"value": 127
							},
							{
								"name": "BrazilExemptValidationError",
								"value": 128
							},
							{
								"name": "BrazilPisCofinsError",
								"value": 129
							},
							{
								"name": "JurisdictionNotFoundError",
								"value": 130
							},
							{
								"name": "MedicalExciseError",
								"value": 131
							},
							{
								"name": "RateDependsTaxabilityError",
								"value": 132
							},
							{
								"name": "InvalidRateTypeCode",
								"value": 134
							},
							{
								"name": "RateTypeNotSupported",
								"value": 135
							},
							{
								"name": "CannotUpdateNestedObjects",
								"value": 136
							},
							{
								"name": "UPCCodeInvalidChars",
								"value": 137
							},
							{
								"name": "UPCCodeInvalidLength",
								"value": 138
							},
							{
								"name": "IncorrectPathError",
								"value": 139
							},
							{
								"name": "InvalidJurisdictionType",
								"value": 140
							},
							{
								"name": "MustConfirmResetLicenseKey",
								"value": 141
							},
							{
								"name": "DuplicateCompanyCode",
								"value": 142
							},
							{
								"name": "TINFormatError",
								"value": 143
							},
							{
								"name": "DuplicateNexusError",
								"value": 144
							},
							{
								"name": "UnknownNexusError",
								"value": 145
							},
							{
								"name": "ParentNexusNotFound",
								"value": 146
							},
							{
								"name": "InvalidTaxCodeType",
								"value": 147
							},
							{
								"name": "CannotActivateCompany",
								"value": 148
							},
							{
								"name": "DuplicateEntityProperty",
								"value": 149
							},
							{
								"name": "ReportingEntityError",
								"value": 150
							},
							{
								"name": "InvalidReturnOperationError",
								"value": 151
							},
							{
								"name": "CannotDeleteCompany",
								"value": 152
							},
							{
								"name": "CountryOverridesNotAvailable",
								"value": 153
							},
							{
								"name": "JurisdictionOverrideMismatch",
								"value": 154
							},
							{
								"name": "DuplicateSystemTaxCode",
								"value": 155
							},
							{
								"name": "NexusDateMismatch",
								"value": 157
							},
							{
								"name": "NexusParentDateMismatch",
								"value": 159
							},
							{
								"name": "BearerTokenParseUserIdError",
								"value": 160
							},
							{
								"name": "RetrieveUserError",
								"value": 161
							},
							{
								"name": "InvalidConfigurationSetting",
								"value": 162
							},
							{
								"name": "InvalidConfigurationValue",
								"value": 163
							},
							{
								"name": "InvalidEnumValue",
								"value": 164
							},
							{
								"name": "TaxCodeAssociatedTaxRule",
								"value": 165
							},
							{
								"name": "CannotSwitchAccountId",
								"value": 166
							},
							{
								"name": "RequestIncomplete",
								"value": 167
							},
							{
								"name": "AccountNotNew",
								"value": 168
							},
							{
								"name": "PasswordLengthInvalid",
								"value": 169
							},
							{
								"name": "InvalidPageKey",
								"value": 170
							},
							{
								"name": "InvalidEcmsOverrideCode",
								"value": 171
							},
							{
								"name": "AccountDoesNotExist",
								"value": 172
							},
							{
								"name": "InvalidTaxType",
								"value": 173
							},
							{
								"name": "IncorrectFieldValue",
								"value": 174
							},
							{
								"name": "LeadingOrTrailingException",
								"value": 175
							},
							{
								"name": "NotEnoughAddressesInfo",
								"value": 176
							},
							{
								"name": "ReportNotInitiated",
								"value": 177
							},
							{
								"name": "FailedToBuildReport",
								"value": 178
							},
							{
								"name": "ReportNotFinished",
								"value": 179
							},
							{
								"name": "FailedToDownloadReport",
								"value": 181
							},
							{
								"name": "MalformedFilterException",
								"value": 182
							},
							{
								"name": "ExpectedConjunctionError",
								"value": 183
							},
							{
								"name": "CriteriaNotSupportedError",
								"value": 184
							},
							{
								"name": "CompanyAccountAndParentAccountMismatch",
								"value": 185
							},
							{
								"name": "InvalidFileContentType",
								"value": 186
							},
							{
								"name": "RequestTooLarge",
								"value": 187
							},
							{
								"name": "EcmsDisabled",
								"value": 188
							},
							{
								"name": "UnknownConjunctionError",
								"value": 189
							},
							{
								"name": "NoLinesDiscounted",
								"value": 190
							},
							{
								"name": "FailedToDelete",
								"value": 191
							},
							{
								"name": "CircularCompanyHierarchies",
								"value": 192
							},
							{
								"name": "DuplicateEntry",
								"value": 193
							},
							{
								"name": "DuplicateFieldNameInOrderBy",
								"value": 194
							},
							{
								"name": "CannotAdjustDocumentType",
								"value": 195
							},
							{
								"name": "UserNoAccess",
								"value": 196
							},
							{
								"name": "InvalidEntry",
								"value": 197
							},
							{
								"name": "TransactionAlreadyCancelled",
								"value": 198
							},
							{
								"name": "QueryParameterOutOfRange",
								"value": 199
							},
							{
								"name": "BatchSalesAuditMustBeZippedError",
								"value": 200
							},
							{
								"name": "BatchZipMustContainOneFileError",
								"value": 201
							},
							{
								"name": "BatchInvalidFileTypeError",
								"value": 202
							},
							{
								"name": "BatchCannotSaveBatchFile",
								"value": 203
							},
							{
								"name": "BatchCannotGetBatchFile",
								"value": 204
							},
							{
								"name": "BatchCannotDeleteBatchFile",
								"value": 205
							},
							{
								"name": "BatchMustContainOneFile",
								"value": 206
							},
							{
								"name": "MissingBatchFileContent",
								"value": 207
							},
							{
								"name": "BatchCannotBeDeletedWhileProcessing",
								"value": 208
							},
							{
								"name": "InternalServerError",
								"value": 209
							},
							{
								"name": "PointOfSaleFileSize",
								"value": 250
							},
							{
								"name": "PointOfSaleSetup",
								"value": 251
							},
							{
								"name": "InvalidInputDate",
								"value": 252
							},
							{
								"name": "GetTaxError",
								"value": 300
							},
							{
								"name": "AddressConflictException",
								"value": 301
							},
							{
								"name": "DocumentCodeConflict",
								"value": 303
							},
							{
								"name": "MissingAddress",
								"value": 304
							},
							{
								"name": "InvalidParameterValue",
								"value": 306
							},
							{
								"name": "FetchLimit",
								"value": 308
							},
							{
								"name": "InvalidAddress",
								"value": 309
							},
							{
								"name": "AddressLocationNotFound",
								"value": 310
							},
							{
								"name": "MissingLine",
								"value": 311
							},
							{
								"name": "InvalidAddressTextCase",
								"value": 312
							},
							{
								"name": "DocumentNotCommitted",
								"value": 313
							},
							{
								"name": "InvalidDocumentTypesToFetch",
								"value": 315
							},
							{
								"name": "TimeoutRequested",
								"value": 316
							},
							{
								"name": "InvalidPostalCode",
								"value": 317
							},
							{
								"name": "InvalidSubscriptionDescription",
								"value": 318
							},
							{
								"name": "InvalidSubscriptionTypeId",
								"value": 319
							},
							{
								"name": "CannotChangeFilingStatus",
								"value": 401
							},
							{
								"name": "FEINFormatError",
								"value": 402
							},
							{
								"name": "ServerUnreachable",
								"value": 500
							},
							{
								"name": "SubscriptionRequired",
								"value": 600
							},
							{
								"name": "AccountExists",
								"value": 601
							},
							{
								"name": "InvitationOnly",
								"value": 602
							},
							{
								"name": "FreeTrialNotAvailable",
								"value": 606
							},
							{
								"name": "AccountExistsDifferentEmail",
								"value": 607
							},
							{
								"name": "AvalaraIdentityApiError",
								"value": 608
							},
							{
								"name": "InvalidIPAddress",
								"value": 609
							},
							{
								"name": "OfferCodeAlreadyApplied",
								"value": 610
							},
							{
								"name": "AccountAlreadyExists",
								"value": 611
							},
							{
								"name": "LicenseKeyNameAlreadyExistsForAccount",
								"value": 612
							},
							{
								"name": "RefundTypeAndPercentageMismatch",
								"value": 701
							},
							{
								"name": "InvalidDocumentTypeForRefund",
								"value": 702
							},
							{
								"name": "RefundTypeAndLineMismatch",
								"value": 703
							},
							{
								"name": "RefundLinesRequired",
								"value": 704
							},
							{
								"name": "InvalidRefundType",
								"value": 705
							},
							{
								"name": "RefundPercentageForTaxOnly",
								"value": 706
							},
							{
								"name": "LineNoOutOfRange",
								"value": 707
							},
							{
								"name": "RefundPercentageOutOfRange",
								"value": 708
							},
							{
								"name": "RefundPercentageMissing",
								"value": 709
							},
							{
								"name": "MustUseCreateTransaction",
								"value": 800
							},
							{
								"name": "MustAcceptTermsAndConditions",
								"value": 801
							},
							{
								"name": "FilingCalendarCannotBeDeleted",
								"value": 900
							},
							{
								"name": "InvalidEffectiveDate",
								"value": 901
							},
							{
								"name": "NonOutletForm",
								"value": 902
							},
							{
								"name": "OverlappingFilingCalendar",
								"value": 903
							},
							{
								"name": "FilingCalendarCannotBeEdited",
								"value": 904
							},
							{
								"name": "CannotModifyLockedTransaction",
								"value": 1100
							},
							{
								"name": "LineAlreadyExists",
								"value": 1101
							},
							{
								"name": "LineDoesNotExist",
								"value": 1102
							},
							{
								"name": "LinesNotSpecified",
								"value": 1103
							},
							{
								"name": "LineDetailsDoesNotExist",
								"value": 1104
							},
							{
								"name": "CannotCreateTransactionWithDeletedDataSource",
								"value": 1105
							},
							{
								"name": "ShipToRegionRequiredWithDataSource",
								"value": 1106
							},
							{
								"name": "InvalidBusinessType",
								"value": 1200
							},
							{
								"name": "CannotModifyExemptCert",
								"value": 1201
							},
							{
								"name": "CertificatesError",
								"value": 1203
							},
							{
								"name": "MissingRequiredFields",
								"value": 1204
							},
							{
								"name": "CertificatesNotSetup",
								"value": 1205
							},
							{
								"name": "ConflictingExposureZone",
								"value": 1208
							},
							{
								"name": "MissingFieldToCreateExposureZone",
								"value": 1209
							},
							{
								"name": "MissingExemptReason",
								"value": 1210
							},
							{
								"name": "InvalidExemptReason",
								"value": 1211
							},
							{
								"name": "InvalidExemptionOperation",
								"value": 1212
							},
							{
								"name": "ConflictingFields",
								"value": 1213
							},
							{
								"name": "InvalidPdfOrImageFile",
								"value": 1214
							},
							{
								"name": "InvalidCoverLetterTitle",
								"value": 1215
							},
							{
								"name": "AccountNotProvisioned",
								"value": 1216
							},
							{
								"name": "InvalidRequestContentType",
								"value": 1217
							},
							{
								"name": "ExemptionPaginationLimits",
								"value": 1218
							},
							{
								"name": "ExemptionSortLimits",
								"value": 1219
							},
							{
								"name": "CustomerCantBeBothShipToAndBillTo",
								"value": 1220
							},
							{
								"name": "BillToCustomerExpected",
								"value": 1221
							},
							{
								"name": "ShipToCustomerExpected",
								"value": 1222
							},
							{
								"name": "EcmsSstCertsRequired",
								"value": 1223
							},
							{
								"name": "TransactionNotCancelled",
								"value": 1300
							},
							{
								"name": "TooManyTransactions",
								"value": 1301
							},
							{
								"name": "OnlyTaxDateOverrideIsAllowed",
								"value": 1302
							},
							{
								"name": "TransactionAlreadyExists",
								"value": 1303
							},
							{
								"name": "DateMismatch",
								"value": 1305
							},
							{
								"name": "InvalidDocumentStatusForVerify",
								"value": 1306
							},
							{
								"name": "TotalAmountMismatch",
								"value": 1307
							},
							{
								"name": "TotalTaxMismatch",
								"value": 1308
							},
							{
								"name": "InvalidDocumentType",
								"value": 1310
							},
							{
								"name": "MultiDocumentPartiallyLocked",
								"value": 1312
							},
							{
								"name": "TransactionIsCommitted",
								"value": 1313
							},
							{
								"name": "InvalidDocumentStatus",
								"value": 1314
							},
							{
								"name": "CommsConfigClientIdMissing",
								"value": 1400
							},
							{
								"name": "CommsConfigClientIdBadValue",
								"value": 1401
							},
							{
								"name": "AccountInNewStatusException",
								"value": 1404
							},
							{
								"name": "WorksheetException",
								"value": 1405
							},
							{
								"name": "InvalidAccountOverride",
								"value": 1406
							},
							{
								"name": "AccountOverrideNotAuthorized",
								"value": 1407
							},
							{
								"name": "FieldNotQueryableError",
								"value": 1408
							},
							{
								"name": "UsernameRequired",
								"value": 1409
							},
							{
								"name": "InvalidAuditMessage",
								"value": 1410
							},
							{
								"name": "FieldNotOrderableError",
								"value": 1411
							},
							{
								"name": "CannotDeleteParentBeforeChildNexus",
								"value": 1500
							},
							{
								"name": "NexusChildDateMismatch",
								"value": 1501
							},
							{
								"name": "RemoteValidationError",
								"value": 1502
							},
							{
								"name": "CannotModifySstNexus",
								"value": 1503
							},
							{
								"name": "InvalidLocalNexusTypeId",
								"value": 1504
							},
							{
								"name": "AdvancedRuleRequestRuleError",
								"value": 1602
							},
							{
								"name": "AdvancedRuleResponseRuleError",
								"value": 1603
							},
							{
								"name": "AdvancedRuleError",
								"value": 1605
							},
							{
								"name": "TaxRuleRequiresNexus",
								"value": 1701
							},
							{
								"name": "UPCCodeNotUnique",
								"value": 1702
							},
							{
								"name": "TaxCodeAssociatedWithItemCodeNotFound",
								"value": 1704
							},
							{
								"name": "DuplicateSystemForItem",
								"value": 1705
							},
							{
								"name": "CannotDismissGlobalNotification",
								"value": 1706
							},
							{
								"name": "CannotUpdateAccountTypeId",
								"value": 1713
							},
							{
								"name": "TaxpayerNumberIsRequired",
								"value": 1714
							},
							{
								"name": "RequestLimitExceeded",
								"value": 1715
							},
							{
								"name": "ConcurrentRequestLimitExceeded",
								"value": 1716
							},
							{
								"name": "InvalidDocumentTypeForInspect",
								"value": 1717
							},
							{
								"name": "ServiceNotReady",
								"value": 1718
							},
							{
								"name": "UpdateLocationRemittanceMismatchTypeAndCategory",
								"value": 1719
							},
							{
								"name": "UpdateLocationRemittanceCheckExistingEffectiveDateError",
								"value": 1720
							},
							{
								"name": "UpdateLocationRemittanceCheckExistingEndDateError",
								"value": 1721
							},
							{
								"name": "ErrorCountLimitExceededError",
								"value": 1722
							},
							{
								"name": "RateLimitExceededError",
								"value": 1723
							},
							{
								"name": "UnsupportedFileFormat",
								"value": 1800
							},
							{
								"name": "UnsupportedOutputFileType",
								"value": 1801
							},
							{
								"name": "TaxProfileNotProvided",
								"value": 1900
							},
							{
								"name": "InvalidTaxProfile",
								"value": 1901
							},
							{
								"name": "CompanyTaxProfileEntryRequired",
								"value": 1902
							},
							{
								"name": "ErrorReadingTaxProfileEntry",
								"value": 1903
							},
							{
								"name": "TraceDataNotAvailable",
								"value": 2000
							},
							{
								"name": "InvalidParameterUnitMeasurementType",
								"value": 2100
							},
							{
								"name": "ParameterUnitRequired",
								"value": 2101
							},
							{
								"name": "InvalidParameterValueDataType",
								"value": 2102
							},
							{
								"name": "InvalidParameterAttributeType",
								"value": 2103
							},
							{
								"name": "SubscriptionRequiredForParameter",
								"value": 2104
							},
							{
								"name": "InvalidAccountType",
								"value": 2105
							},
							{
								"name": "InvalidFirmSubscriptions",
								"value": 2106
							},
							{
								"name": "GenericTaxCodeForItem",
								"value": 2200
							},
							{
								"name": "CannotCertifyCompany",
								"value": 2201
							},
							{
								"name": "NoVoidedDocuments",
								"value": 2202
							},
							{
								"name": "InadequateCommittedDocuments",
								"value": 2203
							},
							{
								"name": "DocumentCodeIsGuid",
								"value": 2204
							},
							{
								"name": "CustomerVendorCodeIsGuid",
								"value": 2205
							},
							{
								"name": "InadequateDocumentLineCount",
								"value": 2206
							},
							{
								"name": "SameDocumentDescription",
								"value": 2207
							},
							{
								"name": "NoExemptionNoOrCustomerUsageType",
								"value": 2208
							},
							{
								"name": "InadequateUniqueAddresses",
								"value": 2209
							},
							{
								"name": "ItemCodesAreAllSame",
								"value": 2210
							},
							{
								"name": "TaxCodesAreAllSame",
								"value": 2211
							},
							{
								"name": "LocationCodeNotUsed",
								"value": 2212
							},
							{
								"name": "RepeatedLinesInDocument",
								"value": 2213
							},
							{
								"name": "TaxDateOverrideAndNegativeLineAmount",
								"value": 2214
							},
							{
								"name": "AllUSDCurrencyCodes",
								"value": 2215
							},
							{
								"name": "NoVATBuyerId",
								"value": 2216
							},
							{
								"name": "AllUSCountryCodes",
								"value": 2217
							},
							{
								"name": "NoDocumentsToTest",
								"value": 2218
							},
							{
								"name": "NoShippingCharge",
								"value": 2219
							},
							{
								"name": "FailedToUpdateCompanyLocation",
								"value": 2314
							},
							{
								"name": "CompanyLocationDateRangeOverlap",
								"value": 2315
							},
							{
								"name": "FieldLengthError",
								"value": 2400
							},
							{
								"name": "InputContainsBlacklistedCharacters",
								"value": 2401
							},
							{
								"name": "CannotCreateNestedObjects",
								"value": 2402
							},
							{
								"name": "BatchTransactionTypeError",
								"value": 2501
							},
							{
								"name": "BatchTransactionLineLimitExceeded",
								"value": 2502
							},
							{
								"name": "BatchCompanyIdAndCompanyCodeMismatch",
								"value": 2503
							},
							{
								"name": "BatchCannotBeCancelledStatusError",
								"value": 2504
							},
							{
								"name": "BatchCannotBeCancelledFormatError",
								"value": 2505
							},
							{
								"name": "InvalidParameterDataType",
								"value": 2600
							}
						]
					}
				},
				"number": {
					"format": "int32",
					"description": "Unique ID number referring to this error or message.",
					"type": "integer",
					"example": 142
				},
				"message": {
					"description": "Concise summary of the message, suitable for display in the caption of an alert box.",
					"type": "string",
					"example": "The entity was marked as deleted."
				},
				"description": {
					"description": "A more detailed description of the problem referenced by this error message, suitable for display in the contents area of an alert box.",
					"type": "string",
					"example": "Object successfully marked as deleted."
				},
				"faultCode": {
					"description": "Indicates the SOAP Fault code, if this was related to an error that corresponded to AvaTax SOAP v1 behavior.",
					"type": "string",
					"example": "Client"
				},
				"faultSubCode": {
					"description": "If this is an error from a downstream system (such as Calc) faultSubCode can be used to represent the fault code from that system.",
					"type": "string"
				},
				"helpLink": {
					"description": "URL to help for this message",
					"type": "string",
					"readOnly": true,
					"example": "http://developer.avalara.com/avatax/errors/DeleteInformation"
				},
				"refersTo": {
					"description": "Item the message refers to, if applicable.  This is used to indicate a missing or incorrect value.",
					"type": "string"
				},
				"severity": {
					"description": "Severity of the message",
					"enum": ["Success", "Warning", "Error", "Exception"],
					"type": "string",
					"example": "Success",
					"x-enum-metadata": {
						"name": "SeverityLevel",
						"values": [
							{
								"name": "Success",
								"value": 0
							},
							{
								"name": "Warning",
								"value": 1
							},
							{
								"name": "Error",
								"value": 2
							},
							{
								"name": "Exception",
								"value": 3
							}
						]
					}
				}
			},
			"example": {
				"code": "DeleteInformation",
				"number": 142,
				"message": "The entity was marked as deleted.",
				"description": "Object successfully marked as deleted.",
				"faultCode": "Client",
				"helpLink": "http://developer.avalara.com/avatax/errors/DeleteInformation",
				"severity": "Success"
			}
		},
		"FetchResult[AccountModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NewAccountRequestModel": {
			"description": "Represents a request for a new account with Avalara for a new subscriber.\r\nContains information about the account requested and the rate plan selected.",
			"required": ["offer", "accountName", "firstName", "lastName", "email", "companyAddress"],
			"type": "object",
			"properties": {
				"offer": {
					"description": "The offer code provided to you by your Avalara business development contact.\r\n            \r\nThis code controls what services and rates the customer will be provisioned with upon creation.\r\n            \r\nIf you do not know your offer code, please contact your Avalara business development representative.",
					"type": "string",
					"example": "DeveloperDotAvalaraFreeTrial"
				},
				"connectorId": {
					"description": "The id associated with the connector",
					"type": "string",
					"example": "7014ewrtgd"
				},
				"campaign": {
					"description": "If your Avalara business development representative requests, please provide the campaign ID associated with your\r\nsignup process.  This campaign identifier helps Avalara match users to the context in which they learned about the product\r\nto help improve the accuracy of our messaging.\r\n            \r\nThe `campaign` field must be either null or a value provided to you by an Avalara business development representative.\r\nIf you provide an unexpected value in this field, your API call will fail.",
					"type": "string",
					"example": "70140000000TsVb"
				},
				"leadSource": {
					"description": "If your Avalara business development representative requests, please provide the lead source value associated with your\r\nsignup process.  This lead source identifier helps Avalara match users to the context in which they learned about the product\r\nto help improve the accuracy of our messaging.\r\n            \r\nThe `leadSource` field must be either null or a value provided to you by an Avalara business development representative.\r\nIf you provide an unexpected value in this field, your API call will fail.",
					"type": "string",
					"example": "Direct Visitor"
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "The date on which the account should take effect.  If null, defaults to today.\r\n            \r\nYou should leave this value `null` unless specifically requested by your Avalara business development manager.",
					"type": "string"
				},
				"endDate": {
					"format": "date-time",
					"description": "The date on which the account should expire.\r\n            \r\nYou should leave this value `null` unless specifically requested by your Avalara business development manager.",
					"type": "string"
				},
				"accountName": {
					"description": "The name of the account to create",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "BizTech Company Inc."
				},
				"website": {
					"description": "Website of the new customer whose account is being created.\r\n            \r\nIt is strongly recommended to provide the customer's website URL, as this will help our support representatives better\r\nassist customers.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "https://biztech.com"
				},
				"paymentMethodId": {
					"description": "Payment Method to be associated with the account.\r\n            \r\nThis is strictly to be used internally unless your Avalara business development manager specifically asks you to provide this value\r\nwhile attempting to create an account.",
					"type": "string",
					"example": "701abc-def"
				},
				"firstName": {
					"description": "First name of the primary contact person for this account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob"
				},
				"lastName": {
					"description": "Last name of the primary contact person for this account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Example"
				},
				"title": {
					"description": "Title of the primary contact person for this account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"phoneNumber": {
					"description": "Phone number of the primary contact person for this account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"email": {
					"description": "Email of the primary contact person for this account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "bob@example.org"
				},
				"userPassword": {
					"description": "If instructed by your Avalara business development manager, set this value to a temporary password to permit the user to continue their onboarding process.\r\n            \r\nIf this value is null, a temporary password is generated by the system and emailed to the user.\r\n            \r\nThe user will then be asked to choose a permanent password when they first log on to the AvaTax website.",
					"type": "string"
				},
				"welcomeEmail": {
					"description": "This option controls what type of a welcome email is sent when the account is created.\r\n            \r\n* `Normal` - A standard welcome email will be sent.\r\n* `Suppressed` - No email will be sent.\r\n* `Custom` - If your Avalara business development representative provides you with a customized welcome email for your customers, please select this option.",
					"type": "string",
					"example": "Normal"
				},
				"companyAddress": {
					"$ref": "#/definitions/CompanyAddress",
					"description": "Address information of the account being created.",
					"example": {
						"line": "100 Ravine Ln",
						"region": "WA",
						"country": "US",
						"postalCode": "98010"
					}
				},
				"companyCode": {
					"description": "Company code to be assigned to the company created for this account.\r\n            \r\nIf no company code is provided, this will be defaulted to \"DEFAULT\" company code.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"properties": {
					"description": "Properties of the primary contact person for this account",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"acceptAvalaraTermsAndConditions": {
					"description": "Set this to true if and only if the owner of the newly created account accepts Avalara's terms and conditions for your account.\r\n            \r\nReading and accepting Avalara's terms and conditions is necessary in order for the account to receive a license key.",
					"type": "boolean",
					"example": true
				},
				"haveReadAvalaraTermsAndConditions": {
					"description": "Set this to true if and only if the owner of the newly created account has fully read Avalara's terms and conditions for your account.\r\n            \r\nReading and accepting Avalara's terms and conditions is necessary in order for the account to receive a license key.",
					"type": "boolean",
					"example": true
				},
				"marketingContext": {
					"description": "A dynamic key-value pair for the marketing context information",
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"example": {
						"campaignId": "70140000000TsVb",
						"leadSource": "Direct Visitor"
					}
				},
				"accountType": {
					"description": "Type of the account to be created. Regular, Firm or FirmClient",
					"enum": ["Regular", "Firm", "FirmClient"],
					"type": "string",
					"example": "Regular",
					"x-enum-metadata": {
						"name": "AccountTypeId",
						"values": [
							{
								"name": "Regular",
								"value": 1
							},
							{
								"name": "Firm",
								"value": 2
							},
							{
								"name": "FirmClient",
								"value": 3
							}
						]
					}
				},
				"taxPayerIdNumber": {
					"description": "United States Taxpayer ID number, usually your Employer Identification Number if you are a business or your\r\nSocial Security Number if you are an individual.\r\nThis value is required if the address provided is inside the US and if you subscribed to the Avalara Managed Returns or SST Certified Service Provider service. Otherwise it is optional.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string"
				}
			},
			"example": {
				"offer": "DeveloperDotAvalaraFreeTrial",
				"connectorId": "7014ewrtgd",
				"campaign": "70140000000TsVb",
				"leadSource": "Direct Visitor",
				"accountName": "BizTech Company Inc.",
				"website": "https://biztech.com",
				"paymentMethodId": "701abc-def",
				"firstName": "Bob",
				"lastName": "Example",
				"email": "bob@example.org",
				"welcomeEmail": "Normal",
				"companyAddress": {
					"line": "100 Ravine Ln",
					"region": "WA",
					"country": "US",
					"postalCode": "98010"
				},
				"acceptAvalaraTermsAndConditions": true,
				"haveReadAvalaraTermsAndConditions": true,
				"marketingContext": {
					"campaignId": "70140000000TsVb",
					"leadSource": "Direct Visitor"
				},
				"accountType": "Regular"
			}
		},
		"CompanyAddress": {
			"description": "Company Address Information",
			"required": ["line", "country", "postalCode"],
			"type": "object",
			"properties": {
				"line": {
					"description": "Address Line1",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "2000 Main Street"
				},
				"city": {
					"description": "City",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"postalCode": {
					"description": "Postal Code",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "92614"
				}
			},
			"example": {
				"line": "2000 Main Street",
				"city": "Irvine",
				"region": "CA",
				"country": "US",
				"postalCode": "92614"
			}
		},
		"NewAccountModel": {
			"description": "Represents information about a newly created account",
			"type": "object",
			"properties": {
				"accountId": {
					"format": "int32",
					"description": "This is the ID number of the account that was created",
					"type": "integer",
					"example": 123456789
				},
				"accountDetailsEmailedTo": {
					"description": "This is the email address to which credentials were mailed",
					"type": "string",
					"example": "bob@example.org"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date and time when this account was created",
					"type": "string",
					"example": "0001-01-01T00:00:00"
				},
				"emailedDate": {
					"format": "date-time",
					"description": "The date and time when account information was emailed to the user",
					"type": "string",
					"example": "0001-01-01T00:00:00"
				},
				"limitations": {
					"description": "If this account includes any limitations, specify them here",
					"type": "string"
				},
				"licenseKey": {
					"description": "The license key of the account that was created",
					"type": "string"
				},
				"paymentUrl": {
					"description": "The payment url where the payment method can be set up",
					"type": "string"
				}
			},
			"example": {
				"accountId": 123456789,
				"accountDetailsEmailedTo": "bob@example.org",
				"createdDate": "0001-01-01T00:00:00",
				"emailedDate": "0001-01-01T00:00:00"
			}
		},
		"OfferModel": {
			"description": "Gets the response for the offer request",
			"type": "object",
			"properties": {
				"id": {
					"description": "Id of the transaction",
					"type": "string",
					"example": "1234567989"
				},
				"offerMessage": {
					"description": "Message indicating what action took place",
					"type": "string",
					"example": "The offer abc has been added to the account 123456789 at 2018-07-08"
				}
			},
			"example": {
				"id": "1234567989",
				"offerMessage": "The offer abc has been added to the account 123456789 at 2018-07-08"
			}
		},
		"FreeTrialRequestModel": {
			"description": "Represents a request for a free trial account for AvaTax.\r\nFree trial accounts are only available on the Sandbox environment.",
			"required": [
				"firstName",
				"lastName",
				"email",
				"company",
				"phone",
				"companyAddress",
				"haveReadAvalaraTermsAndConditions",
				"acceptAvalaraTermsAndConditions"
			],
			"type": "object",
			"properties": {
				"firstName": {
					"description": "The first or given name of the user requesting a free trial.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob"
				},
				"lastName": {
					"description": "The last or family name of the user requesting a free trial.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "McExample"
				},
				"email": {
					"description": "The email address of the user requesting a free trial.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "bob@example.org"
				},
				"company": {
					"description": "The company or organizational name for this free trial.  If this account is for personal use, it is acceptable\r\nto use your full name here.",
					"type": "string",
					"example": "Bob's Artisan Pottery"
				},
				"phone": {
					"description": "The phone number of the person requesting the free trial.",
					"type": "string",
					"example": "+1 (714) 555-1212"
				},
				"campaign": {
					"description": "Campaign identifier for Notification purpose",
					"type": "string",
					"example": "70140000000TsVb"
				},
				"companyAddress": {
					"$ref": "#/definitions/CompanyAddress",
					"description": "The Address information of the account",
					"example": {
						"line": "100 Ravine Ln",
						"region": "WA",
						"country": "US",
						"postalCode": "98010"
					}
				},
				"website": {
					"description": "Website of the company or user requesting a free trial",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "www.bobartisanpottery.com"
				},
				"haveReadAvalaraTermsAndConditions": {
					"description": "Read Avalara's terms and conditions is necessary for a free trial account",
					"type": "boolean",
					"example": true
				},
				"acceptAvalaraTermsAndConditions": {
					"description": "Accept Avalara's terms and conditions is necessary for a free trial",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"firstName": "Bob",
				"lastName": "McExample",
				"email": "bob@example.org",
				"company": "Bob's Artisan Pottery",
				"phone": "+1 (714) 555-1212",
				"campaign": "70140000000TsVb",
				"companyAddress": {
					"line": "100 Ravine Ln",
					"region": "WA",
					"country": "US",
					"postalCode": "98010"
				},
				"website": "www.bobartisanpottery.com",
				"haveReadAvalaraTermsAndConditions": true,
				"acceptAvalaraTermsAndConditions": true
			}
		},
		"ResetLicenseKeyModel": {
			"description": "Represents a license key reset request.",
			"required": ["accountId", "confirmResetLicenseKey"],
			"type": "object",
			"properties": {
				"accountId": {
					"format": "int32",
					"description": "The primary key of the account ID to reset",
					"type": "integer",
					"example": 123456789
				},
				"confirmResetLicenseKey": {
					"description": "Set this value to true to reset the license key for this account.\r\nThis license key reset function will only work when called using the credentials of the account administrator of this account.",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"accountId": 123456789,
				"confirmResetLicenseKey": true
			}
		},
		"LicenseKeyModel": {
			"description": "Represents a license key for this account.",
			"type": "object",
			"properties": {
				"accountId": {
					"format": "int32",
					"description": "The primary key of the account",
					"type": "integer",
					"example": 123456789
				},
				"privateLicenseKey": {
					"description": "This is your private license key.  You must record this license key for safekeeping.\r\nIf you lose this key, you must contact the ResetLicenseKey API in order to request a new one.\r\nEach account can only have one license key at a time.",
					"type": "string",
					"example": "742A02AA463CDE741E932EC365360CA3CF378BD9"
				},
				"httpRequestHeader": {
					"description": "If your software allows you to specify the HTTP Authorization header directly, this is the header string you\r\nshould use when contacting Avalara to make API calls with this license key.",
					"type": "string",
					"example": "Basic MTIzNDU2Nzg5Ojc0MkEwMkFBNDYzQ0RFNzQxRTkzMkVDMzY1MzYwQ0EzQ0YzNzhCRDk="
				}
			},
			"example": {
				"accountId": 123456789,
				"privateLicenseKey": "742A02AA463CDE741E932EC365360CA3CF378BD9",
				"httpRequestHeader": "Basic MTIzNDU2Nzg5Ojc0MkEwMkFBNDYzQ0RFNzQxRTkzMkVDMzY1MzYwQ0EzQ0YzNzhCRDk="
			}
		},
		"AccountLicenseKeyModel": {
			"description": "An account user who is permitted to use AvaTax.",
			"required": ["name", "accountId"],
			"type": "object",
			"properties": {
				"name": {
					"description": "The unique name for license key per account",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"example": "ABCDEFGHIJK"
				},
				"accountId": {
					"format": "int32",
					"description": "AccountId for required license key",
					"type": "integer",
					"example": 123456789
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true,
					"example": "2020-07-30T00:00:00+00:00"
				},
				"createdUserId": {
					"format": "int32",
					"description": "The user id for the user who created this record.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true,
					"example": "2020-07-30T00:00:00+00:00"
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user id of user who last modified this record.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				}
			},
			"example": {
				"name": "ABCDEFGHIJK",
				"accountId": 123456789,
				"createdDate": "2020-07-30T00:00:00+00:00",
				"createdUserId": 1,
				"modifiedDate": "2020-07-30T00:00:00+00:00",
				"modifiedUserId": 1
			}
		},
		"ActivateAccountModel": {
			"description": "Represents a request to activate an account by reading and accepting its terms and conditions.",
			"type": "object",
			"properties": {
				"acceptAvalaraTermsAndConditions": {
					"description": "Set this to true if and only if you accept Avalara's terms and conditions for your account.",
					"type": "boolean",
					"example": true
				},
				"haveReadAvalaraTermsAndConditions": {
					"description": "Set this to true if and only if you have fully read Avalara's terms and conditions for your account.",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"acceptAvalaraTermsAndConditions": true,
				"haveReadAvalaraTermsAndConditions": true
			}
		},
		"AccountConfigurationModel": {
			"description": "Represents one configuration setting for this account",
			"required": ["category", "name"],
			"type": "object",
			"properties": {
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the account to which this setting applies",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"category": {
					"description": "The category of the configuration setting.  Avalara-defined categories include `AddressServiceConfig` and `TaxServiceConfig`.  Customer-defined categories begin with `X-`.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "TaxServiceConfig"
				},
				"name": {
					"description": "The name of the configuration setting",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "MaxLines"
				},
				"value": {
					"description": "The current value of the configuration setting",
					"maxLength": 200,
					"minLength": 0,
					"type": "string",
					"example": "1000"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"accountId": 0,
				"category": "TaxServiceConfig",
				"name": "MaxLines",
				"value": "1000"
			}
		},
		"FetchResult[AuditModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/AuditModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"AuditModel": {
			"description": "Provides detailed information about an API call.\r\n            \r\nThe information on this record was captured by AvaTax when your API call was made.  If you are unsure why you\r\nreceived an error, you can fetch these audit objects and examine the `RequestUrl`, `RequestBody`, and `ErrorMessage`\r\nfields to determine root cause for the error.",
			"type": "object",
			"properties": {
				"transactionId": {
					"format": "int64",
					"description": "A unique ID number referring to this individual API call.",
					"type": "integer"
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the account to which the user belongs.",
					"type": "integer"
				},
				"userId": {
					"format": "int32",
					"description": "The unique ID number of the user that performed this API call.",
					"type": "integer"
				},
				"ipAddress": {
					"description": "The origin IP address from which AvaTax received this API call.  If you use a proxy layer or other\r\ngateway, this IP address may be the address of the gateway.  This information is not guaranteed\r\nto be accurate and may change based on network conditions between your site and AvaTax.",
					"type": "string"
				},
				"machineName": {
					"description": "If your API call specified a `MachineName` in the [Client Profile Headers](https://developer.avalara.com/avatax/client-headers/), this\r\nvariable will contain its value.  This information is self-reported by the client and is not guaranteed to be present.",
					"type": "string"
				},
				"clientName": {
					"description": "If your API call specified a `ClientName` in the [Client Profile Headers](https://developer.avalara.com/avatax/client-headers/), this\r\nvariable will contain its value.  This information is self-reported by the client and is not guaranteed to be present.",
					"type": "string"
				},
				"clientVersion": {
					"description": "If your API call specified a `ClientVersion` in the [Client Profile Headers](https://developer.avalara.com/avatax/client-headers/), this\r\nvariable will contain its value.  This information is self-reported by the client and is not guaranteed to be present.",
					"type": "string"
				},
				"adapterName": {
					"description": "If your API call specified a `AdapterName` in the [Client Profile Headers](https://developer.avalara.com/avatax/client-headers/), this\r\nvariable will contain its value.  This information is self-reported by the client and is not guaranteed to be present.",
					"type": "string"
				},
				"adapterVersion": {
					"description": "If your API call specified a `AdapterVersion` in the [Client Profile Headers](https://developer.avalara.com/avatax/client-headers/), this\r\nvariable will contain its value.  This information is self-reported by the client and is not guaranteed to be present.",
					"type": "string"
				},
				"serverName": {
					"description": "The server name of the AvaTax server that responded to this API call.",
					"type": "string"
				},
				"serverVersion": {
					"description": "The software version number of the currently deployed AvaTax API software on the server that responded to this API call.",
					"type": "string"
				},
				"referenceId": {
					"format": "int64",
					"description": "A context-dependent reference ID for this API call.  This reference ID is not guaranteed to contain a specific value\r\nand may be used differently by various API calls.",
					"type": "integer"
				},
				"severityLevelId": {
					"format": "int32",
					"description": "If the API contained a specific type of error code, this value would contain the unique ID number of the severity level\r\nof the response returned to the client.",
					"type": "integer"
				},
				"serverTimestamp": {
					"format": "date-time",
					"description": "The server timestamp, in UTC, of the time when the server received this API call.",
					"type": "string"
				},
				"serverDuration": {
					"format": "int32",
					"description": "The number of milliseconds that the AvaTax server took to respond to this API call.",
					"type": "integer"
				},
				"serviceName": {
					"description": "The service name of the AvaTax API service that responded to this API call.",
					"type": "string"
				},
				"operation": {
					"description": "The operation name of this API call.",
					"type": "string"
				},
				"referenceCode": {
					"description": "A context-dependent reference code for this API call.  This reference code is not guaranteed to contain a specific value\r\nand may be used differently by various API calls.",
					"type": "string"
				},
				"errorMessage": {
					"description": "If this API call reported an error, this contains the name of the error that was returned.  You can look up more\r\ninformation about AvaTax error messages on the [AvaTax REST Error Page](https://developer.avalara.com/avatax/errors/).",
					"type": "string"
				},
				"auditMessage": {
					"description": "Reserved for Avalara internal usage.",
					"type": "string"
				},
				"loadBalancerDuration": {
					"format": "int32",
					"description": "Reserved for Avalara internal usage.",
					"type": "integer"
				},
				"recordCount": {
					"format": "int32",
					"description": "If this API call returned an array of information, this value contains the number of records returned.",
					"type": "integer"
				},
				"referenceAuthorization": {
					"description": "Reserved for Avalara internal usage.",
					"type": "string"
				},
				"isQueued": {
					"description": "Reserved for Avalara internal usage.",
					"type": "boolean"
				},
				"databaseCallCount": {
					"format": "int32",
					"description": "If this API call included requests made to any of the AvaTax data layers, this contains the number of requests that were traced.\r\n            \r\nPlease note that not all data layers support this measurement.",
					"type": "integer"
				},
				"databaseCallDuration": {
					"description": "If this API call included requests made to any of the AvaTax data layers, this contains the total duration time measured for all the requests.\r\n            \r\nPlease note that not all data layers support this measurement.",
					"type": "string"
				},
				"remoteCallDuration": {
					"description": "If this API call included interoperation with other Avalara services, this contains the amount of time taken by those services.",
					"type": "string"
				},
				"events": {
					"description": "Reserved for Avalara internal usage.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/AuditEvent"
					}
				},
				"requestUrl": {
					"description": "The original request URL as provided by the client.",
					"type": "string"
				},
				"requestBody": {
					"description": "If this request was an HTTP request that included a body such as a POST or a PUT, this will contain the request body sent by the client.\r\n            \r\nThis request body is represented as a string, exactly as it was received from the client.  Regardless of whether the request was JSON,\r\nBase64 encoded bytes, or a CSV file, this contains the exact contents of the request body.",
					"type": "string"
				},
				"responseStatus": {
					"format": "int32",
					"description": "The HTTP response code that was sent by the server.",
					"type": "integer"
				},
				"responseBody": {
					"description": "The entire response body sent from the AvaTax server to the client.  This value is returned as a string regardless of whether the results\r\nwere JSON-formatted text, CSV files, or raw strings.",
					"type": "string"
				},
				"remoteCalls": {
					"description": "Reserved for Avalara internal usage.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/AuditModel"
					}
				}
			},
			"example": {
				"transactionId": 123,
				"accountId": 123,
				"userId": 123,
				"ipAddress": "123.0.0.123",
				"machineName": "AV-T1234-56789",
				"clientName": "Swagger UI",
				"clientVersion": "12.3.0",
				"adapterVersion": "1.0",
				"serverName": "AV-T1234-56789",
				"serverVersion": "12.3.0.0",
				"referenceId": 0,
				"severityLevelId": 0,
				"serverTimestamp": "2020-07-30T22:11:28.7768006Z",
				"serverDuration": 12345,
				"serviceName": "AccountSvcJson",
				"operation": "QueryCompanies",
				"referenceCode": "/api/v2/companies",
				"errorMessage": "",
				"loadBalancerDuration": 0,
				"recordCount": 32309,
				"referenceAuthorization": "",
				"isQueued": false,
				"databaseCallCount": 1,
				"databaseCallDuration": "00:00:00",
				"remoteCallDuration": "00:00:00",
				"requestUrl": "/api/v2/companies",
				"responseStatus": 200,
				"responseBody": "{\r\n  \"@recordsetCount\": 0,\r\n  \"value\": [],\r\n  \"@nextLink\": \"/api/v2/companies?%24top=10&%24skip=10\"\r\n}"
			}
		},
		"AuditEvent": {
			"type": "object",
			"properties": {
				"auditEventId": {
					"format": "int64",
					"type": "integer"
				},
				"transactionId": {
					"format": "int64",
					"type": "integer"
				},
				"auditEventLevelId": {
					"format": "int32",
					"type": "integer"
				},
				"eventTimestamp": {
					"format": "date-time",
					"type": "string"
				},
				"source": {
					"type": "string"
				},
				"summary": {
					"type": "string"
				},
				"details": {
					"type": "string"
				}
			}
		},
		"AddressValidationInfo": {
			"description": "TextCase info for input address",
			"type": "object",
			"properties": {
				"textCase": {
					"description": "Specify the text case for the validated address result.  If not specified, will return uppercase.",
					"enum": ["Upper", "Mixed"],
					"type": "string",
					"example": "Upper",
					"x-enum-metadata": {
						"name": "TextCase",
						"values": [
							{
								"name": "Upper",
								"value": 0
							},
							{
								"name": "Mixed",
								"value": 1
							}
						]
					}
				},
				"line1": {
					"description": "First line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "2000 Main Street"
				},
				"line2": {
					"description": "Second line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "Third line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "City component of the address",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"postalCode": {
					"description": "Postal Code / Zip Code component of the address.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string",
					"example": "92614"
				},
				"latitude": {
					"format": "double",
					"description": "Geospatial latitude measurement, in Decimal Degrees floating point format.",
					"type": "number"
				},
				"longitude": {
					"format": "double",
					"description": "Geospatial longitude measurement, in Decimal Degrees floating point format.",
					"type": "number"
				}
			},
			"example": {
				"textCase": "Upper",
				"line1": "2000 Main Street",
				"city": "Irvine",
				"region": "CA",
				"country": "US",
				"postalCode": "92614"
			}
		},
		"AddressResolutionModel": {
			"description": "Address Resolution Model",
			"type": "object",
			"properties": {
				"address": {
					"$ref": "#/definitions/AddressInfo",
					"description": "The original address",
					"example": {
						"line1": "2000 Main Street",
						"city": "Irvine",
						"region": "CA",
						"country": "US",
						"postalCode": "92614"
					}
				},
				"validatedAddresses": {
					"description": "The validated address or addresses",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ValidatedAddressInfo"
					}
				},
				"coordinates": {
					"$ref": "#/definitions/CoordinateInfo",
					"description": "The geospatial coordinates of this address",
					"example": {
						"latitude": 33.684884,
						"longitude": -117.851321
					}
				},
				"resolutionQuality": {
					"description": "The resolution quality of the geospatial coordinates",
					"enum": [
						"NotCoded",
						"External",
						"CountryCentroid",
						"RegionCentroid",
						"PartialCentroid",
						"PostalCentroidGood",
						"PostalCentroidBetter",
						"PostalCentroidBest",
						"Intersection",
						"Interpolated",
						"Rooftop",
						"Constant"
					],
					"type": "string",
					"example": "Rooftop",
					"x-enum-metadata": {
						"name": "ResolutionQuality",
						"values": [
							{
								"name": "NotCoded",
								"value": 0
							},
							{
								"name": "External",
								"value": 1
							},
							{
								"name": "CountryCentroid",
								"value": 2
							},
							{
								"name": "RegionCentroid",
								"value": 3
							},
							{
								"name": "PartialCentroid",
								"value": 4
							},
							{
								"name": "PostalCentroidGood",
								"value": 5
							},
							{
								"name": "PostalCentroidBetter",
								"value": 6
							},
							{
								"name": "PostalCentroidBest",
								"value": 7
							},
							{
								"name": "Intersection",
								"value": 8
							},
							{
								"name": "Interpolated",
								"value": 9
							},
							{
								"name": "Rooftop",
								"value": 10
							},
							{
								"name": "Constant",
								"value": 11
							}
						]
					}
				},
				"taxAuthorities": {
					"description": "List of informational and warning messages regarding this address",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxAuthorityInfo"
					},
					"example": [
						{
							"avalaraId": "AGAM",
							"jurisdictionName": "CALIFORNIA",
							"jurisdictionType": "State",
							"signatureCode": "AGAM"
						}
					]
				},
				"messages": {
					"description": "List of informational and warning messages regarding this address",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/AvaTaxMessage"
					},
					"example": [
						{
							"summary": "The address is not deliverable.",
							"details": "The physical location exists but there are no homes on this street. One reason might be railroad tracks or rivers running alongside this street, as they would prevent construction of homes in this location.",
							"refersTo": "address",
							"severity": "Error",
							"source": "Avalara.AvaTax.Services.Address"
						}
					]
				}
			},
			"example": {
				"address": {
					"line1": "2000 Main Street",
					"city": "Irvine",
					"region": "CA",
					"country": "US",
					"postalCode": "92614"
				},
				"coordinates": {
					"latitude": 33.684884,
					"longitude": -117.851321
				},
				"resolutionQuality": "Rooftop",
				"taxAuthorities": [
					{
						"avalaraId": "AGAM",
						"jurisdictionName": "CALIFORNIA",
						"jurisdictionType": "State",
						"signatureCode": "AGAM"
					}
				],
				"messages": [
					{
						"summary": "The address is not deliverable.",
						"details": "The physical location exists but there are no homes on this street. One reason might be railroad tracks or rivers running alongside this street, as they would prevent construction of homes in this location.",
						"refersTo": "address",
						"severity": "Error",
						"source": "Avalara.AvaTax.Services.Address"
					}
				]
			}
		},
		"AddressInfo": {
			"description": "Represents a base address element.",
			"type": "object",
			"properties": {
				"line1": {
					"description": "First line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "2000 Main Street"
				},
				"line2": {
					"description": "Second line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "Third line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "City component of the address",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"postalCode": {
					"description": "Postal Code / Zip Code component of the address.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string",
					"example": "92614"
				},
				"latitude": {
					"format": "double",
					"description": "Geospatial latitude measurement, in Decimal Degrees floating point format.",
					"type": "number"
				},
				"longitude": {
					"format": "double",
					"description": "Geospatial longitude measurement, in Decimal Degrees floating point format.",
					"type": "number"
				}
			},
			"example": {
				"line1": "2000 Main Street",
				"city": "Irvine",
				"region": "CA",
				"country": "US",
				"postalCode": "92614"
			}
		},
		"ValidatedAddressInfo": {
			"description": "Represents a validated address",
			"type": "object",
			"properties": {
				"addressType": {
					"description": "Address type code. One of:\r\n* Firm or company address\r\n* General Delivery address\r\n* High-rise or business complex\r\n* PO Box address\r\n* Rural route address\r\n* Street or residential address",
					"type": "string",
					"example": "S"
				},
				"line1": {
					"description": "First line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "2000 Main Street"
				},
				"line2": {
					"description": "Second line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "Third line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "City component of the address",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"postalCode": {
					"description": "Postal Code / Zip Code component of the address.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string",
					"example": "92614"
				},
				"latitude": {
					"format": "double",
					"description": "Geospatial latitude measurement, in Decimal Degrees floating point format.",
					"type": "number"
				},
				"longitude": {
					"format": "double",
					"description": "Geospatial longitude measurement, in Decimal Degrees floating point format.",
					"type": "number"
				}
			},
			"example": {
				"addressType": "S",
				"line1": "2000 Main Street",
				"city": "Irvine",
				"region": "CA",
				"country": "US",
				"postalCode": "92614"
			}
		},
		"CoordinateInfo": {
			"description": "Coordinate Info",
			"type": "object",
			"properties": {
				"latitude": {
					"format": "double",
					"description": "Latitude",
					"type": "number",
					"example": 33.684884
				},
				"longitude": {
					"format": "double",
					"description": "Longitude",
					"type": "number",
					"example": -117.851321
				}
			},
			"example": {
				"latitude": 33.684884,
				"longitude": -117.851321
			}
		},
		"TaxAuthorityInfo": {
			"description": "Information about a tax authority relevant for an address.",
			"required": ["jurisdictionName"],
			"type": "object",
			"properties": {
				"avalaraId": {
					"description": "A unique ID number assigned by Avalara to this tax authority.",
					"type": "string",
					"example": "AGAM"
				},
				"jurisdictionName": {
					"description": "The friendly jurisdiction name for this tax authority.",
					"maxLength": 128,
					"minLength": 0,
					"type": "string",
					"example": "CALIFORNIA"
				},
				"jurisdictionType": {
					"description": "The type of jurisdiction referenced by this tax authority.",
					"enum": ["Country", "State", "County", "City", "Special"],
					"type": "string",
					"example": "State",
					"x-enum-metadata": {
						"name": "JurisdictionType",
						"values": [
							{
								"name": "Country",
								"value": 0
							},
							{
								"name": "State",
								"value": 1
							},
							{
								"name": "County",
								"value": 2
							},
							{
								"name": "City",
								"value": 3
							},
							{
								"name": "Special",
								"value": 4
							}
						]
					}
				},
				"signatureCode": {
					"description": "An Avalara-assigned signature code for this tax authority.",
					"maxLength": 4,
					"minLength": 0,
					"type": "string",
					"example": "AGAM"
				}
			},
			"example": {
				"avalaraId": "AGAM",
				"jurisdictionName": "CALIFORNIA",
				"jurisdictionType": "State",
				"signatureCode": "AGAM"
			}
		},
		"AvaTaxMessage": {
			"description": "Informational or warning messages returned by AvaTax with a transaction",
			"type": "object",
			"properties": {
				"summary": {
					"description": "A brief summary of what this message tells us",
					"type": "string",
					"example": "Using JAAS"
				},
				"details": {
					"description": "Detailed information that explains what the summary provided",
					"type": "string",
					"example": "Address: 123 Main Street, Irvine, CA 92615 US, TaxRegion:2127863, Latitude: 33.657808, Longitude: -117.968489"
				},
				"refersTo": {
					"description": "Information about what object in your request this message refers to",
					"type": "string",
					"example": "Addresses[0] - TaxDate: 2017-09-21 00:00:00Z"
				},
				"severity": {
					"description": "A category that indicates how severely this message affects the results",
					"type": "string",
					"example": "Success"
				},
				"source": {
					"description": "The name of the code or service that generated this message",
					"type": "string",
					"example": "Avalara.AvaTax.Services.Tax.Steps"
				}
			},
			"example": {
				"summary": "Using JAAS",
				"details": "Address: 123 Main Street, Irvine, CA 92615 US, TaxRegion:2127863, Latitude: 33.657808, Longitude: -117.968489",
				"refersTo": "Addresses[0] - TaxDate: 2017-09-21 00:00:00Z",
				"severity": "Success",
				"source": "Avalara.AvaTax.Services.Tax.Steps"
			}
		},
		"AdvancedRuleFullDetailsModel": {
			"description": "Model for Advanced Rules when full details are requested",
			"required": ["script", "name"],
			"type": "object",
			"properties": {
				"script": {
					"description": "The code script for the rule",
					"type": "string"
				},
				"customerDataValidatorScript": {
					"description": "Script run for validating customer data",
					"type": "string"
				},
				"isApproved": {
					"description": "Has the rule been approved",
					"type": "boolean",
					"example": false
				},
				"createdBy": {
					"description": "Creator of the rule",
					"type": "string"
				},
				"createdOn": {
					"description": "When the rule was created",
					"type": "string"
				},
				"modifiedBy": {
					"description": "Last updater of the rule",
					"type": "string"
				},
				"modifiedOn": {
					"description": "When the rule was last updated",
					"type": "string"
				},
				"approvedBy": {
					"description": "Approver of the rule",
					"type": "string"
				},
				"isSystemRule": {
					"description": "Is this a system rule as opposed to customer-facing",
					"type": "boolean",
					"example": false
				},
				"isVisibleInCUP": {
					"description": "Is the rule displayed in the CUP UI",
					"type": "boolean",
					"example": false
				},
				"isTest": {
					"description": "Is this a rule created for testing",
					"type": "boolean",
					"example": true
				},
				"customerDataSchema": {
					"description": "The JSON schema for customer data if it is required for the rule",
					"type": "string"
				},
				"version": {
					"format": "int32",
					"description": "The version of the rule",
					"type": "integer",
					"example": 0
				},
				"accountsVisibleFor": {
					"description": "Account Ids the rule is visible for in CUP, when IsVisibleInCUP = false",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"ruleId": {
					"description": "Unique identifier for a rule",
					"type": "string",
					"example": "69632de24f4d44b0b7b68eaca93d0c71"
				},
				"name": {
					"description": "Rule name",
					"type": "string",
					"example": "Generic replace rule"
				},
				"description": {
					"description": "Description of the rule",
					"type": "string",
					"example": "This is just an example"
				},
				"arEntitlementRequired": {
					"description": "Advance Rules limited availability",
					"type": "boolean",
					"example": false
				},
				"executionPosition": {
					"description": "Execution position. Both, Before or After",
					"type": "string"
				}
			},
			"example": {
				"isApproved": false,
				"isSystemRule": false,
				"isVisibleInCUP": false,
				"isTest": true,
				"version": 0,
				"ruleId": "69632de24f4d44b0b7b68eaca93d0c71",
				"name": "Generic replace rule",
				"description": "This is just an example",
				"arEntitlementRequired": false
			}
		},
		"FetchResult[AdvancedRuleFullDetailsModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/AdvancedRuleFullDetailsModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"AdvancedRuleCustomerDataSchemaModel": {
			"description": "Model for retrieving customer data schema",
			"type": "object",
			"properties": {
				"ruleId": {
					"description": "Unique identifier for the rule",
					"type": "string",
					"example": "0aa09ef9c19648799b8dd6741a62ead7"
				},
				"customerDataSchema": {
					"description": "Customer data schema",
					"type": "string"
				}
			},
			"example": {
				"ruleId": "0aa09ef9c19648799b8dd6741a62ead7"
			}
		},
		"FetchResult[CompanyModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"CompanyModel": {
			"description": "A company or business entity.",
			"required": ["id", "accountId", "name", "defaultCountry"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this company.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the account this company belongs to.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"parentCompanyId": {
					"format": "int32",
					"description": "If this company is fully owned by another company, this is the unique identity of the parent company.",
					"type": "integer"
				},
				"sstPid": {
					"description": "If this company files Streamlined Sales Tax, this is the PID of this company as defined by the Streamlined Sales Tax governing board.",
					"maxLength": 9,
					"minLength": 0,
					"type": "string"
				},
				"companyCode": {
					"description": "A unique code that references this company within your account.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "DEFAULT"
				},
				"name": {
					"description": "The name of this company, as shown to customers.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Default Company"
				},
				"isDefault": {
					"description": "This flag is true if this company is the default company for this account.  Only one company may be set as the default.",
					"type": "boolean",
					"example": false
				},
				"defaultLocationId": {
					"format": "int32",
					"description": "If set, this is the unique ID number of the default location for this company.",
					"type": "integer"
				},
				"isActive": {
					"description": "This flag indicates whether tax activity can occur for this company.  Set this flag to true to permit the company to process transactions.",
					"type": "boolean",
					"example": true
				},
				"taxpayerIdNumber": {
					"description": "For United States companies, this field contains your Taxpayer Identification Number.\r\nThis is a nine digit number that is usually called an EIN for an Employer Identification Number if this company is a corporation,\r\nor SSN for a Social Security Number if this company is a person.\r\nThis value is required if the address provided is inside the US and if you subscribed to the Avalara Managed Returns or SST Certified Service Provider service. Otherwise it is optional.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string",
					"example": "123456789"
				},
				"isFein": {
					"description": "Set this field to true if the taxPayerIdNumber is a FEIN.",
					"type": "boolean"
				},
				"hasProfile": {
					"description": "Set this flag to true to give this company its own unique tax profile.\r\nIf this flag is true, this company will have its own Nexus, TaxRule, TaxCode, and Item definitions.\r\nIf this flag is false, this company will inherit all profile values from its parent.",
					"type": "boolean",
					"example": true
				},
				"isReportingEntity": {
					"description": "Set this flag to true if this company must file its own tax returns.\r\nFor users who have Returns enabled, this flag turns on monthly Worksheet generation for the company.",
					"type": "boolean",
					"example": false
				},
				"sstEffectiveDate": {
					"format": "date",
					"description": "If this company participates in Streamlined Sales Tax, this is the date when the company joined the SST program.",
					"type": "string"
				},
				"defaultCountry": {
					"description": "The two character ISO-3166 country code of the default country for this company.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"example": "US"
				},
				"baseCurrencyCode": {
					"description": "This is the three character ISO-4217 currency code of the default currency used by this company.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "USD"
				},
				"roundingLevelId": {
					"description": "Indicates whether this company prefers to round amounts at the document level or line level.",
					"enum": ["Line", "Document"],
					"type": "string",
					"example": "Line",
					"x-enum-metadata": {
						"name": "RoundingLevelId",
						"values": [
							{
								"name": "Line",
								"value": 0
							},
							{
								"name": "Document",
								"value": 1
							}
						]
					}
				},
				"warningsEnabled": {
					"description": "Set this value to true to receive warnings in API calls via SOAP.",
					"type": "boolean"
				},
				"isTest": {
					"description": "Set this flag to true to indicate that this company is a test company.\r\nIf you have Returns enabled, Test companies will not file tax returns and can be used for validation purposes.",
					"type": "boolean",
					"example": true
				},
				"taxDependencyLevelId": {
					"description": "Used to apply tax detail dependency at a jurisdiction level.",
					"enum": ["Document", "State", "TaxRegion", "Address"],
					"type": "string",
					"example": "Document",
					"x-enum-metadata": {
						"name": "TaxDependencyLevelId",
						"values": [
							{
								"name": "Document",
								"value": 0
							},
							{
								"name": "State",
								"value": 1
							},
							{
								"name": "TaxRegion",
								"value": 2
							},
							{
								"name": "Address",
								"value": 3
							}
						]
					}
				},
				"inProgress": {
					"description": "Set this value to true to indicate that you are still working to finish configuring this company.\r\nWhile this value is true, no tax reporting will occur and the company will not be usable for transactions.",
					"type": "boolean",
					"example": false
				},
				"businessIdentificationNo": {
					"description": "Business Identification No",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"contacts": {
					"description": "Optional: A list of contacts defined for this company.  To fetch this list, add the query string `?$include=Contacts` to your URL.\r\n            \r\nWhen calling `CreateCompany`, you may provide a list of objects in this element and they will be created alongside the company.\r\nThe `UpdateCompany` API does not permit updating nested objects.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ContactModel"
					}
				},
				"items": {
					"description": "Optional: A list of items defined for this company.  To fetch this list, add the query string `?$include=Items` to your URL.\r\n            \r\nWhen calling `CreateCompany`, you may provide a list of objects in this element and they will be created alongside the company.\r\nThe `UpdateCompany` API does not permit updating nested objects.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ItemModel"
					}
				},
				"locations": {
					"description": "Optional: A list of locations defined for this company.  To fetch this list, add the query string `?$include=Locations` to your URL.\r\n            \r\nWhen calling `CreateCompany`, you may provide a list of objects in this element and they will be created alongside the company.\r\nThe `UpdateCompany` API does not permit updating nested objects.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationModel"
					}
				},
				"nexus": {
					"description": "Optional: A list of nexus defined for this company.  To fetch this list, add the query string `?$include=Nexus` to your URL.\r\n            \r\nWhen calling `CreateCompany`, you may provide a list of objects in this element and they will be created alongside the company.\r\nThe `UpdateCompany` API does not permit updating nested objects.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusModel"
					}
				},
				"settings": {
					"description": "Optional: A list of settings defined for this company.  To fetch this list, add the query string `?$include=Settings` to your URL.\r\n            \r\nWhen calling `CreateCompany`, you may provide a list of objects in this element and they will be created alongside the company.\r\nThe `UpdateCompany` API does not permit updating nested objects.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/SettingModel"
					}
				},
				"taxCodes": {
					"description": "Optional: A list of tax codes defined for this company.  To fetch this list, add the query string `?$include=TaxCodes` to your URL.\r\n            \r\nWhen calling `CreateCompany`, you may provide a list of objects in this element and they will be created alongside the company.\r\nThe `UpdateCompany` API does not permit updating nested objects.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxCodeModel"
					}
				},
				"taxRules": {
					"description": "Optional: A list of tax rules defined for this company.  To fetch this list, add the query string `?$include=TaxRules` to your URL.\r\n            \r\nWhen calling `CreateCompany`, you may provide a list of objects in this element and they will be created alongside the company.\r\nThe `UpdateCompany` API does not permit updating nested objects.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxRuleModel"
					}
				},
				"upcs": {
					"description": "Optional: A list of UPCs defined for this company.  To fetch this list, add the query string `?$include=UPCs` to your URL.\r\n            \r\nWhen calling `CreateCompany`, you may provide a list of objects in this element and they will be created alongside the company.\r\nThe `UpdateCompany` API does not permit updating nested objects.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/UPCModel"
					}
				},
				"nonReportingChildCompanies": {
					"description": "Optional: A list of non reporting child companies associated with this company.  To fetch this list, add the query string `?$include=NonReportingChildren` to your URL.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyModel"
					},
					"readOnly": true
				},
				"exemptCerts": {
					"description": "DEPRECATED - Date: 9/15/2017, Version: 17.10, Message: Please use the `ListCertificates` API.\r\n",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/EcmsModel"
					},
					"readOnly": true,
					"x-property-deprecation-info": {
						"date": "9/15/2017",
						"version": "17.10",
						"message": "Please use the `ListCertificates` API."
					}
				},
				"mossId": {
					"description": "The unique identifier of the mini-one-stop-shop used for Value Added Tax (VAT) processing.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"mossCountry": {
					"description": "The country code of the mini-one-stop-shop used for Value Added Tax (VAT) processing.",
					"maxLength": 2,
					"minLength": 0,
					"type": "string"
				},
				"parameters": {
					"description": "The parameters of a company",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyParameterDetailModel"
					},
					"readOnly": true
				}
			},
			"example": {
				"id": 12345,
				"accountId": 123456789,
				"companyCode": "DEFAULT",
				"name": "Default Company",
				"isDefault": false,
				"isActive": true,
				"taxpayerIdNumber": "123456789",
				"isFein": false,
				"hasProfile": true,
				"isReportingEntity": false,
				"defaultCountry": "US",
				"baseCurrencyCode": "USD",
				"roundingLevelId": "Line",
				"isTest": true,
				"taxDependencyLevelId": "Document",
				"inProgress": false
			}
		},
		"ContactModel": {
			"description": "A contact person for a company.",
			"required": ["contactCode"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this contact.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company to which this contact belongs.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"contactCode": {
					"description": "A unique code for this contact.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "TestContact8be1584551864c"
				},
				"firstName": {
					"description": "The first or given name of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob"
				},
				"middleName": {
					"description": "The middle name of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "The last or family name of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "McExample"
				},
				"title": {
					"description": "Professional title of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Owner"
				},
				"line1": {
					"description": "The first line of the postal mailing address of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "2000 Main Street"
				},
				"line2": {
					"description": "The second line of the postal mailing address of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "The third line of the postal mailing address of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "The city of the postal mailing address of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"postalCode": {
					"description": "The postal code or zip code of the postal mailing address of this contact.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "92614"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"email": {
					"description": "The email address of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "bob@example.org"
				},
				"phone": {
					"description": "The main phone number for this contact.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "714 555-1212"
				},
				"mobile": {
					"description": "The mobile phone number for this contact.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"fax": {
					"description": "The facsimile phone number for this contact.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"contactCode": "TestContact8be1584551864c",
				"firstName": "Bob",
				"lastName": "McExample",
				"title": "Owner",
				"line1": "2000 Main Street",
				"city": "Irvine",
				"region": "CA",
				"postalCode": "92614",
				"country": "US",
				"email": "bob@example.org",
				"phone": "714 555-1212"
			}
		},
		"ItemModel": {
			"description": "Represents an item in your company's product catalog.",
			"required": ["id", "itemCode", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this item.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that owns this item.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"itemCode": {
					"description": "A unique code representing this item.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "CERMUG"
				},
				"taxCodeId": {
					"format": "int32",
					"description": "DEPRECATED - Date: 11/13/2018, Version: 18.12, Message: For identifying an `Item` with `Avalara TaxCode`, please call the [CreateItemClassification API] with your ItemCode and the Avalara TaxCode.\r\nThe unique ID number of the tax code that is applied when selling this item.\r\nWhen creating or updating an item, you can either specify the Tax Code ID number or the Tax Code string; you do not need to specify both values.",
					"type": "integer",
					"x-property-deprecation-info": {
						"date": "11/13/2018",
						"version": "18.12",
						"message": "For identifying an `Item` with `Avalara TaxCode`, please call the [CreateItemClassification API] with your ItemCode and the Avalara TaxCode."
					}
				},
				"taxCode": {
					"description": "DEPRECATED - Date: 11/13/2018, Version: 18.12, Message: For identifying an `Item` with `Avalara TaxCode`, please call the [CreateItemClassification API] with your ItemCode and the Avalara TaxCode.\r\nThe unique code string of the Tax Code that is applied when selling this item.\r\nWhen creating or updating an item, you can either specify the Tax Code ID number or the Tax Code string; you do not need to specify both values.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "P0000000",
					"x-property-deprecation-info": {
						"date": "11/13/2018",
						"version": "18.12",
						"message": "For identifying an `Item` with `Avalara TaxCode`, please call the [CreateItemClassification API] with your ItemCode and the Avalara TaxCode."
					}
				},
				"description": {
					"description": "A friendly description of this item in your product catalog.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "Ceramic Mug"
				},
				"itemGroup": {
					"description": "A way to group similar items.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Mugs"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"classifications": {
					"description": "List of classifications that belong to this item.\r\nA single classification consits of a productCode and a systemCode for a particular item.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClassificationModel"
					},
					"example": [
						{
							"productCode": "9011900000",
							"systemCode": "TARIC"
						}
					]
				},
				"parameters": {
					"description": "List of item parameters.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ItemParameterModel"
					}
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"itemCode": "CERMUG",
				"taxCode": "P0000000",
				"description": "Ceramic Mug",
				"itemGroup": "Mugs",
				"classifications": [
					{
						"productCode": "9011900000",
						"systemCode": "TARIC"
					}
				]
			}
		},
		"LocationModel": {
			"description": "A location where this company does business.\r\nSome jurisdictions may require you to list all locations where your company does business.",
			"required": ["id", "locationCode", "addressTypeId", "addressCategoryId", "line1", "postalCode", "country"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this location.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that operates at this location.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"locationCode": {
					"description": "A code that identifies this location.  Must be unique within your company.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "DEFAULT"
				},
				"description": {
					"description": "A friendly name for this location.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "Bob's Artisan Pottery"
				},
				"addressTypeId": {
					"description": "Indicates whether this location is a physical place of business or a temporary salesperson location.",
					"enum": ["Location", "Salesperson", "Marketplace"],
					"type": "string",
					"example": "Location",
					"x-enum-metadata": {
						"name": "AddressTypeId",
						"values": [
							{
								"name": "Location",
								"value": 1
							},
							{
								"name": "Salesperson",
								"value": 2
							},
							{
								"name": "Marketplace",
								"value": 3
							}
						]
					}
				},
				"addressCategoryId": {
					"description": "Indicates the type of place of business represented by this location.",
					"enum": [
						"Storefront",
						"MainOffice",
						"Warehouse",
						"Salesperson",
						"Other",
						"SellerRemitsTax",
						"MarketplaceRemitsTax",
						"NonPhysical"
					],
					"type": "string",
					"example": "MainOffice",
					"x-enum-metadata": {
						"name": "AddressCategoryId",
						"values": [
							{
								"name": "Storefront",
								"value": 1
							},
							{
								"name": "MainOffice",
								"value": 2
							},
							{
								"name": "Warehouse",
								"value": 3
							},
							{
								"name": "Salesperson",
								"value": 4
							},
							{
								"name": "Other",
								"value": 5
							},
							{
								"name": "SellerRemitsTax",
								"value": 6
							},
							{
								"name": "MarketplaceRemitsTax",
								"value": 7
							},
							{
								"name": "NonPhysical",
								"value": 8
							}
						]
					}
				},
				"line1": {
					"description": "The first line of the physical address of this location.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "2000 Main Street"
				},
				"line2": {
					"description": "The second line of the physical address of this location.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "The third line of the physical address of this location.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "The city of the physical address of this location.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"county": {
					"description": "The county name of the physical address of this location.  Not required.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Orange"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country of the physical address of this location.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"postalCode": {
					"description": "The postal code or zip code of the physical address of this location.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "92614"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country of the physical address of this location.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"isDefault": {
					"description": "Set this flag to true to indicate that this is the default location for this company.",
					"type": "boolean",
					"example": true
				},
				"isRegistered": {
					"description": "Set this flag to true to indicate that this location has been registered with a tax authority.",
					"type": "boolean",
					"example": true
				},
				"dbaName": {
					"description": "If this location has a different business name from its legal entity name, specify the \"Doing Business As\" name for this location.",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "Bob's Artisan Pottery"
				},
				"outletName": {
					"description": "A friendly name for this location.",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "Main Office"
				},
				"effectiveDate": {
					"format": "date",
					"description": "The date when this location was opened for business, or null if not known.",
					"type": "string"
				},
				"endDate": {
					"format": "date",
					"description": "If this place of business has closed, the date when this location closed business.",
					"type": "string"
				},
				"lastTransactionDate": {
					"format": "date-time",
					"description": "The most recent date when a transaction was processed for this location.  Set by AvaTax.",
					"type": "string",
					"readOnly": true
				},
				"registeredDate": {
					"format": "date-time",
					"description": "The date when this location was registered with a tax authority.  Not required.",
					"type": "string",
					"example": "2015-01-01T00:00:00"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"settings": {
					"description": "Extra information required by certain jurisdictions for filing.\r\nFor a list of settings recognized by Avalara, query the endpoint \"/api/v2/definitions/locationquestions\".\r\nTo determine the list of settings required for this location, query the endpoint \"/api/v2/companies/(id)/locations/(id)/validate\".",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationSettingModel"
					},
					"example": [
						{
							"questionId": 17,
							"value": "abcdefghij"
						}
					]
				},
				"parameters": {
					"description": "List of location parameters.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationParameterModel"
					},
					"readOnly": true
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"locationCode": "DEFAULT",
				"description": "Bob's Artisan Pottery",
				"addressTypeId": "Location",
				"addressCategoryId": "MainOffice",
				"line1": "2000 Main Street",
				"city": "Irvine",
				"county": "Orange",
				"region": "CA",
				"postalCode": "92614",
				"country": "US",
				"isDefault": true,
				"isRegistered": true,
				"dbaName": "Bob's Artisan Pottery",
				"outletName": "Main Office",
				"registeredDate": "2015-01-01T00:00:00",
				"settings": [
					{
						"questionId": 17,
						"value": "abcdefghij"
					}
				]
			}
		},
		"NexusModel": {
			"description": "Represents a declaration of nexus within a particular taxing jurisdiction.\r\n            \r\nTo create a nexus declaration for your company, you must first call the Definitions API `ListNexus` to obtain a\r\nlist of Avalara-defined nexus.  Once you have determined which nexus you wish to declare, you should customize\r\nonly the user-selectable fields in this object.\r\n            \r\nThe user selectable fields for the nexus object are `companyId`, `effectiveDate`, `endDate`, `localNexusTypeId`,\r\n`taxId`, `nexusTypeId`, `hasPermanentEstablishment`, and `isSellerImporterOfRecord`.\r\n            \r\nWhen calling `CreateNexus` or `UpdateNexus`, all values in your nexus object except for the user-selectable fields\r\nmust match an Avalara-defined system nexus object.  You can retrieve a list of Avalara-defined system nexus objects\r\nby calling `ListNexus`.  If any data does not match, AvaTax may not recognize your nexus declaration.",
			"required": ["country", "region", "jurisCode", "jurisName"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this declaration of nexus.\r\n            \r\nThis field is defined automatically when you declare nexus.  You do not need to provide a value for this field.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that declared nexus.\r\n            \r\nThis field is user-selectable and should be provided when creating or updating a nexus object.",
					"type": "integer",
					"example": 0
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country in which this company declared nexus.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"type": "string",
					"example": "CA"
				},
				"jurisTypeId": {
					"description": "DEPRECATED - Date: 12/20/2017, Version: 18.1, Message: Please use jurisdictionTypeId instead.\r\nThe jurisdiction type of the jurisdiction in which this company declared nexus.",
					"enum": ["STA", "CTY", "CIT", "STJ", "CNT"],
					"type": "string",
					"example": "STA",
					"x-property-deprecation-info": {
						"date": "12/20/2017",
						"version": "18.1",
						"message": "Please use jurisdictionTypeId instead."
					},
					"x-enum-metadata": {
						"name": "JurisTypeId",
						"values": [
							{
								"name": "STA",
								"value": 1
							},
							{
								"name": "CTY",
								"value": 2
							},
							{
								"name": "CIT",
								"value": 3
							},
							{
								"name": "STJ",
								"value": 4
							},
							{
								"name": "CNT",
								"value": 5
							}
						]
					}
				},
				"jurisdictionTypeId": {
					"description": "The type of the jurisdiction in which this company declared nexus.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"enum": ["Country", "State", "County", "City", "Special"],
					"type": "string",
					"example": "State",
					"x-enum-metadata": {
						"name": "JurisdictionType",
						"values": [
							{
								"name": "Country",
								"value": 0
							},
							{
								"name": "State",
								"value": 1
							},
							{
								"name": "County",
								"value": 2
							},
							{
								"name": "City",
								"value": 3
							},
							{
								"name": "Special",
								"value": 4
							}
						]
					}
				},
				"jurisCode": {
					"description": "The code identifying the jurisdiction in which this company declared nexus.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": "06"
				},
				"jurisName": {
					"description": "The common name of the jurisdiction in which this company declared nexus.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"maxLength": 200,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": "CALIFORNIA"
				},
				"effectiveDate": {
					"format": "date",
					"description": "The date when this nexus began.  If not known, set to null.\r\n            \r\nThis field is user-selectable and should be provided when creating or updating a nexus object.",
					"type": "string",
					"example": "2017-04-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "If this nexus will end or has ended on a specific date, set this to the date when this nexus ends.\r\n            \r\nThis field is user-selectable and should be provided when creating or updating a nexus object.",
					"type": "string"
				},
				"shortName": {
					"description": "The short name of the jurisdiction.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"maxLength": 15,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": "CALIFORNIA"
				},
				"signatureCode": {
					"description": "The signature code of the boundary region as defined by Avalara.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"maxLength": 4,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": ""
				},
				"stateAssignedNo": {
					"description": "The state assigned number of this jurisdiction.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": ""
				},
				"nexusTypeId": {
					"description": "The type of nexus that this company is declaring.\r\n            \r\nIf you are voluntarily declaring nexus in a jurisdiction, you should select `SalesOrSellersUseTax` for your\r\nnexus type option.  This option allows you to calculate tax correctly whether you are selling in-state or\r\nshipping from an out-of-state location.\r\n            \r\nIf you are legally obligated to declare nexus due to physical presence or other sufficient nexus, you\r\nshould select `SalesTax`.  This indicates that, as a legal requirement, your company must always collect\r\nand remit full sales tax in this jurisdiction.\r\n            \r\nIf you are participating in the Streamlined Sales Tax program, your SST administrator will select nexus\r\nsettings for you in all SST jurisdictions.  Do not select any SST options by yourself.\r\n            \r\nThis field is user-selectable and should be provided when creating or updating a nexus object.",
					"enum": ["None", "SalesOrSellersUseTax", "SalesTax", "SSTVolunteer", "SSTNonVolunteer"],
					"type": "string",
					"example": "SalesOrSellersUseTax",
					"x-enum-metadata": {
						"name": "NexusTypeId",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "SalesOrSellersUseTax",
								"value": 1
							},
							{
								"name": "SalesTax",
								"value": 2
							},
							{
								"name": "SSTVolunteer",
								"value": 3
							},
							{
								"name": "SSTNonVolunteer",
								"value": 4
							}
						]
					}
				},
				"sourcing": {
					"description": "Indicates whether this nexus is defined as origin or destination nexus.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"enum": ["Origin", "Destination", "Mixed"],
					"type": "string",
					"example": "Destination",
					"x-enum-metadata": {
						"name": "Sourcing",
						"values": [
							{
								"name": "Mixed",
								"value": 42
							},
							{
								"name": "Destination",
								"value": 68
							},
							{
								"name": "Origin",
								"value": 79
							}
						]
					}
				},
				"hasLocalNexus": {
					"description": "True if you are also declaring local nexus within this jurisdiction.\r\nMany U.S. states have options for declaring nexus in local jurisdictions as well as within the state.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"type": "boolean",
					"example": false
				},
				"localNexusTypeId": {
					"description": "If you are declaring local nexus within this jurisdiction, this indicates whether you are declaring only\r\na specified list of local jurisdictions, all state-administered local jurisdictions, or all local jurisdictions.\r\n            \r\nThis field is user-selectable and should be provided when creating or updating a nexus object.",
					"enum": ["Selected", "StateAdministered", "All"],
					"type": "string",
					"x-enum-metadata": {
						"name": "LocalNexusTypeId",
						"values": [
							{
								"name": "Selected",
								"value": 0
							},
							{
								"name": "StateAdministered",
								"value": 1
							},
							{
								"name": "All",
								"value": 2
							}
						]
					}
				},
				"hasPermanentEstablishment": {
					"description": "Set this value to true if your company has a permanent establishment within this jurisdiction.\r\n            \r\nThis field is user-selectable and should be provided when creating or updating a nexus object.",
					"type": "boolean",
					"example": true
				},
				"taxId": {
					"description": "Optional - the tax identification number under which you declared nexus.\r\n            \r\nThis field is user-selectable and should be provided when creating or updating a nexus object.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"streamlinedSalesTax": {
					"description": "DEPRECATED - Date: 4/29/2017, Version: 19.4, Message: Please use isSSTActive instead.\r\nFor the United States, this flag indicates whether this particular nexus falls within a U.S. State that participates\r\nin the Streamlined Sales Tax program.  For countries other than the US, this flag is null.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"type": "boolean",
					"readOnly": true,
					"example": false,
					"x-property-deprecation-info": {
						"date": "4/29/2017",
						"version": "19.4",
						"message": "Please use isSSTActive instead."
					}
				},
				"isSSTActive": {
					"description": "For the United States, this flag indicates whether this particular nexus falls within a U.S. State that participates\r\nin the Streamlined Sales Tax program and if the account associated with the Nexus has an active AvaTaxCsp subscription.\r\nFor countries other than the US, this flag is null.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"type": "boolean",
					"readOnly": true,
					"example": false
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.\r\n            \r\nThis field is defined automatically when you declare nexus.  You do not need to provide a value for this field.",
					"type": "string",
					"readOnly": true,
					"example": "2017-06-30T05:14:06.003"
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.\r\n            \r\nThis field is defined automatically when you declare nexus.  You do not need to provide a value for this field.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.\r\n            \r\nThis field is defined automatically when you declare nexus.  You do not need to provide a value for this field.",
					"type": "string",
					"readOnly": true,
					"example": "2018-05-23T20:12:37.07"
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.\r\n            \r\nThis field is defined automatically when you declare nexus.  You do not need to provide a value for this field.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"nexusTaxTypeGroup": {
					"description": "The type of nexus that this company is declaring.Replaces NexusTypeId.\r\nUse [ListNexusTaxTypeGroups](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListNexusTaxTypeGroups/) API for a list of nexus tax type groups.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"type": "string",
					"example": "SalesAndUse"
				},
				"taxAuthorityId": {
					"format": "int64",
					"description": "A unique ID number of the tax authority that is associated with this nexus.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined nexus object found by calling `ListNexus`.",
					"type": "integer"
				},
				"isSellerImporterOfRecord": {
					"description": "For nexus declarations at the country level, specifies whether this company is considered the importer of record in this nexus region.\r\n            \r\nSome taxes only apply if the seller is the importer of record for a product.  In cases where companies are working together to\r\nship products, there may be mutual agreement as to which company is the entity designated as importer of record.  The importer\r\nof record will then be the company designated to pay taxes marked as being obligated to the importer of record.\r\n            \r\nSet this value to `true` to consider your company as the importer of record and collect these taxes.  Leave this value as false\r\nor null and taxes will be calculated as if your company is not the importer of record.\r\n            \r\nThis value may also be set during each transaction API call.  See `CreateTransaction()` for more information.\r\n            \r\nThis field is user-selectable and should be provided when creating or updating a nexus object.",
					"type": "boolean",
					"example": false
				},
				"taxName": {
					"description": "A description of corresponding tax type applied to the nexus.\r\n            \r\nWhen a custom nexus is created, it'll have to be matched to a system nexus to be validated successfully. The matched system nexus has a\r\nfield to describe the tax type applied to it, that field will be copied over to the nexus that is being created.\r\n            \r\nThis field is defined by Avalara. Its main purpose is to give a simple description of the tax type associated with the nexus so\r\nusers have a better understanding of the nexus when it is displayed.",
					"type": "string",
					"readOnly": true
				},
				"parameters": {
					"description": "List of nexus parameters.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusParameterDetailModel"
					},
					"readOnly": true
				}
			},
			"example": {
				"id": 0,
				"companyId": 0,
				"country": "US",
				"region": "CA",
				"jurisTypeId": "STA",
				"jurisdictionTypeId": "State",
				"jurisCode": "06",
				"jurisName": "CALIFORNIA",
				"effectiveDate": "2017-04-01",
				"shortName": "CALIFORNIA",
				"signatureCode": "",
				"stateAssignedNo": "",
				"nexusTypeId": "SalesOrSellersUseTax",
				"sourcing": "Destination",
				"hasLocalNexus": false,
				"hasPermanentEstablishment": true,
				"streamlinedSalesTax": false,
				"isSSTActive": false,
				"createdDate": "2017-06-30T05:14:06.003",
				"createdUserId": 0,
				"modifiedDate": "2018-05-23T20:12:37.07",
				"modifiedUserId": 0,
				"nexusTaxTypeGroup": "SalesAndUse",
				"isSellerImporterOfRecord": false
			}
		},
		"SettingModel": {
			"description": "This object is used to keep track of custom information about a company.\r\n            \r\nThe company settings system is a metadata system that you can use to store extra information\r\nabout a company.  Your integration or connector could use this data storage to keep track of\r\npreference information, reminders, or any other storage that would need to persist even if\r\nthe customer uninstalls your application.\r\n            \r\nA setting can refer to any type of data you need to remember about this company object.\r\nWhen creating this object, you may define your own `set`, `name`, and `value` parameters.\r\nTo define your own values, please choose a `set` name that begins with `X-` to indicate an extension.",
			"required": ["id", "set", "name"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this setting.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company this setting refers to.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"set": {
					"description": "A user-defined \"set\" containing this setting.\r\n            \r\nAvalara defines some sets that cannot be changed.  To create your own set, choose a set\r\nname that begins with `X-` to indicate that this is an extension value.\r\n            \r\nWe recommend that you choose a set name that clearly identifies your application, and then\r\nstore data within name/value pairs within that set.  For example, if you were creating an\r\napplication called MyApp, you might choose to create a set named `X-MyCompany-MyApp`.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "ItemsToRemember"
				},
				"name": {
					"description": "A user-defined \"name\" for this name-value pair.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Texas"
				},
				"value": {
					"description": "The value of this name-value pair.",
					"maxLength": 200,
					"minLength": 0,
					"type": "string",
					"example": "Alamo"
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"set": "ItemsToRemember",
				"name": "Texas",
				"value": "Alamo"
			}
		},
		"TaxCodeModel": {
			"description": "Represents a tax code that can be applied to items on a transaction.\r\nA tax code can have specific rules for specific jurisdictions that change the tax calculation behavior.",
			"required": ["taxCode", "taxCodeTypeId"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax code.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that owns this tax code.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"taxCode": {
					"description": "A code string that identifies this tax code.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "PS081282"
				},
				"taxCodeTypeId": {
					"description": "The type of this tax code.",
					"maxLength": 2,
					"minLength": 0,
					"type": "string",
					"example": "P"
				},
				"description": {
					"description": "A friendly description of this tax code.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "Yarn"
				},
				"parentTaxCode": {
					"description": "If this tax code is a subset of a different tax code, this identifies the parent code.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "PS080100"
				},
				"isPhysical": {
					"description": "True if this tax code type refers to a physical object.  Read only field.",
					"type": "boolean",
					"readOnly": true,
					"example": true
				},
				"goodsServiceCode": {
					"format": "int64",
					"description": "The Avalara Goods and Service Code represented by this tax code.",
					"type": "integer",
					"example": 0
				},
				"entityUseCode": {
					"description": "The Avalara Entity Use Code represented by this tax code.",
					"maxLength": 40,
					"minLength": 0,
					"type": "string",
					"example": ""
				},
				"isActive": {
					"description": "True if this tax code is active and can be used in transactions.",
					"type": "boolean",
					"example": true
				},
				"isSSTCertified": {
					"description": "True if this tax code has been certified by the Streamlined Sales Tax governing board.\r\nBy default, you should leave this value empty.",
					"type": "boolean",
					"example": false
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"taxCode": "PS081282",
				"taxCodeTypeId": "P",
				"description": "Yarn",
				"parentTaxCode": "PS080100",
				"isPhysical": true,
				"goodsServiceCode": 0,
				"entityUseCode": "",
				"isActive": true,
				"isSSTCertified": false
			}
		},
		"TaxRuleModel": {
			"description": "Represents a tax rule that changes the behavior of Avalara's tax engine for certain products and/or entity use codes\r\nin certain jurisdictions.\r\n            \r\nAvalara supports a few different types of tax rules.  For information about tax rule types, see\r\n[TaxRuleTypeId](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/TaxRuleTypeId/)\r\n            \r\nBecause different types of tax rules have different behavior, some fields may change their behavior based on\r\nthe type of tax rule selected.  Please read the documentation for each field carefully and ensure that\r\nthe value you send is appropriate for the type of tax rule.",
			"required": ["id", "jurisCode", "taxRuleTypeId", "country"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax rule.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that owns this tax rule.",
					"type": "integer",
					"example": 12345
				},
				"taxCodeId": {
					"format": "int32",
					"description": "For rules that apply to a specific tax code only, this specifies which tax code is affected by this rule.\r\n            \r\nYou can choose to specify a tax code either by passing its unique ID number in the `taxCodeId` field or\r\nby passing its alphanumeric code in the `taxCode` field.  To search for the appropriate tax code for your\r\ncustom rule, use the `ListTaxCodes` API.\r\n            \r\nThe `RateOverrideRule`, `BaseRule`, and `ExemptEntityRule` rule types can be applied to all tax codes.  To\r\nmake a rule that applies to all tax codes, leave both fields blank.\r\n            \r\nThe `ProductTaxabilityRule` rule must be associated with a tax code.  If you attempt to create a product taxability rule\r\nwithout a tax code, you will get an error message.",
					"type": "integer"
				},
				"taxCode": {
					"description": "For rules that apply to a specific tax code only, this specifies which tax code is affected by this rule.\r\n            \r\nYou can choose to specify a tax code either by passing its unique ID number in the `taxCodeId` field or\r\nby passing its alphanumeric code in the `taxCode` field.  To search for the appropriate tax code for your\r\ncustom rule, use the `ListTaxCodes` API.\r\n            \r\nThe `RateOverrideRule`, `BaseRule`, and `ExemptEntityRule` rule types can be applied to all tax codes.  To\r\nmake a rule that applies to all tax codes, leave both fields blank.\r\n            \r\nThe `ProductTaxabilityRule` rule must be associated with a tax code.  If you attempt to create a product taxability rule\r\nwithout a tax code, you will get an error message.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "FR020800"
				},
				"stateFIPS": {
					"description": "For U.S. tax rules, this is the state's Federal Information Processing Standard (FIPS) code.\r\n            \r\nThis field is required for rules that apply to specific jurisdictions in the United States.  It is not required\r\nif you set the `isAllJuris` flag to true.",
					"maxLength": 2,
					"minLength": 0,
					"type": "string",
					"example": "04"
				},
				"jurisName": {
					"description": "The name of the jurisdiction to which this tax rule applies.\r\n            \r\nCustom tax rules can apply to a specific jurisdiction or to all jurisdictions.  To select a jurisdiction, use the\r\n[ListJurisdictions API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictions/)\r\nor the [ListJurisdictionsByAddress API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictionsByAddress/).\r\nTo set a rule that applies to all jurisdictions of a specific type, see `isAllJuris`.\r\n            \r\nOnce you have determined which jurisdiction you wish to assign to the tax rule, you should fill in the `jurisName`, `jurisCode`, and\r\n`jurisdictionTypeId` fields using the information you retrieved from the API above.",
					"maxLength": 200,
					"minLength": 0,
					"type": "string",
					"example": "MARICOPA"
				},
				"jurisCode": {
					"description": "The code of the jurisdiction to which this tax rule applies.\r\n            \r\nCustom tax rules can apply to a specific jurisdiction or to all jurisdictions.  To select a jurisdiction, use the\r\n[ListJurisdictions API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictions/)\r\nor the [ListJurisdictionsByAddress API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictionsByAddress/).\r\n            \r\nOnce you have determined which jurisdiction you wish to assign to the tax rule, you should fill in the `jurisName`, `jurisCode`, and\r\n`jurisdictionTypeId` fields using the information you retrieved from the API above.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "013"
				},
				"jurisTypeId": {
					"description": "DEPRECATED - Date: 12/20/2017, Version: 18.1, Message: Please use `jurisdictionTypeId` instead.\r\n",
					"enum": ["STA", "CTY", "CIT", "STJ", "CNT"],
					"type": "string",
					"example": 0,
					"x-property-deprecation-info": {
						"date": "12/20/2017",
						"version": "18.1",
						"message": "Please use `jurisdictionTypeId` instead."
					},
					"x-enum-metadata": {
						"name": "JurisTypeId",
						"values": [
							{
								"name": "STA",
								"value": 1
							},
							{
								"name": "CTY",
								"value": 2
							},
							{
								"name": "CIT",
								"value": 3
							},
							{
								"name": "STJ",
								"value": 4
							},
							{
								"name": "CNT",
								"value": 5
							}
						]
					}
				},
				"jurisdictionTypeId": {
					"description": "The type of the jurisdiction to which this tax rule applies.\r\n            \r\nCustom tax rules can apply to a specific jurisdiction or to all jurisdictions.  To select a jurisdiction, use the\r\n[ListJurisdictions API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictions/)\r\nor the [ListJurisdictionsByAddress API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictionsByAddress/).\r\n            \r\nOnce you have determined which jurisdiction you wish to assign to the tax rule, you should fill in the `jurisName`, `jurisCode`, and\r\n`jurisdictionTypeId` fields using the information you retrieved from the API above.\r\n            \r\nTo make a custom tax rule for US or Canada that applies to all jurisdictions of a specific type, see the `isAllJuris`\r\nfield for more information.",
					"enum": ["Country", "State", "County", "City", "Special"],
					"type": "string",
					"example": "County",
					"x-enum-metadata": {
						"name": "JurisdictionType",
						"values": [
							{
								"name": "Country",
								"value": 0
							},
							{
								"name": "State",
								"value": 1
							},
							{
								"name": "County",
								"value": 2
							},
							{
								"name": "City",
								"value": 3
							},
							{
								"name": "Special",
								"value": 4
							}
						]
					}
				},
				"customerUsageType": {
					"description": "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please use `entityUseCode` instead.\r\n",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"x-property-deprecation-info": {
						"date": "10/16/2017",
						"version": "17.11",
						"message": "Please use `entityUseCode` instead."
					}
				},
				"entityUseCode": {
					"description": "The entity use code to which this rule applies.\r\n            \r\nYou can create custom `entityUseCode` values with specific behavior using this API, or you can change\r\nthe behavior of Avalara's system-defined entity use codes.\r\n            \r\nFor a full list of Avalara-defined entity use codes, see the [ListEntityUseCodes API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListEntityUseCodes/).",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"taxTypeId": {
					"description": "Some tax type groups contain multiple different types of tax.  To create a rule that affects only one\r\ntype of tax within a tax type group, set this value to the code matching the specific tax type within\r\nthat group.  The custom tax rule will then only apply to taxes calculated for that specific type.\r\n            \r\nFor rules that affect all tax types, use the value `A` to match `All` tax types within that group.",
					"enum": [
						"All",
						"BothSalesAndUseTax",
						"ConsumerUseTax",
						"SalesTax",
						"UseTax",
						"VATOutputTax",
						"VATInputTax",
						"VATNonrecoverableInputTax",
						"Fee",
						"Rental",
						"ConsumerUseAndSalesTax",
						"ConsumersUseAndSellersUseTax",
						"E",
						"Lodging",
						"Bottle",
						"RentToOwn",
						"EWaste",
						"Batteries",
						"LightBulbs"
					],
					"type": "string",
					"example": "BothSalesAndUseTax",
					"x-enum-metadata": {
						"name": "MatchingTaxType",
						"values": [
							{
								"name": "E",
								"value": 5
							},
							{
								"name": "Lodging",
								"value": 6
							},
							{
								"name": "Bottle",
								"value": 7
							},
							{
								"name": "RentToOwn",
								"value": 8
							},
							{
								"name": "All",
								"value": 65
							},
							{
								"name": "BothSalesAndUseTax",
								"value": 66
							},
							{
								"name": "ConsumerUseTax",
								"value": 67
							},
							{
								"name": "ConsumersUseAndSellersUseTax",
								"value": 68
							},
							{
								"name": "ConsumerUseAndSalesTax",
								"value": 69
							},
							{
								"name": "Fee",
								"value": 70
							},
							{
								"name": "VATInputTax",
								"value": 73
							},
							{
								"name": "LightBulbs",
								"value": 76
							},
							{
								"name": "VATNonrecoverableInputTax",
								"value": 78
							},
							{
								"name": "VATOutputTax",
								"value": 79
							},
							{
								"name": "Rental",
								"value": 82
							},
							{
								"name": "SalesTax",
								"value": 83
							},
							{
								"name": "UseTax",
								"value": 85
							},
							{
								"name": "EWaste",
								"value": 87
							},
							{
								"name": "Batteries",
								"value": 90
							}
						]
					}
				},
				"rateTypeId": {
					"description": "DEPRECATED - Date: 8/27/2018, Version: 18.9, Message: Please use `rateTypeCode`, `taxTypeGroup` and `subTaxType` instead.\r\n",
					"enum": [
						"Food",
						"General",
						"IncreasedStandard",
						"LinenRental",
						"Medical",
						"Parking",
						"ReducedA",
						"ReducedB",
						"ReducedR",
						"Standard",
						"SuperReduced",
						"Zero",
						"Services",
						"Leasing"
					],
					"type": "string",
					"x-property-deprecation-info": {
						"date": "8/27/2018",
						"version": "18.9",
						"message": "Please use `rateTypeCode`, `taxTypeGroup` and `subTaxType` instead."
					},
					"x-enum-metadata": {
						"name": "RateType",
						"values": [
							{
								"name": "ReducedA",
								"value": 65
							},
							{
								"name": "ReducedB",
								"value": 66
							},
							{
								"name": "Food",
								"value": 70
							},
							{
								"name": "General",
								"value": 71
							},
							{
								"name": "IncreasedStandard",
								"value": 73
							},
							{
								"name": "LinenRental",
								"value": 76
							},
							{
								"name": "Medical",
								"value": 77
							},
							{
								"name": "Parking",
								"value": 80
							},
							{
								"name": "SuperReduced",
								"value": 81
							},
							{
								"name": "ReducedR",
								"value": 82
							},
							{
								"name": "Standard",
								"value": 83
							},
							{
								"name": "Leasing",
								"value": 85
							},
							{
								"name": "Services",
								"value": 88
							},
							{
								"name": "Zero",
								"value": 90
							}
						]
					}
				},
				"rateTypeCode": {
					"description": "Indicates the code of the rate type that applies to this rule.  Use [ListRateTypesByCountry](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListRateTypesByCountry/) API for a full list of rate type codes.\r\n            \r\nIf you specify a value in the rateTypeCode field, this rule will cause tax lines that are affected by the rule\r\nto change to a different rate type code.",
					"type": "string"
				},
				"taxRuleTypeId": {
					"description": "This type value determines the behavior of the tax rule.\r\n            \r\nYou can specify that this rule controls the product's taxability or exempt / nontaxable status, the product's rate\r\n(for example, if you have been granted an official ruling for your product's rate that differs from the official rate),\r\nor other types of behavior.",
					"enum": ["RateRule", "RateOverrideRule", "BaseRule", "ExemptEntityRule", "ProductTaxabilityRule", "NexusRule"],
					"type": "string",
					"example": "ProductTaxabilityRule",
					"x-enum-metadata": {
						"name": "TaxRuleTypeId",
						"values": [
							{
								"name": "RateRule",
								"value": 0
							},
							{
								"name": "RateOverrideRule",
								"value": 1
							},
							{
								"name": "BaseRule",
								"value": 2
							},
							{
								"name": "ExemptEntityRule",
								"value": 3
							},
							{
								"name": "ProductTaxabilityRule",
								"value": 4
							},
							{
								"name": "NexusRule",
								"value": 5
							}
						]
					}
				},
				"isAllJuris": {
					"description": "Allows you to make tax rules apply to lower jurisdictions.  This feature is only available in the United States and Canada.\r\n            \r\n* In the United States, this value can be used for rules written at the `State` jurisdictional level.  If set to `true`, this rule will at the state level, county level, city level, and special jurisdiction level.\r\n* In Canada, this value can be used for rules written at the `Country` or `State` jurisdictional levels.  If set to `true`, this rule will at all lower jurisdictional levels.\r\n            \r\nFor any other use case, this value must be `false`.",
					"type": "boolean",
					"example": false
				},
				"value": {
					"format": "double",
					"description": "This field has different behavior based on the type of the tax rule.\r\n            \r\n* For a product taxability rule, this value is either 1 or 0, indicating taxable or non-taxable.\r\n* For a rate override rule, this value is the corrected rate stored as a decimal, for example, a rate of 5% would be stored as 0.05 decimal.  If you use the special value of 1.0, only the cap and threshold values will be applied and the rate will be left alone.",
					"type": "number",
					"example": 0.0
				},
				"cap": {
					"format": "double",
					"description": "The maximum cap for the price of this item according to this rule.  Any amount above this cap will not be subject to this rule.\r\n            \r\nFor example, if you must pay 5% of a product's value up to a maximum value of $1000, you would set the `cap` to `1000.00` and the `value` to `0.05`.",
					"type": "number",
					"example": 0.0
				},
				"threshold": {
					"format": "double",
					"description": "The per-unit threshold that must be met before this rule applies.\r\n            \r\nFor example, if your product is nontaxable unless it is above $100 per product, you would set the `threshold` value to `100`.  In this case, the rate\r\nfor the rule would apply to the entire amount above $100.\r\n            \r\nYou can also create rules that make the entire product taxable if it exceeds a threshold, but is nontaxable\r\nif it is below the threshold.  To choose this, set the `options` field to the value `TaxAll`.",
					"type": "number",
					"example": 0.0
				},
				"options": {
					"description": "Supports custom options for your tax rule.\r\n            \r\nSupported options include:\r\n* `TaxAll` - This value indicates that the entire amount of the line becomes taxable when the line amount exceeds the `threshold`.",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"effectiveDate": {
					"format": "date",
					"description": "The first date at which this rule applies.  If `null`, this rule will apply to all dates prior to the end date.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"endDate": {
					"format": "date",
					"description": "The last date for which this rule applies.  If `null`, this rule will apply to all dates after the effective date.",
					"type": "string"
				},
				"description": {
					"description": "A friendly name for this tax rule.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "Freight"
				},
				"countyFIPS": {
					"description": "For U.S. tax rules, this is the county's Federal Information Processing Standard (FIPS) code.\r\n            \r\nThis field is required for rules that apply to specific jurisdictions in the United States.  It is not required\r\nif you set the `isAllJuris` flag to true.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "013"
				},
				"isSTPro": {
					"description": "DEPRECATED - Date: 8/27/2018, Version: 18.9, Message: This field is no longer required.\r\n",
					"type": "boolean",
					"x-property-deprecation-info": {
						"date": "8/27/2018",
						"version": "18.9",
						"message": "This field is no longer required."
					}
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country where this rule will apply.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region where this rule will apply.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.\r\nNOTE: Region is required for US and not required for non-US countries because the user may be either creating a Country-level or Region-level rule.",
					"type": "string",
					"example": "AZ"
				},
				"sourcing": {
					"description": "The sourcing types to which this rule applies.",
					"enum": ["Origin", "Destination", "Mixed"],
					"type": "string",
					"x-enum-metadata": {
						"name": "Sourcing",
						"values": [
							{
								"name": "Mixed",
								"value": 42
							},
							{
								"name": "Destination",
								"value": 68
							},
							{
								"name": "Origin",
								"value": 79
							}
						]
					}
				},
				"taxTypeGroup": {
					"description": "This field has different behavior based on the type of rule.\r\n            \r\n* For a product taxability rule, if the rule applies to an item, this value will override the tax type group of the original product.\r\n* For other rules, this value determines what tax type groups will be affected by the rule.\r\n            \r\nRefer to `ListTaxTypeGroups` for a list of tax type groups supported by AvaTax.",
					"type": "string",
					"example": "SalesAndUse"
				},
				"taxSubType": {
					"description": "This field has different behavior based on the type of rule.\r\n            \r\n* For a product taxability rule, if the rule applies to an item, this value will override the tax sub type of the original product.\r\n* For other rules, this value determines what tax sub types will be affected by the rule.\r\n            \r\nRefer to `ListTaxSubtypes` for a list of tax sub types supported by AvaTax.",
					"type": "string",
					"example": "ALL"
				},
				"nonPassthroughExpression": {
					"description": "Reserved for Avalara internal usage.  Leave this field null.",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"currencyCode": {
					"description": "The currency code to use for this rule.\r\n            \r\nFor a list of currencies supported by AvaTax, use the [ListCurrencies API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListCurrencies/).",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"preferredProgramId": {
					"format": "int32",
					"description": "Reserved for Avalara internal usage.  Leave this field null.",
					"type": "integer"
				},
				"uomId": {
					"format": "int32",
					"description": "For tax rules that are calculated using units of measurement, this indicates the unit of measurement type\r\nused to calculate the amounts for this rule.\r\n            \r\nFor a list of units of measurement, use the [ListUnitsOfMeasurement API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListUnitOfMeasurement/).",
					"type": "integer"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"taxCode": "FR020800",
				"stateFIPS": "04",
				"jurisName": "MARICOPA",
				"jurisCode": "013",
				"jurisTypeId": 0,
				"jurisdictionTypeId": "County",
				"taxTypeId": "BothSalesAndUseTax",
				"taxRuleTypeId": "ProductTaxabilityRule",
				"isAllJuris": false,
				"value": 0.0,
				"cap": 0.0,
				"threshold": 0.0,
				"effectiveDate": "2020-07-30",
				"description": "Freight",
				"countyFIPS": "013",
				"country": "US",
				"region": "AZ",
				"taxTypeGroup": "SalesAndUse",
				"taxSubType": "ALL"
			}
		},
		"UPCModel": {
			"description": "One Universal Product Code object as defined for your company.",
			"required": ["upc", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number for this UPC.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company to which this UPC belongs.",
					"type": "integer",
					"readOnly": true,
					"example": 1234567
				},
				"upc": {
					"description": "The 12-14 character Universal Product Code, European Article Number, or Global Trade Identification Number.",
					"maxLength": 18,
					"minLength": 12,
					"type": "string",
					"example": "023032550992"
				},
				"legacyTaxCode": {
					"description": "Legacy Tax Code applied to any product sold with this UPC.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "PS081282"
				},
				"description": {
					"description": "Description of the product to which this UPC applies.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "Yarn"
				},
				"effectiveDate": {
					"format": "date",
					"description": "If this UPC became effective on a certain date, this contains the first date on which the UPC was effective.",
					"type": "string"
				},
				"endDate": {
					"format": "date",
					"description": "If this UPC expired or will expire on a certain date, this contains the last date on which the UPC was effective.",
					"type": "string"
				},
				"usage": {
					"format": "int32",
					"description": "A usage identifier for this UPC code.",
					"type": "integer"
				},
				"isSystem": {
					"format": "int32",
					"description": "A flag indicating whether this UPC code is attached to the AvaTax system or to a company.",
					"type": "integer"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 123456789,
				"companyId": 1234567,
				"upc": "023032550992",
				"legacyTaxCode": "PS081282",
				"description": "Yarn"
			}
		},
		"EcmsModel": {
			"description": "Exempt certificate",
			"required": [
				"exemptCertId",
				"companyId",
				"customerCode",
				"region",
				"country",
				"exemptCertTypeId",
				"businessTypeId",
				"regionsApplicable",
				"exemptCertStatusId",
				"countryIssued"
			],
			"type": "object",
			"properties": {
				"exemptCertId": {
					"format": "int32",
					"description": "The calc_id associated with a certificate in CertCapture.",
					"type": "integer",
					"readOnly": true,
					"example": 123
				},
				"companyId": {
					"format": "int32",
					"description": "Company ID",
					"type": "integer",
					"example": 456
				},
				"customerCode": {
					"description": "Customer code",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "ABA"
				},
				"customerName": {
					"description": "Customer name",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"address1": {
					"description": "Address line 1",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"address2": {
					"description": "Address line 2",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"address3": {
					"description": "Address line 3",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "City",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"postalCode": {
					"description": "Postal code / zip code",
					"maxLength": 10,
					"minLength": 0,
					"type": "string"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"exemptCertTypeId": {
					"description": "The type of exemption certificate. Permitted values are: Blanket and Single.",
					"enum": ["Blanket", "SingleUse"],
					"type": "string",
					"example": "SingleUse",
					"x-enum-metadata": {
						"name": "ExemptCertTypeId",
						"values": [
							{
								"name": "Blanket",
								"value": 0
							},
							{
								"name": "SingleUse",
								"value": 1
							}
						]
					}
				},
				"documentRefNo": {
					"description": "Document Reference Number, in the case of single-use exemption certificates, the DocumentCode or PurchaseOrderNo to which the certificate should apply.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"businessTypeId": {
					"format": "int32",
					"description": "Business type the customer belongs to.",
					"type": "integer",
					"example": 2
				},
				"businessTypeOtherDescription": {
					"description": "Other description for this business type",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"exemptReasonId": {
					"description": "Exempt reason associated with the certificate, coded by CustomerUsageType.\r\nExample: A - Federal Government.",
					"maxLength": 1,
					"minLength": 0,
					"type": "string",
					"example": "A"
				},
				"exemptReasonOtherDescription": {
					"description": "Other description for exempt reason i.e. Populated on if exemptReasonId is 'L' - Other.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "test"
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "Effective date for this exempt certificate",
					"type": "string"
				},
				"regionsApplicable": {
					"description": "A list of applicable regions for this exempt certificate.\r\n            \r\nTo list more than one applicable region, separate the list of region codes with commas.",
					"maxLength": 200,
					"minLength": 0,
					"type": "string",
					"example": "CA"
				},
				"exemptCertStatusId": {
					"description": "Status for this exempt certificate",
					"enum": ["Inactive", "Active", "Expired", "Revoked"],
					"type": "string",
					"example": "Active",
					"x-enum-metadata": {
						"name": "ExemptCertStatusId",
						"values": [
							{
								"name": "Inactive",
								"value": 0
							},
							{
								"name": "Active",
								"value": 1
							},
							{
								"name": "Expired",
								"value": 2
							},
							{
								"name": "Revoked",
								"value": 3
							}
						]
					}
				},
				"createdDate": {
					"format": "date-time",
					"description": "Date when this exempt certificate was created",
					"type": "string"
				},
				"lastTransactionDate": {
					"format": "date-time",
					"description": "Date when last transaction with this exempt certificate happened",
					"type": "string",
					"readOnly": true
				},
				"expiryDate": {
					"format": "date-time",
					"description": "When this exempt certificate will expire",
					"type": "string"
				},
				"createdUserId": {
					"format": "int32",
					"description": "User that creates the certificate",
					"type": "integer",
					"example": 0
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "Date when this exempt certificate was modified",
					"type": "string",
					"example": "0001-01-01T00:00:00"
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "Who modified this exempt certificate",
					"type": "integer",
					"example": 0
				},
				"countryIssued": {
					"description": "Name or ISO 3166 code identifying the country that issued this ECMS certificate.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string"
				},
				"avaCertId": {
					"description": "If the certificate record was synced from an AvaTax Certs account(as opposed to being entered in ECMS directly),\r\nthe unique AvaTax Certs identifier for the certificate record. Usually same as the Id of a Certificate.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string"
				},
				"exemptCertReviewStatusId": {
					"description": "Review status for this exempt certificate",
					"enum": ["Pending", "Accepted", "Rejected"],
					"type": "string",
					"example": "Pending",
					"x-enum-metadata": {
						"name": "ExemptCertReviewStatusId",
						"values": [
							{
								"name": "Pending",
								"value": 0
							},
							{
								"name": "Accepted",
								"value": 1
							},
							{
								"name": "Rejected",
								"value": 2
							}
						]
					}
				},
				"details": {
					"description": "Exempt Cert details",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/EcmsDetailModel"
					}
				}
			},
			"example": {
				"exemptCertId": 123,
				"companyId": 456,
				"customerCode": "ABA",
				"region": "CA",
				"country": "US",
				"exemptCertTypeId": "SingleUse",
				"businessTypeId": 2,
				"exemptReasonId": "A",
				"exemptReasonOtherDescription": "test",
				"regionsApplicable": "CA",
				"exemptCertStatusId": "Active",
				"createdUserId": 0,
				"modifiedDate": "0001-01-01T00:00:00",
				"modifiedUserId": 0,
				"exemptCertReviewStatusId": "Pending"
			}
		},
		"CompanyParameterDetailModel": {
			"description": "Represents a parameter associated with a company.",
			"required": ["name", "value"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "Identifier for company parameter",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"companyId": {
					"format": "int32",
					"description": "CompanyId associated with the parameter",
					"type": "integer",
					"example": 0
				},
				"name": {
					"description": "The parameter's name",
					"type": "string",
					"example": "IsPrimaryAddress"
				},
				"value": {
					"description": "The value of the parameter",
					"type": "string",
					"example": "true"
				},
				"unit": {
					"description": "The unit of measurement code for the parameter",
					"type": "string"
				}
			},
			"example": {
				"id": 0,
				"companyId": 0,
				"name": "IsPrimaryAddress",
				"value": "true"
			}
		},
		"ClassificationModel": {
			"description": "Represents a classification for a given item.",
			"required": ["productCode"],
			"type": "object",
			"properties": {
				"productCode": {
					"description": "The product code of an item in a given system.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "9011900000"
				},
				"systemCode": {
					"description": "The system code in which the product belongs.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "TARIC"
				}
			},
			"example": {
				"productCode": "9011900000",
				"systemCode": "TARIC"
			}
		},
		"ItemParameterModel": {
			"description": "Represents a parameter associated with an item.",
			"required": ["name", "value"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The id of the parameter.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"name": {
					"description": "The parameter's name.",
					"type": "string",
					"example": "ScreenSize"
				},
				"value": {
					"description": "The value for the parameter.",
					"type": "string",
					"example": "24"
				},
				"unit": {
					"description": "The unit of measurement code for the parameter.",
					"type": "string",
					"example": "inch"
				},
				"itemId": {
					"format": "int64",
					"description": "The item id",
					"type": "integer"
				}
			},
			"example": {
				"id": 0,
				"name": "ScreenSize",
				"value": "24",
				"unit": "inch"
			}
		},
		"LocationSettingModel": {
			"description": "Represents the answer to one local jurisdiction question for a location.",
			"type": "object",
			"properties": {
				"questionId": {
					"format": "int32",
					"description": "The unique ID number of the location question answered.",
					"type": "integer",
					"example": 17
				},
				"questionName": {
					"description": "The name of the question",
					"type": "string"
				},
				"value": {
					"description": "The answer the user provided.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "abcdefghij"
				}
			},
			"example": {
				"questionId": 17,
				"value": "abcdefghij"
			}
		},
		"LocationParameterModel": {
			"description": "The parameter associated with a company location.",
			"required": ["name", "value"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The ID number of the parameter.",
					"type": "integer",
					"example": 0
				},
				"name": {
					"description": "The parameter's name.",
					"type": "string",
					"example": "NumberOfUnitsForRent"
				},
				"unit": {
					"description": "The parameter's value.",
					"type": "string",
					"example": "Count"
				},
				"value": {
					"description": "The value of the parameter.",
					"type": "string",
					"example": "10"
				},
				"locationId": {
					"format": "int32",
					"description": "The ID of the company location the parameter associated with.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				}
			},
			"example": {
				"id": 0,
				"name": "NumberOfUnitsForRent",
				"unit": "Count",
				"value": "10",
				"locationId": 12345
			}
		},
		"NexusParameterDetailModel": {
			"description": "Represents a parameter associated with a nexus.",
			"required": ["name", "value"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The id of the parameter.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"name": {
					"description": "The parameter's name.",
					"type": "string",
					"example": "IsRemoteSeller"
				},
				"value": {
					"description": "The value for the parameter.",
					"type": "string",
					"example": "true"
				},
				"unit": {
					"description": "The unit of measurement code for the parameter.",
					"type": "string"
				},
				"nexusId": {
					"format": "int32",
					"description": "The nexus id",
					"type": "integer"
				}
			},
			"example": {
				"id": 0,
				"name": "IsRemoteSeller",
				"value": "true"
			}
		},
		"EcmsDetailModel": {
			"description": "Represents an ECMS record, used internally by AvaTax to track information about exemptions.",
			"required": ["exemptCertDetailId", "exemptCertId", "stateFips", "region", "country"],
			"type": "object",
			"properties": {
				"exemptCertDetailId": {
					"format": "int32",
					"description": "Unique, system-assigned identifier of a ExemptCertDetail record.",
					"type": "integer",
					"example": 1235
				},
				"exemptCertId": {
					"format": "int32",
					"description": "The calc_id associated with a certificate in CertCapture.",
					"type": "integer",
					"example": 1111
				},
				"stateFips": {
					"description": "State FIPS",
					"maxLength": 2,
					"minLength": 0,
					"type": "string",
					"example": "AAA"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "WA"
				},
				"idNo": {
					"description": "The customer Tax Id Number (tax_number) associated with a certificate. This is same as exemptionNo in Transactions.",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"endDate": {
					"format": "date-time",
					"description": "End date of this exempt certificate",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"idType": {
					"description": "The type of idNo (tax_number) associated with a certificate.\r\nExample: Driver's Licence Number, Permit Number.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "TIN"
				},
				"isTaxCodeListExclusionList": {
					"format": "int32",
					"description": "Is the tax code list an exculsion list?",
					"type": "integer",
					"example": 0
				},
				"taxCodes": {
					"description": "optional: list of tax code associated with this exempt certificate detail",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/EcmsDetailTaxCodeModel"
					}
				}
			},
			"example": {
				"exemptCertDetailId": 1235,
				"exemptCertId": 1111,
				"stateFips": "AAA",
				"region": "WA",
				"country": "US",
				"endDate": "2020-07-30T00:00:00+00:00",
				"idType": "TIN",
				"isTaxCodeListExclusionList": 0
			}
		},
		"EcmsDetailTaxCodeModel": {
			"description": "",
			"type": "object",
			"properties": {
				"exemptCertDetailTaxCodeId": {
					"format": "int32",
					"description": "Id of the exempt certificate detail tax code",
					"type": "integer",
					"example": 4316
				},
				"exemptCertDetailId": {
					"format": "int32",
					"description": "exempt certificate detail id",
					"type": "integer",
					"example": 1235
				},
				"taxCodeId": {
					"format": "int32",
					"description": "tax code id",
					"type": "integer",
					"example": 0
				}
			},
			"example": {
				"exemptCertDetailTaxCodeId": 4316,
				"exemptCertDetailId": 1235,
				"taxCodeId": 0
			}
		},
		"ApproveAdvancedRuleModel": {
			"description": "Model for changing the approved status of an advanced rule",
			"type": "object",
			"properties": {
				"isApproved": {
					"description": "Should the rule be approved",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"isApproved": true
			}
		},
		"AdvancedRuleVisibilityModel": {
			"description": "Model for toggling visibility of an advanced rule for an account",
			"type": "object",
			"properties": {
				"isVisible": {
					"description": "Should the rule be visible or not visible",
					"type": "boolean"
				},
				"accountId": {
					"format": "int32",
					"description": "The account Id for which the rule is to be visible/not visible",
					"type": "integer"
				}
			},
			"example": {
				"isVisible": true,
				"accountId": 0
			}
		},
		"FetchResult[AdvancedRuleExecutionModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/AdvancedRuleExecutionModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"AdvancedRuleExecutionModel": {
			"description": "Model representing an execution of an advanced rule for a company",
			"required": ["name", "ruleId"],
			"type": "object",
			"properties": {
				"ruleExecutionId": {
					"description": "Rule execution unique identifier",
					"type": "string",
					"readOnly": true,
					"example": "29d065dceed044f1b281b57276f22733"
				},
				"name": {
					"description": "Name of rule execution",
					"type": "string"
				},
				"startDate": {
					"format": "date-time",
					"description": "Date rule execution starts",
					"type": "string",
					"example": "2020-07-30T00:00:00Z"
				},
				"endDate": {
					"format": "date-time",
					"description": "Date rule execution ends",
					"type": "string",
					"example": "9999-12-31T00:00:00"
				},
				"enabled": {
					"description": "Is rule execution enabled",
					"type": "boolean",
					"example": true
				},
				"continueOnError": {
					"description": "Should we keep running if we hit an exception",
					"type": "boolean",
					"example": false
				},
				"ruleId": {
					"description": "Unique identifier of rule to execute",
					"type": "string",
					"example": "f6f3a4d8f9194aa1af4807197614b50f"
				},
				"rule": {
					"$ref": "#/definitions/AdvancedRuleModel",
					"description": "Advanced rule to execute",
					"readOnly": true,
					"example": {
						"ruleId": "131fb3ae82244a9f95b599628d0af3c6",
						"name": "Generic replace rule",
						"description": "Replaces a target value on the transaction with a replacement value",
						"arEntitlementRequired": false
					}
				},
				"customerData": {
					"description": "Json data used for rule execution",
					"type": "string"
				},
				"customerDataId": {
					"description": "Unique identifier of customer data used in rule execution",
					"type": "string",
					"readOnly": true,
					"example": "71a394acdaee4c8090b90f315e6b0fcd"
				}
			},
			"example": {
				"ruleExecutionId": "29d065dceed044f1b281b57276f22733",
				"startDate": "2020-07-30T00:00:00Z",
				"endDate": "9999-12-31T00:00:00",
				"enabled": true,
				"continueOnError": false,
				"ruleId": "f6f3a4d8f9194aa1af4807197614b50f",
				"rule": {
					"ruleId": "131fb3ae82244a9f95b599628d0af3c6",
					"name": "Generic replace rule",
					"description": "Replaces a target value on the transaction with a replacement value",
					"arEntitlementRequired": false
				},
				"customerDataId": "71a394acdaee4c8090b90f315e6b0fcd"
			}
		},
		"AdvancedRuleModel": {
			"description": "A generic global advanced rule encapsulating a script",
			"required": ["name"],
			"type": "object",
			"properties": {
				"ruleId": {
					"description": "Unique identifier for a rule",
					"type": "string",
					"example": "9044cb77f7334f7ab45f16aeaead72f6"
				},
				"name": {
					"description": "Rule name",
					"type": "string",
					"example": "Generic replace rule"
				},
				"description": {
					"description": "Description of the rule",
					"type": "string",
					"example": "Replaces a target value on the transaction with a replacement value"
				},
				"arEntitlementRequired": {
					"description": "Advance Rules limited availability",
					"type": "boolean",
					"example": false
				},
				"executionPosition": {
					"description": "Execution position. Both, Before or After",
					"type": "string"
				}
			},
			"example": {
				"ruleId": "9044cb77f7334f7ab45f16aeaead72f6",
				"name": "Generic replace rule",
				"description": "Replaces a target value on the transaction with a replacement value",
				"arEntitlementRequired": false
			}
		},
		"AdvancedRuleExecutionOrderModel": {
			"description": "Model for updating rule execution order",
			"required": ["ruleExecutionIds"],
			"type": "object",
			"properties": {
				"ruleExecutionIds": {
					"description": "The rule execution Ids in the desired order",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["6e889fb36215476e9b920e3a10d07c84", "d0a38edb78734e81993f4f2d2c0b4e4b"]
				}
			},
			"example": {
				"ruleExecutionIds": ["6e889fb36215476e9b920e3a10d07c84", "d0a38edb78734e81993f4f2d2c0b4e4b"]
			}
		},
		"FetchResult[String]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[AdvancedRuleLookupFileModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/AdvancedRuleLookupFileModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"AdvancedRuleLookupFileModel": {
			"description": "Model representing a lookup file for a company",
			"required": ["name", "content", "fileExtension"],
			"type": "object",
			"properties": {
				"lookupFileId": {
					"description": "LookupFile unique identifier",
					"type": "string"
				},
				"id": {
					"description": "CompanyLookupFile unique identifier",
					"type": "string",
					"readOnly": true
				},
				"name": {
					"description": "Name of lookup file",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "sampleLookupFile.csv"
				},
				"content": {
					"format": "byte",
					"description": "Content of the lookup file.",
					"type": "string",
					"example": "SWQsTWF0ZXJpYWxHcm91cCxUYXhDb2RlIA0KMSw0MjM0NSxTQzE1MDMwNg0KMiw0MjM0NixTQzE1MDMwNg0KMywxMTExMSxQMDAwMDAwMA0KNCw0NDQ0NCxEQzAxMDAwMA0KNSw5MDk5OSxTUDE0MDAwMA=="
				},
				"fileExtension": {
					"description": "File extension (e.g. CSV).",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": ".csv"
				},
				"isTest": {
					"description": "Is this a lookup file created for testing",
					"type": "boolean",
					"example": false
				},
				"inUse": {
					"description": "Is this a lookup file in use for any rule",
					"type": "boolean"
				},
				"version": {
					"format": "int32",
					"description": "Lookup file version",
					"type": "integer"
				},
				"createdDate": {
					"description": "Lookup file CreatedDate",
					"type": "string"
				},
				"modifiedDate": {
					"description": "Lookup file ModifiedDate",
					"type": "string"
				}
			},
			"example": {
				"name": "sampleLookupFile.csv",
				"content": "SWQsTWF0ZXJpYWxHcm91cCxUYXhDb2RlIA0KMSw0MjM0NSxTQzE1MDMwNg0KMiw0MjM0NixTQzE1MDMwNg0KMywxMTExMSxQMDAwMDAwMA0KNCw0NDQ0NCxEQzAxMDAwMA0KNSw5MDk5OSxTUDE0MDAwMA==",
				"fileExtension": ".csv",
				"isTest": false
			}
		},
		"AvaFileFormModel": {
			"description": "Represents information about a tax form known to Avalara",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "Unique Id of the form",
					"type": "integer",
					"example": 2415
				},
				"returnName": {
					"description": "Name of the file being returned",
					"type": "string",
					"example": "CABOE401A2"
				},
				"formName": {
					"description": "Name of the submitted form",
					"type": "string",
					"example": "CA BOE 401 A2"
				},
				"description": {
					"description": "A description of the submitted form",
					"type": "string",
					"example": "State, Local, and District Sales and Use Tax Return"
				},
				"effDate": {
					"format": "date-time",
					"description": "The date this form starts to take effect",
					"type": "string",
					"example": "2005-04-01T00:00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "The date the form finishes to take effect",
					"type": "string",
					"example": "9999-12-31T00:00:00"
				},
				"region": {
					"description": "State/Province/Region where the form is submitted for",
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "The country this form is submitted for",
					"type": "string",
					"example": "US"
				},
				"formTypeId": {
					"description": "The type of the form being submitted",
					"enum": [
						"SalesAndUse",
						"Sales",
						"SellersUse",
						"Lodging",
						"SalesAndLodging",
						"ConsumerUse",
						"ResortAndRental",
						"TouristAndRental",
						"Prepayment",
						"PrepaymentAllowed"
					],
					"type": "string",
					"example": "SalesAndUse",
					"x-enum-metadata": {
						"name": "FormTypeId",
						"values": [
							{
								"name": "SalesAndUse",
								"value": 0
							},
							{
								"name": "Sales",
								"value": 1
							},
							{
								"name": "SellersUse",
								"value": 2
							},
							{
								"name": "Lodging",
								"value": 3
							},
							{
								"name": "SalesAndLodging",
								"value": 4
							},
							{
								"name": "ConsumerUse",
								"value": 5
							},
							{
								"name": "ResortAndRental",
								"value": 6
							},
							{
								"name": "TouristAndRental",
								"value": 7
							},
							{
								"name": "Prepayment",
								"value": 8
							},
							{
								"name": "PrepaymentAllowed",
								"value": 9
							}
						]
					}
				},
				"filingOptionTypeId": {
					"description": "The type of Filing option",
					"enum": ["Paper", "OptionalEfile", "MandatoryEfile"],
					"type": "string",
					"example": "Paper",
					"x-enum-metadata": {
						"name": "FilingOptionTypeId",
						"values": [
							{
								"name": "Paper",
								"value": 0
							},
							{
								"name": "OptionalEfile",
								"value": 1
							},
							{
								"name": "MandatoryEfile",
								"value": 2
							}
						]
					}
				},
				"dueDateTypeId": {
					"description": "The type of the due date",
					"enum": ["ByDay", "ByLastDay", "BySecondLastDay"],
					"type": "string",
					"example": "ByDay",
					"x-enum-metadata": {
						"name": "DueDateTypeId",
						"values": [
							{
								"name": "ByDay",
								"value": 0
							},
							{
								"name": "ByLastDay",
								"value": 1
							},
							{
								"name": "BySecondLastDay",
								"value": 2
							}
						]
					}
				},
				"dueDay": {
					"format": "int32",
					"description": "Due date",
					"type": "integer",
					"example": 20
				},
				"efileDueDateTypeId": {
					"description": "The type of E-file due date.",
					"enum": ["ByDay", "ByLastDay", "BySecondLastDay"],
					"type": "string",
					"example": "ByDay",
					"x-enum-metadata": {
						"name": "DueDateTypeId",
						"values": [
							{
								"name": "ByDay",
								"value": 0
							},
							{
								"name": "ByLastDay",
								"value": 1
							},
							{
								"name": "BySecondLastDay",
								"value": 2
							}
						]
					}
				},
				"efileDueDay": {
					"format": "int32",
					"description": "The date by when the E-filing should be submitted",
					"type": "integer",
					"example": 20
				},
				"efileDueTime": {
					"format": "date-time",
					"description": "The time of day by when the E-filing should be submitted",
					"type": "string",
					"example": "1900-01-01T00:00:00"
				},
				"hasVendorDiscount": {
					"description": "Whether the customer has discount",
					"type": "boolean",
					"example": false
				},
				"roundingTypeId": {
					"description": "The way system does the rounding",
					"enum": ["None", "Nearest", "Up", "Down"],
					"type": "string",
					"example": "None",
					"x-enum-metadata": {
						"name": "RoundingTypeId",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "Nearest",
								"value": 1
							},
							{
								"name": "Up",
								"value": 2
							},
							{
								"name": "Down",
								"value": 3
							}
						]
					}
				},
				"outletTypeId": {
					"description": "The outlet type of the form",
					"enum": ["None", "Schedule", "Duplicate", "Consolidated"],
					"type": "string",
					"x-enum-metadata": {
						"name": "OutletTypeId",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "Schedule",
								"value": 1
							},
							{
								"name": "Duplicate",
								"value": 2
							},
							{
								"name": "Consolidated",
								"value": 3
							}
						]
					}
				}
			},
			"example": {
				"id": 2415,
				"returnName": "CABOE401A2",
				"formName": "CA BOE 401 A2",
				"description": "State, Local, and District Sales and Use Tax Return",
				"effDate": "2005-04-01T00:00:00",
				"endDate": "9999-12-31T00:00:00",
				"region": "CA",
				"country": "US",
				"formTypeId": "SalesAndUse",
				"filingOptionTypeId": "Paper",
				"dueDateTypeId": "ByDay",
				"dueDay": 20,
				"efileDueDateTypeId": "ByDay",
				"efileDueDay": 20,
				"efileDueTime": "1900-01-01T00:00:00",
				"hasVendorDiscount": false,
				"roundingTypeId": "None"
			}
		},
		"FetchResult[AvaFileFormModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/AvaFileFormModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"BatchModel": {
			"description": "Represents a batch of uploaded documents.",
			"required": ["type", "name"],
			"type": "object",
			"properties": {
				"type": {
					"description": "The type of this batch.",
					"enum": [
						"AvaCertUpdate",
						"AvaCertUpdateAll",
						"BatchMaintenance",
						"CompanyLocationImport",
						"DocumentImport",
						"ExemptCertImport",
						"ItemImport",
						"SalesAuditExport",
						"SstpTestDeckImport",
						"TaxRuleImport",
						"TransactionImport",
						"UPCBulkImport",
						"UPCValidationImport"
					],
					"type": "string",
					"example": "TransactionImport",
					"x-enum-metadata": {
						"name": "BatchType",
						"values": [
							{
								"name": "AvaCertUpdate",
								"value": 0
							},
							{
								"name": "AvaCertUpdateAll",
								"value": 1
							},
							{
								"name": "BatchMaintenance",
								"value": 2
							},
							{
								"name": "CompanyLocationImport",
								"value": 3
							},
							{
								"name": "DocumentImport",
								"value": 4
							},
							{
								"name": "ExemptCertImport",
								"value": 5
							},
							{
								"name": "ItemImport",
								"value": 6
							},
							{
								"name": "SalesAuditExport",
								"value": 7
							},
							{
								"name": "SstpTestDeckImport",
								"value": 8
							},
							{
								"name": "TaxRuleImport",
								"value": 9
							},
							{
								"name": "TransactionImport",
								"value": 10
							},
							{
								"name": "UPCBulkImport",
								"value": 11
							},
							{
								"name": "UPCValidationImport",
								"value": 12
							}
						]
					}
				},
				"batchAgent": {
					"description": "The agent used to create this batch",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "manual"
				},
				"options": {
					"description": "Any optional flags provided for this batch",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"id": {
					"format": "int32",
					"description": "The unique ID number of this batch.",
					"type": "integer",
					"readOnly": true
				},
				"name": {
					"description": "The user-friendly readable name for this batch.",
					"maxLength": 194,
					"minLength": 0,
					"type": "string",
					"example": "TestBatch"
				},
				"accountId": {
					"format": "int32",
					"description": "The Account ID number of the account that owns this batch.",
					"type": "integer"
				},
				"companyId": {
					"format": "int32",
					"description": "The Company ID number of the company that owns this batch.",
					"type": "integer"
				},
				"status": {
					"description": "This batch's current processing status",
					"enum": ["Waiting", "SystemErrors", "Cancelled", "Completed", "Creating", "Deleted", "Errors", "Paused", "Processing"],
					"type": "string",
					"readOnly": true,
					"x-enum-metadata": {
						"name": "BatchStatus",
						"values": [
							{
								"name": "Waiting",
								"value": 0
							},
							{
								"name": "SystemErrors",
								"value": 1
							},
							{
								"name": "Cancelled",
								"value": 2
							},
							{
								"name": "Completed",
								"value": 3
							},
							{
								"name": "Creating",
								"value": 4
							},
							{
								"name": "Deleted",
								"value": 5
							},
							{
								"name": "Errors",
								"value": 6
							},
							{
								"name": "Paused",
								"value": 7
							},
							{
								"name": "Processing",
								"value": 8
							}
						]
					}
				},
				"startedDate": {
					"format": "date-time",
					"description": "The date/time when this batch started processing",
					"type": "string",
					"readOnly": true
				},
				"recordCount": {
					"format": "int32",
					"description": "The number of records in this batch; determined by the server",
					"type": "integer",
					"readOnly": true
				},
				"currentRecord": {
					"format": "int32",
					"description": "The current record being processed",
					"type": "integer",
					"readOnly": true
				},
				"completedDate": {
					"format": "date-time",
					"description": "The date/time when this batch was completely processed",
					"type": "string",
					"readOnly": true
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"files": {
					"description": "The list of files contained in this batch.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/BatchFileModel"
					},
					"example": [
						{
							"name": "samplebatch.csv",
							"content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
							"contentLength": 0,
							"contentType": "text/csv",
							"fileExtension": ".csv",
							"filePath": "samplebatch.csv"
						}
					]
				}
			},
			"example": {
				"type": "TransactionImport",
				"batchAgent": "manual",
				"name": "TestBatch",
				"files": [
					{
						"name": "samplebatch.csv",
						"content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
						"contentLength": 0,
						"contentType": "text/csv",
						"fileExtension": ".csv",
						"filePath": "samplebatch.csv"
					}
				]
			}
		},
		"BatchFileModel": {
			"description": "Represents one file in a batch upload.",
			"required": ["content"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number assigned to this batch file.",
					"type": "integer",
					"readOnly": true
				},
				"batchId": {
					"format": "int32",
					"description": "The unique ID number of the batch that this file belongs to.",
					"type": "integer",
					"readOnly": true
				},
				"name": {
					"description": "Logical Name of file (e.g. \"Input\" or \"Error\").",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "samplebatch.csv"
				},
				"content": {
					"format": "byte",
					"description": "Content of the batch file.",
					"type": "string",
					"example": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg=="
				},
				"contentLength": {
					"format": "int32",
					"description": "Size of content, in bytes.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"contentType": {
					"description": "Content mime type (e.g. text/csv).  This is used for HTTP downloading.",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "text/csv"
				},
				"fileExtension": {
					"description": "File extension (e.g. CSV).",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": ".csv"
				},
				"filePath": {
					"description": "Path to the file - name/S3 key",
					"type": "string",
					"example": "samplebatch.csv"
				},
				"errorCount": {
					"format": "int32",
					"description": "Number of errors that occurred when processing this file.",
					"type": "integer"
				}
			},
			"example": {
				"name": "samplebatch.csv",
				"content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
				"contentLength": 0,
				"contentType": "text/csv",
				"fileExtension": ".csv",
				"filePath": "samplebatch.csv"
			}
		},
		"FetchResult[BatchModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/BatchModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"CreateTransactionBatchRequestModel": {
			"description": "Represents a create transaction batch request model.",
			"required": ["name", "transactions"],
			"type": "object",
			"properties": {
				"name": {
					"description": "The user-friendly readable name for this batch.",
					"maxLength": 194,
					"minLength": 0,
					"type": "string"
				},
				"transactions": {
					"description": "The list of transactions contained in this batch.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionBatchItemModel"
					}
				}
			},
			"example": {
				"name": "TestBatch-637317438894064879",
				"transactions": [
					{
						"createTransactionModel": {
							"code": "MyTransaction-637317438894050115",
							"lines": [
								{
									"number": "1",
									"quantity": 1.0,
									"amount": 100.0,
									"taxCode": "PS081282",
									"itemCode": "Y0001",
									"description": "Yarn"
								}
							],
							"type": "SalesInvoice",
							"companyCode": "DEFAULT",
							"date": "2020-07-30",
							"customerCode": "ABC",
							"purchaseOrderNo": "2020-07-30-001",
							"addresses": {
								"singleLocation": {
									"line1": "2000 Main Street",
									"city": "Irvine",
									"region": "CA",
									"country": "US",
									"postalCode": "92614"
								}
							},
							"commit": true,
							"currencyCode": "USD",
							"description": "Yarn"
						}
					},
					{
						"adjustTransactionModel": {
							"companyCode": "DEFAULT",
							"transactionCode": "MyTransaction-637317438894050115",
							"documentType": "SalesInvoice",
							"adjustmentReason": "PriceAdjusted",
							"adjustmentDescription": "Price drop before shipping",
							"newTransaction": {
								"code": "MyTransaction-637317438894050115",
								"lines": [
									{
										"number": "1",
										"quantity": 1.0,
										"amount": 90.0,
										"taxCode": "PS081282",
										"itemCode": "Y0001",
										"description": "Yarn"
									}
								],
								"type": "SalesInvoice",
								"companyCode": "DEFAULT",
								"date": "2020-07-30",
								"customerCode": "ABC",
								"purchaseOrderNo": "2020-07-30-001",
								"addresses": {
									"singleLocation": {
										"line1": "2000 Main Street",
										"city": "Irvine",
										"region": "CA",
										"country": "US",
										"postalCode": "92614"
									}
								},
								"commit": true,
								"currencyCode": "USD",
								"description": "Yarn"
							}
						}
					},
					{
						"voidTransactionModel": {
							"companyCode": "DEFAULT",
							"transactionCode": "MyTransaction-637317438894050115",
							"documentType": "SalesInvoice",
							"code": "DocVoided"
						}
					}
				]
			}
		},
		"TransactionBatchItemModel": {
			"description": "Represents a transaction batch item.\r\nOnly one child transaction model should contain data.",
			"type": "object",
			"properties": {
				"createTransactionModel": {
					"$ref": "#/definitions/CreateTransactionModel",
					"description": "Represents a transaction to be created."
				},
				"adjustTransactionModel": {
					"$ref": "#/definitions/BatchAdjustTransactionModel",
					"description": "Represents an existing transaction to be adjusted."
				},
				"voidTransactionModel": {
					"$ref": "#/definitions/BatchVoidTransactionModel",
					"description": "Represents an existing transaction to be voided."
				}
			},
			"example": {
				"createTransactionModel": {
					"lines": [
						{
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					],
					"type": "SalesInvoice",
					"companyCode": "DEFAULT",
					"date": "2020-07-30",
					"customerCode": "ABC",
					"purchaseOrderNo": "2020-07-30-001",
					"addresses": {
						"singleLocation": {
							"line1": "2000 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92614"
						}
					},
					"commit": true,
					"currencyCode": "USD",
					"description": "Yarn"
				}
			}
		},
		"CreateTransactionModel": {
			"description": "Create a transaction",
			"required": ["lines", "date", "customerCode"],
			"type": "object",
			"properties": {
				"code": {
					"description": "The internal reference code used by the client application.  This is used for operations such as\r\nGet, Adjust, Settle, and Void.  If you leave the transaction code blank, a GUID will be assigned to each transaction.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"lines": {
					"description": "A list of line items that will appear on this transaction.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/LineItemModel"
					},
					"example": [
						{
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					]
				},
				"type": {
					"description": "Specifies the type of document to create.  A document type ending with `Invoice` is a permanent transaction\r\nthat will be recorded in AvaTax.  A document type ending with `Order` is a temporary estimate that will not\r\nbe preserved.\r\n            \r\nIf you omit this value, the API will assume you want to create a `SalesOrder`.",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesInvoice",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"companyCode": {
					"description": "Company Code - Specify the code of the company creating this transaction here.  If you leave this value null,\r\nyour account's default company will be used instead.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "DEFAULT"
				},
				"date": {
					"format": "date",
					"description": "Transaction Date - The date on the invoice, purchase order, etc.\r\n            \r\nBy default, this date will be used to calculate the tax rates for the transaction.  If you wish to use a\r\ndifferent date to calculate tax rates, please specify a `taxOverride` of type `taxDate`.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"salespersonCode": {
					"description": "Salesperson Code - The client application salesperson reference code.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"customerCode": {
					"description": "Customer Code - The client application customer reference code.\r\nNote: This field is case sensitive. To have exemption certificates apply, this value should\r\nbe the same as the one passed to create a customer.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "ABC"
				},
				"customerUsageType": {
					"description": "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please use entityUseCode instead.\r\nCustomer Usage Type - The client application customer or usage type.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"x-property-deprecation-info": {
						"date": "10/16/2017",
						"version": "17.11",
						"message": "Please use entityUseCode instead."
					}
				},
				"entityUseCode": {
					"description": "Entity Use Code - The client application customer or usage type.  For a list of\r\navailable usage types, use [ListEntityUseCodes](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListEntityUseCodes/) API.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"discount": {
					"format": "double",
					"description": "Discount - The discount amount to apply to the document.  This value will be applied only to lines\r\nthat have the `discounted` flag set to true.  If no lines have `discounted` set to true, this discount\r\ncannot be applied.",
					"type": "number"
				},
				"purchaseOrderNo": {
					"description": "Purchase Order Number for this document.\r\n            \r\nThis is required for single use exemption certificates to match the order and invoice with the certificate.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "2020-07-30-001"
				},
				"exemptionNo": {
					"description": "Exemption Number for this document.\r\n            \r\nIf you specify an exemption number for this document, this document will be considered exempt, and you\r\nmay be asked to provide proof of this exemption certificate in the event that you are asked by an auditor\r\nto verify your exemptions.\r\nNote: This is same as 'exemptNo' in TransactionModel.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"addresses": {
					"$ref": "#/definitions/AddressesModel",
					"description": "Default addresses for all lines in this document.\r\n            \r\nThese addresses are the default values that will be used for any lines that do not have their own\r\naddress information.  If you specify addresses for a line, then no default addresses will be loaded\r\nfor that line.",
					"example": {
						"singleLocation": {
							"line1": "2000 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92614"
						}
					}
				},
				"parameters": {
					"description": "Special parameters for this transaction.\r\n            \r\nTo get a full list of available parameters, please use the [ListParameters](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListParameters/) endpoint.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionParameterModel"
					}
				},
				"referenceCode": {
					"description": "Customer-provided Reference Code with information about this transaction.\r\n            \r\nThis field could be used to reference the original document for a return invoice, or for any other\r\nreference purpose.",
					"maxLength": 1024,
					"minLength": 0,
					"type": "string"
				},
				"reportingLocationCode": {
					"description": "Sets the sale location code (Outlet ID) for reporting this document to the tax authority.\r\n            \r\nThis value is used by Avalara Managed Returns to group documents together by reporting locations\r\nfor tax authorities that require location-based reporting.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"commit": {
					"description": "Causes the document to be committed if true.  This option is only applicable for invoice document\r\ntypes, not orders.",
					"type": "boolean",
					"example": true
				},
				"batchCode": {
					"description": "BatchCode for batch operations.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"taxOverride": {
					"$ref": "#/definitions/TaxOverrideModel",
					"description": "Specifies a tax override for the entire document"
				},
				"currencyCode": {
					"description": "The three-character ISO 4217 currency code for this transaction.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "USD"
				},
				"serviceMode": {
					"description": "Specifies whether the tax calculation is handled Local, Remote, or Automatic (default).  This only\r\napplies when using an AvaLocal server.",
					"enum": ["Automatic", "Local", "Remote"],
					"type": "string",
					"x-enum-metadata": {
						"name": "ServiceMode",
						"values": [
							{
								"name": "Automatic",
								"value": 0
							},
							{
								"name": "Local",
								"value": 1
							},
							{
								"name": "Remote",
								"value": 2
							}
						]
					}
				},
				"exchangeRate": {
					"format": "double",
					"description": "Currency exchange rate from this transaction to the company base currency.\r\n            \r\nThis only needs to be set if the transaction currency is different than the company base currency.\r\nIt defaults to 1.0.",
					"type": "number"
				},
				"exchangeRateEffectiveDate": {
					"format": "date",
					"description": "Effective date of the exchange rate.",
					"type": "string"
				},
				"posLaneCode": {
					"description": "Sets the Point of Sale Lane Code sent by the User for this document.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"businessIdentificationNo": {
					"description": "VAT business identification number for the customer for this transaction.  This number will be used for all lines\r\nin the transaction, except for those lines where you have defined a different business identification number.\r\n            \r\nIf you specify a VAT business identification number for the customer in this transaction and you have also set up\r\na business identification number for your company during company setup, this transaction will be treated as a\r\nbusiness-to-business transaction for VAT purposes and it will be calculated according to VAT tax rules.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"isSellerImporterOfRecord": {
					"description": "Specifies if the transaction should have value-added and cross-border taxes calculated with the seller as the importer of record.\r\n            \r\nSome taxes only apply if the seller is the importer of record for a product.  In cases where companies are working together to\r\nship products, there may be mutual agreement as to which company is the entity designated as importer of record.  The importer\r\nof record will then be the company designated to pay taxes marked as being obligated to the importer of record.\r\n            \r\nSet this value to `true` to consider your company as the importer of record and collect these taxes.\r\n            \r\nThis value may also be set at the Nexus level.  See `NexusModel` for more information.",
					"type": "boolean"
				},
				"description": {
					"description": "User-supplied description for this transaction.",
					"maxLength": 2048,
					"minLength": 0,
					"type": "string",
					"example": "Yarn"
				},
				"email": {
					"description": "User-supplied email address relevant for this transaction.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"debugLevel": {
					"description": "If the user wishes to request additional debug information from this transaction, specify a level higher than `normal`.",
					"enum": ["Normal", "Diagnostic"],
					"type": "string",
					"x-enum-metadata": {
						"name": "TaxDebugLevel",
						"values": [
							{
								"name": "Normal",
								"value": 0
							},
							{
								"name": "Diagnostic",
								"value": 1
							}
						]
					}
				}
			},
			"example": {
				"lines": [
					{
						"number": "1",
						"quantity": 1.0,
						"amount": 100.0,
						"taxCode": "PS081282",
						"itemCode": "Y0001",
						"description": "Yarn"
					}
				],
				"type": "SalesInvoice",
				"companyCode": "DEFAULT",
				"date": "2020-07-30",
				"customerCode": "ABC",
				"purchaseOrderNo": "2020-07-30-001",
				"addresses": {
					"singleLocation": {
						"line1": "2000 Main Street",
						"city": "Irvine",
						"region": "CA",
						"country": "US",
						"postalCode": "92614"
					}
				},
				"commit": true,
				"currencyCode": "USD",
				"description": "Yarn"
			}
		},
		"BatchAdjustTransactionModel": {
			"description": "Replace an existing transaction recorded in AvaTax with a new one.",
			"required": ["companyCode", "transactionCode", "adjustmentReason", "newTransaction"],
			"type": "object",
			"properties": {
				"companyCode": {
					"description": "Specifies the code of the company for this transaction.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"transactionCode": {
					"description": "Please specify the transaction code of the transacion to void.",
					"type": "string"
				},
				"documentType": {
					"description": "Specifies the type of document to void.",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string"
				},
				"adjustmentReason": {
					"description": "A reason code indicating why this adjustment was made",
					"enum": [
						"NotAdjusted",
						"SourcingIssue",
						"ReconciledWithGeneralLedger",
						"ExemptCertApplied",
						"PriceAdjusted",
						"ProductReturned",
						"ProductExchanged",
						"BadDebt",
						"Other",
						"Offline"
					],
					"type": "string",
					"example": "PriceAdjusted",
					"x-enum-metadata": {
						"name": "AdjustmentReason",
						"values": [
							{
								"name": "NotAdjusted",
								"value": 0
							},
							{
								"name": "SourcingIssue",
								"value": 1
							},
							{
								"name": "ReconciledWithGeneralLedger",
								"value": 2
							},
							{
								"name": "ExemptCertApplied",
								"value": 3
							},
							{
								"name": "PriceAdjusted",
								"value": 4
							},
							{
								"name": "ProductReturned",
								"value": 5
							},
							{
								"name": "ProductExchanged",
								"value": 6
							},
							{
								"name": "BadDebt",
								"value": 7
							},
							{
								"name": "Other",
								"value": 8
							},
							{
								"name": "Offline",
								"value": 9
							}
						]
					}
				},
				"adjustmentDescription": {
					"description": "If the AdjustmentReason is \"Other\", specify the reason here.\r\n            \r\nThis is required when the AdjustmentReason is 8 (Other).",
					"type": "string",
					"example": "Price drop before shipping"
				},
				"newTransaction": {
					"$ref": "#/definitions/CreateTransactionModel",
					"description": "Replace the current transaction with tax data calculated for this new transaction",
					"example": {
						"lines": [
							{
								"number": "1",
								"quantity": 1.0,
								"amount": 100.0,
								"taxCode": "PS081282",
								"itemCode": "Y0001",
								"description": "Yarn"
							}
						],
						"type": "SalesInvoice",
						"companyCode": "DEFAULT",
						"date": "2020-07-30",
						"customerCode": "ABC",
						"purchaseOrderNo": "2020-07-30-001",
						"addresses": {
							"singleLocation": {
								"line1": "2000 Main Street",
								"city": "Irvine",
								"region": "CA",
								"country": "US",
								"postalCode": "92614"
							}
						},
						"commit": true,
						"currencyCode": "USD",
						"description": "Yarn"
					}
				}
			},
			"example": {
				"companyCode": "DEFAULT",
				"transactionCode": "8cf97d82-29a3-4323-8167-28f4e85f3ccb",
				"documentType": "SalesInvoice",
				"adjustmentReason": "PriceAdjusted",
				"adjustmentDescription": "Price drop before shipping",
				"newTransaction": {
					"lines": [
						{
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					],
					"type": "SalesInvoice",
					"companyCode": "DEFAULT",
					"date": "2020-07-30",
					"customerCode": "ABC",
					"purchaseOrderNo": "2020-07-30-001",
					"addresses": {
						"singleLocation": {
							"line1": "2000 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92614"
						}
					},
					"commit": true,
					"currencyCode": "USD",
					"description": "Yarn"
				}
			}
		},
		"BatchVoidTransactionModel": {
			"description": "A request to void a previously created transaction.",
			"required": ["companyCode", "transactionCode", "code"],
			"type": "object",
			"properties": {
				"companyCode": {
					"description": "Company Code - Specify the code of the company for this transaction.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"transactionCode": {
					"description": "Please specify the transaction code of the transacion to void.",
					"type": "string"
				},
				"documentType": {
					"description": "Specifies the type of document to void.",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string"
				},
				"code": {
					"description": "Please specify the reason for voiding or cancelling this transaction.\r\nTo void the transaction, please specify the reason 'DocVoided'.\r\nIf you do not provide a reason, the void command will fail.",
					"enum": ["Unspecified", "PostFailed", "DocDeleted", "DocVoided", "AdjustmentCancelled"],
					"type": "string",
					"example": "DocVoided",
					"x-enum-metadata": {
						"name": "VoidReasonCode",
						"values": [
							{
								"name": "Unspecified",
								"value": 0
							},
							{
								"name": "PostFailed",
								"value": 1
							},
							{
								"name": "DocDeleted",
								"value": 2
							},
							{
								"name": "DocVoided",
								"value": 3
							},
							{
								"name": "AdjustmentCancelled",
								"value": 4
							}
						]
					}
				}
			},
			"example": {
				"companyCode": "DEFAULT",
				"transactionCode": "69e35332-c5bc-4b75-99f2-a97a92261193",
				"documentType": "SalesInvoice",
				"code": "DocVoided"
			}
		},
		"LineItemModel": {
			"description": "Represents one line item in a transaction",
			"required": ["amount"],
			"type": "object",
			"properties": {
				"number": {
					"description": "The line number of this line within the document.  This can be any text that is useful to you, such as numeric line numbers, alphabetic line numbers, or other text.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "1"
				},
				"quantity": {
					"format": "double",
					"description": "Quantity of items in this line.  This quantity value should always be a positive value representing the quantity of product that changed hands, even when handling returns or refunds.\r\n            \r\nIf not provided, or if set to zero, the quantity value is assumed to be one (1).",
					"type": "number",
					"example": 1.0
				},
				"amount": {
					"format": "double",
					"description": "Total amount for this line.  The amount represents the net currency value that changed hands from the customer (represented by the `customerCode` field) to the company (represented by the `companyCode`) field.\r\n            \r\nFor sale transactions, this value must be positive.  It indicates the amount of money paid by the customer to the company.\r\n            \r\nFor refund or return transactions, this value must be negative.",
					"type": "number",
					"example": 100.0
				},
				"addresses": {
					"$ref": "#/definitions/AddressesModel",
					"description": "The addresses to use for this transaction line.\r\n            \r\nIf you set this value to `null`, or if you omit this element from your API call, then instead the transaction\r\nwill use the `addresses` from the document level.\r\n            \r\nIf you specify any other value besides `null`, only addresses specified for this line will be used for this line."
				},
				"taxCode": {
					"description": "Tax Code - System or Custom Tax Code.\r\n            \r\nYou can use your own tax code mapping or standard Avalara tax codes.  For a full list of tax codes, see `ListTaxCodes`.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "PS081282"
				},
				"customerUsageType": {
					"description": "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please use `entityUseCode` instead.\r\n",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"x-property-deprecation-info": {
						"date": "10/16/2017",
						"version": "17.11",
						"message": "Please use `entityUseCode` instead."
					}
				},
				"entityUseCode": {
					"description": "Entity Use Code - The client application customer or usage type.  This field allows you to designate a type of usage that\r\nmay make this transaction considered exempt by reason of exempt usage.\r\n            \r\nFor a list of entity use codes, see the Definitions API `ListEntityUseCodes`.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"itemCode": {
					"description": "Item Code (SKU).  If you provide an `itemCode` field, the AvaTax API will look up the item you created with the `CreateItems` API call\r\nand use all the information available about that item for this transaction.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Y0001"
				},
				"exemptionCode": {
					"description": "The customer Tax Id Number (tax_number) associated with a certificate - Sales tax calculation requests first determine if there is an applicable\r\nECMS entry available, and will utilize it for exemption processing. If no applicable ECMS entry is available, the AvaTax service\r\nwill determine if an Exemption Number field is populated or an Entity/Use Code is included in the sales tax calculation request,\r\nand will perform exemption processing using either of those two options.\r\nNote: This is same as 'exemptNo' in TransactionModel.",
					"type": "string"
				},
				"discounted": {
					"description": "True if the document discount should be applied to this line.  If this value is false, or not provided, discounts will not be\r\napplied to this line even if they are specified on the root `discount` element.",
					"type": "boolean"
				},
				"taxIncluded": {
					"description": "Indicates whether the `amount` for this line already includes tax.\r\n            \r\nIf this value is `true`, the final price of this line including tax will equal the value in `amount`.\r\n            \r\nIf this value is `null` or `false`, the final price will equal `amount` plus whatever taxes apply to this line.",
					"type": "boolean"
				},
				"revenueAccount": {
					"description": "Revenue Account (Customer Defined Field).\r\n            \r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"ref1": {
					"description": "Ref1 (Customer Defined Field)\r\n            \r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
					"maxLength": 250,
					"minLength": 0,
					"type": "string"
				},
				"ref2": {
					"description": "Ref2 (Customer Defined Field)\r\n            \r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
					"maxLength": 250,
					"minLength": 0,
					"type": "string"
				},
				"description": {
					"description": "Item description.\r\n            \r\nFor Streamlined Sales Tax (SST) customers, this field is required if an unmapped `itemCode` is used.",
					"maxLength": 2096,
					"minLength": 0,
					"type": "string",
					"example": "Yarn"
				},
				"businessIdentificationNo": {
					"description": "VAT business identification number for the customer for this line item.  If you leave this field empty,\r\nthis line item will use whatever business identification number you provided at the transaction level.\r\n            \r\nIf you specify a VAT business identification number for the customer in this transaction and you have also set up\r\na business identification number for your company during company setup, this transaction will be treated as a\r\nbusiness-to-business transaction for VAT purposes and it will be calculated according to VAT tax rules.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"taxOverride": {
					"$ref": "#/definitions/TaxOverrideModel",
					"description": "Specifies a tax override for this line."
				},
				"parameters": {
					"description": "Special parameters that apply to this line within this transaction.\r\n            \r\nTo get a full list of available parameters, please use the `ListParameters` API.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionLineParameterModel"
					}
				},
				"hsCode": {
					"description": "The Item code for Custom Duty / Global Import tax determination\r\nHarmonized Tariff System code for this transaction.\r\n            \r\nFor a list of harmonized tariff codes, see the Definitions API for harmonized tariff codes.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				}
			},
			"example": {
				"number": "1",
				"quantity": 1.0,
				"amount": 100.0,
				"taxCode": "PS081282",
				"itemCode": "Y0001",
				"description": "Yarn"
			}
		},
		"AddressesModel": {
			"description": "Information about all the addresses involved in this transaction.\r\n            \r\nFor a physical in-person transaction at a retail point-of-sale location, please specify only one address using\r\nthe `singleLocation` field.\r\n            \r\nFor a transaction that was shipped, delivered, or provided from an origin location such as a warehouse to\r\na destination location such as a customer, please specify the `shipFrom` and `shipTo` addresses.\r\n            \r\nIn the United States, some jurisdictions recognize the address types `pointOfOrderOrigin` and `pointOfOrderAcceptance`.\r\nThese address types affect the sourcing models of some transactions.\r\n            \r\nIf latitude and longitude information is provided for any of these addresses along with line, city, region, country and postal code information,\r\nwe will be using only latitude and longitude and will discard line, city, region, country and postal code information for the transaction.\r\nPlease ensure that you have the correct latitude/longitude information for the addresses prior to using the API.\r\nIf you provide either latitude or longitude information but not both, we will be using the line, city, region, country and postal code information for the addresses.",
			"type": "object",
			"properties": {
				"singleLocation": {
					"$ref": "#/definitions/AddressLocationInfo",
					"description": "If this transaction occurred at a retail point-of-sale location, provide that single address here and leave\r\nall other address types null."
				},
				"shipFrom": {
					"$ref": "#/definitions/AddressLocationInfo",
					"description": "The origination address where the products were shipped from, or from where the services originated."
				},
				"shipTo": {
					"$ref": "#/definitions/AddressLocationInfo",
					"description": "The destination address where the products were shipped to, or where the services were delivered."
				},
				"pointOfOrderOrigin": {
					"$ref": "#/definitions/AddressLocationInfo",
					"description": "The place of business where you receive the customer's order.  This address type is valid in the United States only\r\nand only applies to tangible personal property."
				},
				"pointOfOrderAcceptance": {
					"$ref": "#/definitions/AddressLocationInfo",
					"description": "The place of business where you accept/approve the customer’s order,\r\nthereby becoming contractually obligated to make the sale.  This address type is valid in the United States only\r\nand only applies to tangible personal property."
				},
				"goodsPlaceOrServiceRendered": {
					"$ref": "#/definitions/AddressLocationInfo",
					"description": "The address where the goods are located or where services are rendered.This address type is valid only for VAT transactions."
				},
				"import": {
					"$ref": "#/definitions/AddressLocationInfo",
					"description": "The address of the buyer importing a good from another country.This address type is valid only for VAT transactions."
				}
			},
			"example": {
				"shipFrom": {
					"line1": "2000 Main Street",
					"city": "Irvine",
					"region": "CA",
					"country": "US",
					"postalCode": "92614"
				},
				"shipTo": {
					"line1": "1100 2nd Ave",
					"city": "Seattle",
					"region": "WA",
					"country": "US",
					"postalCode": "98101"
				}
			}
		},
		"TransactionParameterModel": {
			"description": "Represents a transaction parameter.",
			"type": "object",
			"properties": {
				"name": {
					"description": "The name of the parameter.",
					"type": "string",
					"example": "ScreenSize"
				},
				"value": {
					"description": "The value of the parameter.",
					"type": "string",
					"example": "22.0"
				},
				"unit": {
					"description": "The unit of measure of the parameter value.",
					"type": "string",
					"example": "Inch"
				}
			},
			"example": {
				"name": "ScreenSize",
				"value": "22.0",
				"unit": "Inch"
			}
		},
		"TaxOverrideModel": {
			"description": "Represents a tax override for a transaction",
			"type": "object",
			"properties": {
				"type": {
					"description": "Identifies the type of tax override",
					"enum": ["None", "TaxAmount", "Exemption", "TaxDate", "AccruedTaxAmount", "DeriveTaxable", "OutOfHarbor"],
					"type": "string",
					"example": "TaxAmount",
					"x-enum-metadata": {
						"name": "TaxOverrideType",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "TaxAmount",
								"value": 1
							},
							{
								"name": "Exemption",
								"value": 2
							},
							{
								"name": "TaxDate",
								"value": 3
							},
							{
								"name": "AccruedTaxAmount",
								"value": 4
							},
							{
								"name": "DeriveTaxable",
								"value": 5
							},
							{
								"name": "OutOfHarbor",
								"value": 6
							}
						]
					}
				},
				"taxAmount": {
					"format": "double",
					"description": "Indicates a total override of the calculated tax on the document.  AvaTax will distribute\r\nthe override across all the lines.\r\n            \r\nTax will be distributed on a best effort basis.  It may not always be possible to override all taxes.  Please consult\r\nyour account manager for information about overrides.",
					"type": "number",
					"example": 6.25
				},
				"taxDate": {
					"format": "date",
					"description": "The override tax date to use\r\n            \r\nThis is used when the tax has been previously calculated\r\nas in the case of a layaway, return or other reason indicated by the Reason element.\r\nIf the date is not overridden, then it should be set to the same as the DocDate.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"reason": {
					"description": "This provides the reason for a tax override for audit purposes.  It is required for types 2-4.\r\n            \r\nTypical reasons include:\r\n\"Return\"\r\n\"Layaway\"",
					"type": "string",
					"example": "Precalculated Tax"
				}
			},
			"example": {
				"type": "TaxAmount",
				"taxAmount": 6.25,
				"taxDate": "2020-07-30",
				"reason": "Precalculated Tax"
			}
		},
		"TransactionLineParameterModel": {
			"description": "Represents a transaction parameter.",
			"type": "object",
			"properties": {
				"name": {
					"description": "The name of the parameter.",
					"type": "string",
					"example": "ScreenSize"
				},
				"value": {
					"description": "The value of the parameter.",
					"type": "string",
					"example": "22.0"
				},
				"unit": {
					"description": "The unit of measure of the parameter value.",
					"type": "string",
					"example": "Inch"
				}
			},
			"example": {
				"name": "ScreenSize",
				"value": "22.0",
				"unit": "Inch"
			}
		},
		"AddressLocationInfo": {
			"description": "Represents an address to resolve.",
			"type": "object",
			"properties": {
				"locationCode": {
					"description": "If you wish to use the address of an existing location for this company, specify the address here.\r\nOtherwise, leave this value empty.\r\n            \r\nThe `locationCode` field on this object allows you to quickly use the address of an existing `locationModel` object instead\r\nof having to retype the address completely.\r\n            \r\nThis field does not affect the behavior of transactions that must be filed on location-based tax returns.  To specify how a\r\ntransaction will be reported on location-based tax returns, please see the `reportingLocationCode` field\r\non the [CreateTransactionModel](https://developer.avalara.com/api-reference/avatax/rest/v2/models/CreateTransactionModel/) element.",
					"type": "string"
				},
				"line1": {
					"description": "First line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "2000 Main Street"
				},
				"line2": {
					"description": "Second line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "Third line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "City component of the address",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"postalCode": {
					"description": "Postal Code / Zip Code component of the address.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string",
					"example": "92614"
				},
				"latitude": {
					"format": "double",
					"description": "Geospatial latitude measurement, in Decimal Degrees floating point format.",
					"type": "number"
				},
				"longitude": {
					"format": "double",
					"description": "Geospatial longitude measurement, in Decimal Degrees floating point format.",
					"type": "number"
				}
			},
			"example": {
				"line1": "2000 Main Street",
				"city": "Irvine",
				"region": "CA",
				"country": "US",
				"postalCode": "92614"
			}
		},
		"CreateTransactionBatchResponseModel": {
			"description": "Represents a create transaction batch response model.",
			"required": ["name"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this batch.",
					"type": "integer",
					"readOnly": true
				},
				"name": {
					"description": "The user-friendly readable name for this batch.",
					"maxLength": 194,
					"minLength": 0,
					"type": "string",
					"example": "TestBatch"
				},
				"accountId": {
					"format": "int32",
					"description": "The Account ID number of the account that owns this batch.",
					"type": "integer"
				},
				"companyId": {
					"format": "int32",
					"description": "The Company ID number of the company that owns this batch.",
					"type": "integer"
				},
				"status": {
					"description": "This batch's current processing status",
					"enum": ["Waiting", "SystemErrors", "Cancelled", "Completed", "Creating", "Deleted", "Errors", "Paused", "Processing"],
					"type": "string",
					"readOnly": true,
					"x-enum-metadata": {
						"name": "BatchStatus",
						"values": [
							{
								"name": "Waiting",
								"value": 0
							},
							{
								"name": "SystemErrors",
								"value": 1
							},
							{
								"name": "Cancelled",
								"value": 2
							},
							{
								"name": "Completed",
								"value": 3
							},
							{
								"name": "Creating",
								"value": 4
							},
							{
								"name": "Deleted",
								"value": 5
							},
							{
								"name": "Errors",
								"value": 6
							},
							{
								"name": "Paused",
								"value": 7
							},
							{
								"name": "Processing",
								"value": 8
							}
						]
					}
				},
				"startedDate": {
					"format": "date-time",
					"description": "The date/time when this batch started processing",
					"type": "string",
					"readOnly": true
				},
				"recordCount": {
					"format": "int32",
					"description": "The number of records in this batch; determined by the server",
					"type": "integer",
					"readOnly": true
				},
				"currentRecord": {
					"format": "int32",
					"description": "The current record being processed",
					"type": "integer",
					"readOnly": true
				},
				"completedDate": {
					"format": "date-time",
					"description": "The date/time when this batch was completely processed",
					"type": "string",
					"readOnly": true
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"files": {
					"description": "The list of files contained in this batch.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/BatchFileModel"
					},
					"example": [
						{
							"name": "Input",
							"contentLength": 2393,
							"contentType": "application/json",
							"fileExtension": "JSON",
							"filePath": "Input.json"
						}
					]
				}
			},
			"example": {
				"name": "TestBatch",
				"files": [
					{
						"name": "Input",
						"contentLength": 2393,
						"contentType": "application/json",
						"fileExtension": "JSON",
						"filePath": "Input.json"
					}
				]
			}
		},
		"CreateCertExpressInvitationModel": {
			"description": "Represents an invitation for a customer to use CertExpress to self-report their own certificates.\r\nThis invitation is delivered by your choice of method, or you can present a hyperlink to the user\r\ndirectly in your connector.  Your customer will be redirected to https://app.certexpress.com/ where\r\nthey can follow a step-by-step guide to enter information about their exemption certificates.  The\r\ncertificates entered will be recorded and automatically linked to their customer record.",
			"type": "object",
			"properties": {
				"recipient": {
					"description": "If the value of `deliveryMethod` is set to `Email`, please specify the email address of the recipient\r\nfor the request.",
					"type": "string",
					"example": "bob@example.org"
				},
				"coverLetterTitle": {
					"description": "If this invitation is sent via email or download, please specify the cover letter to use when building this\r\ninvitation.  For a list of cover letters, please call `ListCoverLetters`.",
					"type": "string",
					"example": "STANDARD_REQUEST"
				},
				"exposureZones": {
					"description": "You may optionally specify a list of exposure zones to request in this CertExpress invitation.  If you list\r\nmore than one exposure zone, the customer will be prompted to provide an exemption certificate for each one.\r\nIf you do not provide a list of exposure zones, the customer will be prompted to select an exposure zone.\r\n            \r\nFor a list of available exposure zones, please call `ListCertificateExposureZones`.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					},
					"example": [89]
				},
				"exemptReasons": {
					"description": "You may optionally specify a list of exemption reasons to pre-populate in this CertExpress invitation.\r\nIf you list exemption reasons, the customer will have part of their form already filled in when they visit\r\nthe CertExpress website.\r\n            \r\nFor a list of available exemption reasons, please call `ListCertificateExemptReasons`.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					},
					"example": [70]
				},
				"deliveryMethod": {
					"description": "Specify the type of invitation.  CertExpress invitations can be delivered via email, web link, or\r\nfacsimile.\r\n            \r\n* If you specify `Email`, the invitation will be delivered via email.  Please ask the customer to ensure that\r\n* If you specify `Fax`, the invitation will be sent via fax to the customer's fax number on file.\r\n* If you specify `Download`, the invitation will be prepared as a web link that you can display to the customer.",
					"enum": ["Email", "Fax", "Download"],
					"type": "string",
					"example": "Download",
					"x-enum-metadata": {
						"name": "CertificateRequestDeliveryMethod",
						"values": [
							{
								"name": "Email",
								"value": 1
							},
							{
								"name": "Fax",
								"value": 2
							},
							{
								"name": "Download",
								"value": 3
							}
						]
					}
				}
			},
			"example": {
				"recipient": "bob@example.org",
				"coverLetterTitle": "STANDARD_REQUEST",
				"exposureZones": [89],
				"exemptReasons": [70],
				"deliveryMethod": "Download"
			}
		},
		"CertExpressInvitationStatusModel": {
			"description": "Represent what is the current status of certificate request",
			"type": "object",
			"properties": {
				"status": {
					"description": "The status of the CertExpress invitation for this customer.  If this status says",
					"enum": ["InProgress", "Ready"],
					"type": "string",
					"example": "InProgress",
					"x-enum-metadata": {
						"name": "CertExpressInvitationStatus",
						"values": [
							{
								"name": "InProgress",
								"value": 0
							},
							{
								"name": "Ready",
								"value": 1
							}
						]
					}
				},
				"invitation": {
					"$ref": "#/definitions/CertExpressInvitationModel",
					"description": "The CertExpress invitation for the customer.  If you specified an email address in the invitation\r\nrequest, this invitation will be sent via email.  Otherwise, you are expected to direct the customer\r\nusing a hyperlink directly in your application.",
					"example": {
						"customerCode": "ABC"
					}
				}
			},
			"example": {
				"status": "InProgress",
				"invitation": {
					"customerCode": "ABC"
				}
			}
		},
		"CertExpressInvitationModel": {
			"description": "Represents an invitation for a customer to use CertExpress to self-report their own certificates.\r\nThis invitation is delivered by your choice of method, or you can present a hyperlink to the user\r\ndirectly in your connector.  Your customer will be redirected to https://app.certexpress.com/ where\r\nthey can follow a step-by-step guide to enter information about their exemption certificates.  The\r\ncertificates entered will be recorded and automatically linked to their customer record.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "A unique ID number representing this CertExpress invitation.",
					"type": "integer",
					"readOnly": true
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the AvaTax company that sent this invitation.",
					"type": "integer"
				},
				"recipient": {
					"description": "The email address to which this invitation was sent.  If this invitation was presented as a weblink, this value will be null.",
					"type": "string"
				},
				"customerCode": {
					"description": "The unique code of the customer that received this invitation.\r\nNote: This field is case sensitive. To have exemption certificates apply, this value should\r\nbe the same as the one passed to create a customer.",
					"type": "string",
					"example": "ABC"
				},
				"customer": {
					"$ref": "#/definitions/CustomerModel",
					"description": "The customer who received this invitation.",
					"readOnly": true
				},
				"coverLetter": {
					"$ref": "#/definitions/CoverLetterModel",
					"description": "The attached cover letter object to this request.",
					"readOnly": true
				},
				"emailStatus": {
					"description": "The status of the emails associated with this invitation.  If this invitation was sent via email,\r\nthis value will change to `Sent` when the email message has been sent.",
					"type": "string",
					"readOnly": true
				},
				"coverLettersOnly": {
					"description": "True if this invitation contained a cover letter only.",
					"type": "boolean",
					"readOnly": true
				},
				"exposureZones": {
					"description": "When an invitation is sent, it contains a list of exposure zones for which the customer is invited to upload\r\ntheir exemption certificates.  This list contains the ID numbers of the exposure zones identified.\r\n            \r\nFor a list of exposure zones, please call `ListCertificateExposureZones`.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"exemptReasons": {
					"description": "The list of exemption reasons identified by this CertExpress invitation.\r\n            \r\nFor a list of reason codes, please call `ListCertificateExemptReasons`.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"deliveryMethod": {
					"description": "Indicates the method that was used to deliver this CertExpress invitation.",
					"enum": ["Email", "Fax", "Download"],
					"type": "string",
					"x-enum-metadata": {
						"name": "CertificateRequestDeliveryMethod",
						"values": [
							{
								"name": "Email",
								"value": 1
							},
							{
								"name": "Fax",
								"value": 2
							},
							{
								"name": "Download",
								"value": 3
							}
						]
					}
				},
				"message": {
					"description": "The custom message delivered with this invitation.",
					"type": "string"
				},
				"date": {
					"format": "date-time",
					"description": "The date of the invitation.",
					"type": "string"
				},
				"requestLink": {
					"description": "The web link (URL) that a customer can click on or visit to begin using this CertExpress invitation.\r\n            \r\nThis value is only usable if the status of this invitation is `Ready` and the request was created with type `Download`.\r\nNOTE: This link usually takes a few minutes to be available.",
					"type": "string"
				}
			},
			"example": {
				"customerCode": "ABC"
			}
		},
		"CustomerModel": {
			"description": "Represents a customer to whom you sell products and/or services.",
			"required": ["companyId", "customerCode", "name", "line1", "city", "postalCode", "country", "region"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "Unique ID number of this customer.",
					"type": "integer",
					"readOnly": true
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the AvaTax company that recorded this customer.",
					"type": "integer",
					"example": 0
				},
				"customerCode": {
					"description": "The unique code identifying this customer.  Must be unique within your company.\r\n            \r\nThis code should be used in the `customerCode` field of any call that creates or adjusts a transaction\r\nin order to ensure that all exemptions that apply to this customer are correctly considered.\r\n            \r\nNote: This field is case sensitive.",
					"type": "string",
					"example": "b1df15ce-8d6d-4bf4-a90b-119370fb8970"
				},
				"alternateId": {
					"description": "A customer-configurable alternate ID number for this customer.  You may set this value to match any\r\nother system that would like to reference this customer record.",
					"type": "string",
					"example": "987654321"
				},
				"name": {
					"description": "A friendly name identifying this customer.",
					"type": "string",
					"example": "Dr. Bob Example"
				},
				"attnName": {
					"description": "Indicates the \"Attn:\" component of the address for this customer, if this customer requires mailings to be shipped\r\nto the attention of a specific person or department name.",
					"type": "string",
					"example": "Attn: Receiving"
				},
				"line1": {
					"description": "First line of the street address of this customer.",
					"type": "string",
					"example": "645 Main Street"
				},
				"line2": {
					"description": "Second line of the street address of this customer.",
					"type": "string"
				},
				"city": {
					"description": "City component of the street address of this customer.",
					"type": "string",
					"example": "Irvine"
				},
				"postalCode": {
					"description": "Postal Code / Zip Code component of the address of this customer.",
					"type": "string",
					"example": "92614"
				},
				"phoneNumber": {
					"description": "The main phone number for this customer.",
					"type": "string",
					"example": "(949) 555-1212"
				},
				"faxNumber": {
					"description": "The fax phone number for this customer, if any.",
					"type": "string",
					"example": "949.555.1213"
				},
				"emailAddress": {
					"description": "The main email address for this customer.",
					"type": "string",
					"example": "dr.bob.example@example.org"
				},
				"contactName": {
					"description": "The name of the main contact person for this customer.",
					"type": "string",
					"example": "Alice Smith"
				},
				"lastTransaction": {
					"format": "date-time",
					"description": "Date when this customer last executed a transaction.",
					"type": "string",
					"readOnly": true,
					"example": "2008-10-08T00:00:00"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "ISO 3166 code identifying the region within the country.\r\nTwo and three character ISO 3166 region codes.\r\n            \r\nFor a full list of all supported codes, please see the Definitions API `ListRegions`.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "CA"
				},
				"isBill": {
					"description": "True if this customer record is specifically used for bill-to purposes.",
					"type": "boolean"
				},
				"isShip": {
					"description": "True if this customer record is specifically used for ship-to purposes.",
					"type": "boolean"
				},
				"taxpayerIdNumber": {
					"description": "For customers in the United States, this field is the federal taxpayer ID number.  For businesses, this is\r\na Federal Employer Identification Number.  For individuals, this will be a Social Security Number.",
					"type": "string"
				},
				"certificates": {
					"description": "A list of exemption certficates that apply to this customer.  You can fetch this data by specifying\r\n`$include=certificates` when calling a customer fetch API.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CertificateModel"
					}
				},
				"customFields": {
					"description": "A list of custom fields defined on this customer.\r\n            \r\nFor more information about custom fields, see the [Avalara Help Center article about custom fields](https://help.avalara.com/0021_Avalara_CertCapture/All_About_CertCapture/Edit_or_Remove_Details_about_Customers).",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomFieldModel"
					}
				},
				"exposureZones": {
					"description": "A list of exposure zones where you do business with this customer.\r\n            \r\nTo keep track of certificates that are needed for each customer, set this value to a list of all exposure zones where you\r\nsell products to this customer.  You can find a list of exposure zones by calling `ListExposureZones`.\r\n            \r\nThis field is often called \"Ship-To States\" or \"Ship-To Zones\", since it generally refers to locations where you ship products\r\nwhen this customer makes a purchase.\r\n            \r\nThis field is useful for audit purposes since it helps you ensure you have the necessary certificates for each customer.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExposureZoneModel"
					},
					"example": [
						{
							"name": "Washington"
						}
					]
				},
				"shipTos": {
					"description": "A list of ship-to customer records that are connected to this bill-to customer.\r\n            \r\nCustomer records represent businesses or individuals who can provide exemption certificates.  Some customers\r\nmay have certificates that are linked to their shipping address or their billing address.  To group these\r\ncustomer records together, you may link multiple bill-to and ship-to addresses together to represent a single\r\nentity that has multiple different addresses of different kinds.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerModel"
					}
				},
				"attributes": {
					"description": "A list of attributes that apply to this customer.\r\n            \r\nYou can fetch this data by specifying `$include=attributes` when calling a customer fetch API.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerAttributeModel"
					}
				}
			},
			"example": {
				"companyId": 0,
				"customerCode": "b1df15ce-8d6d-4bf4-a90b-119370fb8970",
				"alternateId": "987654321",
				"name": "Dr. Bob Example",
				"attnName": "Attn: Receiving",
				"line1": "645 Main Street",
				"city": "Irvine",
				"postalCode": "92614",
				"phoneNumber": "(949) 555-1212",
				"faxNumber": "949.555.1213",
				"emailAddress": "dr.bob.example@example.org",
				"contactName": "Alice Smith",
				"lastTransaction": "2008-10-08T00:00:00",
				"country": "US",
				"region": "CA",
				"exposureZones": [
					{
						"name": "Washington"
					}
				]
			}
		},
		"CoverLetterModel": {
			"description": "The CoverLetter model represents a message sent along with an invitation to use CertExpress to\r\nupload certificates.  An invitation allows customers to use CertExpress to upload their exemption\r\ncertificates directly; this cover letter explains why the invitation was sent.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "A unique ID number representing a cover letter sent with a CertExpress invitation.",
					"type": "integer",
					"readOnly": true
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the AvaTax company that received this certificate.",
					"type": "integer"
				},
				"title": {
					"description": "The title used when sending the cover letter.",
					"type": "string",
					"example": "STANDARD_REQUEST"
				},
				"subject": {
					"description": "The subject message used when sending the cover letter via email.",
					"type": "string",
					"example": "Please submit your exemption certificate"
				},
				"description": {
					"description": "A full description of the cover letter's contents and message.",
					"type": "string",
					"example": "Please upload your certificate to CertCapture"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true,
					"example": "0001-01-01T00:00:00"
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true,
					"example": "0001-01-01T00:00:00"
				},
				"active": {
					"description": "Is this cover letter active",
					"type": "boolean"
				},
				"pageCount": {
					"format": "int32",
					"description": "How many pages this cover letter encompasses",
					"type": "integer",
					"readOnly": true
				},
				"templateFilename": {
					"description": "The file name of the cover letter template",
					"type": "string"
				},
				"version": {
					"format": "int32",
					"description": "The version number of the template",
					"type": "integer",
					"example": 0
				}
			},
			"example": {
				"title": "STANDARD_REQUEST",
				"subject": "Please submit your exemption certificate",
				"description": "Please upload your certificate to CertCapture",
				"createdDate": "0001-01-01T00:00:00",
				"modifiedDate": "0001-01-01T00:00:00",
				"version": 0
			}
		},
		"CertificateModel": {
			"description": "A certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please\r\nlog onto the administrative website for the product you purchased.",
			"required": ["signedDate", "expirationDate", "exemptionReason", "exposureZone"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "Unique ID number of this certificate.",
					"type": "integer",
					"example": 0
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the AvaTax company that recorded this certificate.",
					"type": "integer"
				},
				"signedDate": {
					"format": "date",
					"description": "The date when this certificate was signed.",
					"type": "string",
					"example": "2016-02-01T00:00:00"
				},
				"expirationDate": {
					"format": "date",
					"description": "Expiration date when this certificate will no longer be valid.",
					"type": "string",
					"example": "2020-12-31T00:00:00"
				},
				"filename": {
					"description": "File name for the image of this certificate.\r\n            \r\nWhen creating a certificate, if you do not upload a PDF or JPG image, you must specify the filename\r\nof the certificate as it is tracked in your repository.\r\n            \r\nTo create a certificate, you must provide one of the following fields: either a `filename`, a `pdf` file,\r\nor an array of JPG `pages`.  The API will return an error if you omit these fields or if you attempt to\r\nput values in more than one of them.",
					"type": "string",
					"example": "c39777bb-9e05-429a-a519-a18727dd8537"
				},
				"documentExists": {
					"description": "This value is true if there exists scanned PDF copy of this certificate or the PDF version of the form that the customer filled via the CertCapture wizard on S3 bucket.",
					"type": "boolean",
					"readOnly": true,
					"example": false
				},
				"valid": {
					"description": "True if this certificate is marked as valid.  A valid certificate can be considered for exemption purposes.\r\nWhen a certificate is marked invalid, it will no longer be considered when calculating exemption for\r\na customer.",
					"type": "boolean",
					"example": true
				},
				"verified": {
					"description": "This value is true if the certificate has gone through the certificate validation process.\r\nFor more information on the certificate validation process, please see the Avalara Help Center.",
					"type": "boolean",
					"readOnly": true,
					"example": false
				},
				"exemptPercentage": {
					"format": "double",
					"description": "If this certificate provides exemption from transactional taxes, what percentage of the transaction\r\nis considered exempt?\r\n            \r\nFor a fully exempt certificate, this percentage should be 100.",
					"type": "number",
					"example": 0.0
				},
				"isSingleCertificate": {
					"description": "This value is true if this certificate is a single (or standalone) certificate.  This value is set\r\nduring the audit stage of the certificate validation process.",
					"type": "boolean",
					"readOnly": true,
					"example": false
				},
				"exemptionNumber": {
					"description": "Indicates the tax number passed in for the certificate.",
					"type": "string",
					"example": "Exempt-1234"
				},
				"validatedExemptionReason": {
					"$ref": "#/definitions/ExemptionReasonModel",
					"description": "The exemption reason that CertCapture audit/internal logic identifies for created certificate."
				},
				"exemptionReason": {
					"$ref": "#/definitions/ExemptionReasonModel",
					"description": "The exemption reason associated with this certificate.  For example, the reason code for exemption\r\nfor purposes of resale is `RESALE`.\r\n            \r\nFor a list of exemption reasons, call `ListCertificateExemptReasons`.",
					"example": {
						"name": "RESALE"
					}
				},
				"status": {
					"description": "The status of the certificate",
					"type": "string",
					"readOnly": true
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date/time when this record was created.",
					"type": "string",
					"example": "2020-07-30T22:11:29.6316311Z"
				},
				"modifiedDate": {
					"format": "date",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"example": "2020-07-30T22:11:29.631631Z"
				},
				"pageCount": {
					"format": "int32",
					"description": "Number of pages contained within this certificate.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"customers": {
					"description": "A list of customers to which this certificate applies.  You can fetch this data by specifying\r\n`$include=customers` when calling a certificate fetch API.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerModel"
					},
					"example": [
						{
							"companyId": 0,
							"customerCode": "45f14952-e198-489a-8814-813f73db3756",
							"alternateId": "987654321",
							"name": "Dr. Bob Example",
							"attnName": "Attn: Receiving",
							"line1": "645 Main Street",
							"city": "Irvine",
							"postalCode": "92614",
							"phoneNumber": "(949) 555-1212",
							"faxNumber": "949.555.1213",
							"emailAddress": "dr.bob.example@example.org",
							"contactName": "Alice Smith",
							"lastTransaction": "2008-10-08T00:00:00",
							"country": "US",
							"region": "CA",
							"exposureZones": [
								{
									"name": "Washington"
								}
							]
						},
						{
							"companyId": 0,
							"customerCode": "f0cf1efd-b894-46b8-9ca4-e49baf0cb423",
							"alternateId": "987654321",
							"name": "Dr. Bob Example",
							"attnName": "Attn: Receiving",
							"line1": "645 Main Street",
							"city": "Irvine",
							"postalCode": "92614",
							"phoneNumber": "(949) 555-1212",
							"faxNumber": "949.555.1213",
							"emailAddress": "dr.bob.example@example.org",
							"contactName": "Alice Smith",
							"lastTransaction": "2008-10-08T00:00:00",
							"country": "US",
							"region": "CA",
							"exposureZones": [
								{
									"name": "Washington"
								}
							]
						}
					]
				},
				"poNumbers": {
					"description": "A list of purchase order numbers that are valid for use with this certificate.\r\n            \r\nIf this certificate is applicable for all purchase order numbers, this field will be empty.\r\n            \r\nYou can fetch this data by specifying `$include=po_numbers` when calling a certificate fetch API.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/PoNumberModel"
					}
				},
				"exposureZone": {
					"$ref": "#/definitions/ExposureZoneModel",
					"description": "The exposure zone where this certificate is valid.",
					"example": {
						"name": "Washington"
					}
				},
				"attributes": {
					"description": "A list of certificate attributes that apply to this certificate.\r\n            \r\nYou can fetch this data by specifying `$include=attributes` when calling a certificate fetch API.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CertificateAttributeModel"
					}
				},
				"ecmsId": {
					"format": "int32",
					"description": "The unique ID number of current AvaTax Exemption Certificate that refers this certificate.",
					"type": "integer"
				},
				"ecmsStatus": {
					"description": "The status of current AvaTax Exemption Certificate  that refers to this certificate.",
					"type": "string"
				},
				"pdf": {
					"description": "This field is available for input only.  To retrieve the image after creation, use the\r\n`DownloadCertificateImage` API.\r\n            \r\nWhen creating a certificate, you may optionally provide a PDF image in Base64 URLEncoded format.\r\nPDFs are automatically parsed into individual page JPG images and can be retrieved back\r\nlater as either the original PDF or the individual pages.\r\n            \r\nTo create a certificate, you must provide one of the following fields: either a `filename`, a `pdf` file,\r\nor an array of JPG `pages`.  The API will return an error if you omit these fields or if you attempt to\r\nput values in more than one of them.",
					"type": "string"
				},
				"pages": {
					"description": "This field is available for input only.  To retrieve the image after creation, use the\r\n`DownloadCertificateImage` API.\r\n            \r\nWhen creating a certificate, you may optionally provide a list of JPG images, one per page, in\r\nBase64 URLEncoded format.  These JPG images are automatically combined into a single downloadable\r\nPDF and can be retrieved back later as either the original JPG images or the combined PDF.\r\n            \r\nTo create a certificate, you must provide one of the following fields: either a `filename`, a `pdf` file,\r\nor an array of JPG `pages`.  The API will return an error if you omit these fields or if you attempt to\r\nput values in more than one of them.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"example": {
				"id": 0,
				"signedDate": "2016-02-01",
				"expirationDate": "2020-12-31",
				"filename": "c39777bb-9e05-429a-a519-a18727dd8537",
				"documentExists": false,
				"valid": true,
				"verified": false,
				"exemptPercentage": 0.0,
				"isSingleCertificate": false,
				"exemptionNumber": "Exempt-1234",
				"exemptionReason": {
					"name": "RESALE"
				},
				"createdDate": "2020-07-30T22:11:29.6316311Z",
				"modifiedDate": "2020-07-30",
				"pageCount": 0,
				"customers": [
					{
						"companyId": 0,
						"customerCode": "45f14952-e198-489a-8814-813f73db3756",
						"alternateId": "987654321",
						"name": "Dr. Bob Example",
						"attnName": "Attn: Receiving",
						"line1": "645 Main Street",
						"city": "Irvine",
						"postalCode": "92614",
						"phoneNumber": "(949) 555-1212",
						"faxNumber": "949.555.1213",
						"emailAddress": "dr.bob.example@example.org",
						"contactName": "Alice Smith",
						"lastTransaction": "2008-10-08T00:00:00",
						"country": "US",
						"region": "CA",
						"exposureZones": [
							{
								"name": "Washington"
							}
						]
					},
					{
						"companyId": 0,
						"customerCode": "f0cf1efd-b894-46b8-9ca4-e49baf0cb423",
						"alternateId": "987654321",
						"name": "Dr. Bob Example",
						"attnName": "Attn: Receiving",
						"line1": "645 Main Street",
						"city": "Irvine",
						"postalCode": "92614",
						"phoneNumber": "(949) 555-1212",
						"faxNumber": "949.555.1213",
						"emailAddress": "dr.bob.example@example.org",
						"contactName": "Alice Smith",
						"lastTransaction": "2008-10-08T00:00:00",
						"country": "US",
						"region": "CA",
						"exposureZones": [
							{
								"name": "Washington"
							}
						]
					}
				],
				"exposureZone": {
					"name": "Washington"
				}
			}
		},
		"CustomFieldModel": {
			"description": "A custom field provides extra information about a customer or certificate.\r\n            \r\nCustom fields are provided to permit you to store additional information about an exemption certificate or customer.  They are available to\r\nsupport additional use cases beyond that supported directly by Avalara's exemption certificate software.\r\n            \r\nFor more information about custom fields, see the [Avalara Help Center article about custom fields](https://help.avalara.com/0021_Avalara_CertCapture/All_About_CertCapture/Edit_or_Remove_Details_about_Customers).",
			"type": "object",
			"properties": {
				"name": {
					"description": "The name of the custom field.",
					"type": "string",
					"example": "Customer Type"
				},
				"value": {
					"description": "The value of the custom field.",
					"type": "string",
					"example": "my customer type"
				}
			},
			"example": {
				"name": "Customer Type",
				"value": "my customer type"
			}
		},
		"ExposureZoneModel": {
			"description": "Information about a physical area or zone in which a certificate can apply.\r\nAn exposure zone for an exemption certificate will generally be a tax authority such\r\nas a state, country, or local government entity.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "A unique ID number representing this exposure zone.",
					"type": "integer",
					"readOnly": true
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the AvaTax company that recorded this customer.",
					"type": "integer"
				},
				"name": {
					"description": "The short name of this exposure zone, suitable for use in a drop-down list.",
					"type": "string",
					"example": "Washington"
				},
				"tag": {
					"description": "A tag indicating",
					"type": "string"
				},
				"description": {
					"description": "A more complete description of this exposure zone, suitable for use as a tooltip or help text.",
					"type": "string"
				},
				"created": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string"
				},
				"region": {
					"description": "Two or three character ISO 3166 region, province, or state name of this exposure zone.",
					"type": "string",
					"readOnly": true
				},
				"country": {
					"description": "Two character ISO 3166 county code for the country component of this exposure zone.",
					"type": "string",
					"readOnly": true
				}
			},
			"example": {
				"name": "Washington"
			}
		},
		"CustomerAttributeModel": {
			"description": "A Customer's linked attribute denoting what features applied to the customer. A customer can\r\nbe linked to multiple customer attributes and vice versa.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "A unique ID number representing this attribute.",
					"type": "integer",
					"example": 1
				},
				"name": {
					"description": "A friendly readable name for this attribute.",
					"type": "string",
					"example": "ADDRESS CHANGE NEEDED"
				},
				"description": {
					"description": "A full help text description of the attribute.",
					"type": "string",
					"example": "Customer address change is needed."
				},
				"isSystemCode": {
					"description": "This value is true if this is a system-defined attribute.  System-defined attributes\r\ncannot be modified or deleted on the CertCapture website.",
					"type": "boolean",
					"example": false
				},
				"isNonDeliver": {
					"description": "A flag denotes that future exemption certificate request won't be mailed to the customer",
					"type": "boolean",
					"example": true
				},
				"isChangeable": {
					"description": "A flag denotes that this attribute can't be removed/added to a customer record",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"id": 1,
				"name": "ADDRESS CHANGE NEEDED",
				"description": "Customer address change is needed.",
				"isSystemCode": false,
				"isNonDeliver": true,
				"isChangeable": true
			}
		},
		"ExemptionReasonModel": {
			"description": "An exemption reason defines why a certificate allows a customer to be exempt\r\nfor purposes of tax calculation.  For a full list of defined exemption reasons,\r\nplease call the `ListCertificateExemptionReasons` API.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "A unique ID number representing this exemption reason.",
					"type": "integer"
				},
				"name": {
					"description": "A friendly name describing this exemption reason.",
					"type": "string",
					"example": "EXPOSURE"
				}
			},
			"example": {
				"name": "EXPOSURE"
			}
		},
		"PoNumberModel": {
			"description": "Represents a purchase order number for a transaction",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "Unique ID number",
					"type": "integer",
					"readOnly": true,
					"example": 1234
				},
				"poNumber": {
					"description": "Purchase order number.",
					"type": "string",
					"example": "test"
				}
			},
			"example": {
				"id": 1234,
				"poNumber": "test"
			}
		},
		"CertificateAttributeModel": {
			"description": "A certificate attribute can be thought of as a feature or flag that is applied to a certificate.\r\nA single certificate can be linked to zero, one, or many certificate attributes.  The full list of\r\nattributes can be obtained by calling the `ListCertificateAttributes` API.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "A unique ID number representing this certificate attribute.",
					"type": "integer",
					"example": 0
				},
				"name": {
					"description": "A friendly readable name for this certificate attribute.",
					"type": "string",
					"example": "DIRECT PAY"
				},
				"description": {
					"description": "A full help text description of the certificate attribute.",
					"type": "string"
				},
				"isSystemCode": {
					"description": "This value is true if this is a system-defined certificate attribute.  System-defined attributes\r\ncannot be modified or deleted on the CertCapture website.",
					"type": "boolean",
					"example": false
				}
			},
			"example": {
				"id": 0,
				"name": "DIRECT PAY",
				"isSystemCode": false
			}
		},
		"FetchResult[CertExpressInvitationModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CertExpressInvitationModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"ProvisionStatusModel": {
			"description": "Contains information about a company's exemption certificate status.\r\n            \r\nThis model can be used to determine if your company is able to use the Customers, Certificates, and\r\nCertExpressInvites APIs within AvaTax.",
			"type": "object",
			"properties": {
				"status": {
					"description": "The status of exemption certificate setup for this company.\r\n            \r\nIf this value is `Finished`, this company will then be able to use the Customers, Certificates, and\r\nCertExpressInvites APIs within AvaTax.",
					"enum": ["Provisioned", "InProgress", "NotProvisioned"],
					"type": "string",
					"example": "Provisioned",
					"x-enum-metadata": {
						"name": "CertCaptureProvisionStatus",
						"values": [
							{
								"name": "Provisioned",
								"value": 0
							},
							{
								"name": "InProgress",
								"value": 1
							},
							{
								"name": "NotProvisioned",
								"value": 2
							}
						]
					}
				},
				"accountId": {
					"format": "int32",
					"description": "The accountId of the company represented by this status",
					"type": "integer",
					"example": 12345
				},
				"companyId": {
					"format": "int32",
					"description": "The AvaTax company represented by this status",
					"type": "integer",
					"example": 6789
				}
			},
			"example": {
				"status": "Provisioned",
				"accountId": 12345,
				"companyId": 6789
			}
		},
		"FetchResult[CertificateModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CertificateModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"LinkCustomersModel": {
			"description": "Represents a customer to whom you sell products and/or services.",
			"type": "object",
			"properties": {
				"customers": {
					"description": "An array of customerCodes that are exempted by this certificate",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["123456789"]
				}
			},
			"example": {
				"customers": ["123456789"]
			}
		},
		"FetchResult[CustomerModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[CertificateAttributeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CertificateAttributeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[MrsCompanyModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/MrsCompanyModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"MrsCompanyModel": {
			"description": "A company and account",
			"type": "object",
			"properties": {
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of this company.",
					"type": "integer",
					"example": 12345
				},
				"companyName": {
					"description": "The name of this company, as shown to customers.",
					"type": "string",
					"example": "Default Company"
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the account this company belongs to.",
					"type": "integer",
					"example": 123456789
				},
				"accountName": {
					"description": "The name of this account, as shown to customers.",
					"type": "string",
					"example": "Default Account"
				},
				"tin": {
					"description": "The taxpayer identification number for the company",
					"type": "string"
				},
				"companyCode": {
					"description": "The company code for the company",
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string"
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer"
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string"
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer"
				}
			},
			"example": {
				"companyId": 12345,
				"companyName": "Default Company",
				"accountId": 123456789,
				"accountName": "Default Account"
			}
		},
		"CompanyInitializationModel": {
			"description": "Company Initialization Model",
			"required": ["name", "line1", "city", "region", "postalCode", "country", "firstName", "lastName", "email", "phoneNumber"],
			"type": "object",
			"properties": {
				"name": {
					"description": "Company Name",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob's Artisan Pottery"
				},
				"companyCode": {
					"description": "Company Code - used to distinguish between companies within your accounting system",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "DEFAULT"
				},
				"vatRegistrationId": {
					"description": "Vat Registration Id - leave blank if not known.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"taxpayerIdNumber": {
					"description": "United States Taxpayer ID number, usually your Employer Identification Number if you are a business or your\r\nSocial Security Number if you are an individual.\r\nThis value is required if the address provided is inside the US and if you subscribed to the Avalara Managed Returns or SST Certified Service Provider service. Otherwise it is optional.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string",
					"example": "12-3456789"
				},
				"isFein": {
					"description": "Set this field to true if the taxPayerIdNumber is a FEIN.",
					"type": "boolean"
				},
				"line1": {
					"description": "Address Line1",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "2000 Main Street"
				},
				"line2": {
					"description": "Line2",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "Line3",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "City",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"postalCode": {
					"description": "Postal Code",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "92614"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"firstName": {
					"description": "First Name",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob"
				},
				"lastName": {
					"description": "Last Name",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Example"
				},
				"title": {
					"description": "Title",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Owner"
				},
				"email": {
					"description": "Email",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "bob@example.org"
				},
				"phoneNumber": {
					"description": "Phone Number",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "714 555-2121"
				},
				"mobileNumber": {
					"description": "Mobile Number",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "714 555-1212"
				},
				"faxNumber": {
					"description": "Fax Number",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"parentCompanyId": {
					"format": "int32",
					"description": "Parent Company ID",
					"type": "integer"
				}
			},
			"example": {
				"name": "Bob's Artisan Pottery",
				"companyCode": "DEFAULT",
				"taxpayerIdNumber": "12-3456789",
				"isFein": false,
				"line1": "2000 Main Street",
				"city": "Irvine",
				"region": "CA",
				"postalCode": "92614",
				"country": "US",
				"firstName": "Bob",
				"lastName": "Example",
				"title": "Owner",
				"email": "bob@example.org",
				"phoneNumber": "714 555-2121",
				"mobileNumber": "714 555-1212"
			}
		},
		"FundingStatusModel": {
			"description": "Status of an Avalara Managed Returns funding configuration for a company",
			"type": "object",
			"properties": {
				"requestId": {
					"format": "int64",
					"description": "The unique ID number of this funding request",
					"type": "integer"
				},
				"subledgerProfileID": {
					"format": "int32",
					"description": "SubledgerProfileID",
					"type": "integer"
				},
				"companyID": {
					"description": "CompanyID",
					"type": "string"
				},
				"domain": {
					"description": "Domain",
					"type": "string"
				},
				"recipient": {
					"description": "Recipient",
					"type": "string"
				},
				"sender": {
					"description": "Sender",
					"type": "string"
				},
				"documentKey": {
					"description": "DocumentKey",
					"type": "string"
				},
				"documentType": {
					"description": "DocumentType",
					"type": "string"
				},
				"documentName": {
					"description": "DocumentName",
					"type": "string"
				},
				"methodReturn": {
					"$ref": "#/definitions/FundingESignMethodReturn",
					"description": "MethodReturn"
				},
				"status": {
					"description": "Status",
					"type": "string"
				},
				"errorMessage": {
					"description": "ErrorMessage",
					"type": "string"
				},
				"lastPolled": {
					"format": "date-time",
					"description": "LastPolled",
					"type": "string"
				},
				"lastSigned": {
					"format": "date-time",
					"description": "LastSigned",
					"type": "string"
				},
				"lastActivated": {
					"format": "date-time",
					"description": "LastActivated",
					"type": "string"
				},
				"templateRequestId": {
					"format": "int64",
					"description": "TemplateRequestId",
					"type": "integer"
				}
			},
			"example": {
				"requestId": 12345,
				"subledgerProfileID": 12345,
				"companyID": "123456",
				"domain": "AvaTax15",
				"recipient": "bob@example.org",
				"sender": "treasury@avalara.com",
				"documentKey": "RTdIy3AAABLblqZhBCV9kul4F1qC -",
				"documentType": "ACH",
				"documentName": "New Customer - Avalara Returns Funding Power of Attorney",
				"methodReturn": {
					"javaScriptReady": false
				},
				"status": "Expired",
				"lastPolled": "2016-01-01T20:16:17",
				"lastActivated": "2016-01-01T19:16:17"
			}
		},
		"FundingESignMethodReturn": {
			"description": "Represents the current status of a funding ESign method",
			"type": "object",
			"properties": {
				"method": {
					"description": "Method",
					"type": "string"
				},
				"javaScriptReady": {
					"description": "JavaScriptReady",
					"type": "boolean"
				},
				"javaScript": {
					"description": "The actual javascript to use to render this object",
					"type": "string"
				}
			},
			"example": {
				"method": "",
				"javaScriptReady": false
			}
		},
		"FundingConfigurationModel": {
			"description": "Status of an Avalara Managed Returns funding configuration for a company",
			"type": "object",
			"properties": {
				"companyId": {
					"format": "int32",
					"description": "CompanyID",
					"type": "integer",
					"example": 2793
				},
				"systemType": {
					"description": "Domain",
					"type": "string",
					"example": "AvaTax15"
				},
				"currency": {
					"description": "Recipient",
					"type": "string",
					"example": "USD"
				},
				"isFundingSetup": {
					"description": "Sender",
					"type": "boolean",
					"example": true
				},
				"fundingMethod": {
					"description": "DocumentKey",
					"type": "string",
					"example": "ACH Pull"
				},
				"lastUpdated": {
					"format": "date-time",
					"description": "LastPolled",
					"type": "string",
					"example": "2020-07-30T22:11:29.7910264Z"
				}
			},
			"example": {
				"companyId": 2793,
				"systemType": "AvaTax15",
				"currency": "USD",
				"isFundingSetup": true,
				"fundingMethod": "ACH Pull",
				"lastUpdated": "2020-07-30T22:11:29.7910264Z"
			}
		},
		"FundingInitiateModel": {
			"description": "",
			"required": ["fundingEmailRecipient"],
			"type": "object",
			"properties": {
				"requestEmail": {
					"description": "Set this value to true to request an email to the recipient",
					"type": "boolean",
					"example": true
				},
				"fundingEmailRecipient": {
					"description": "If you have requested an email for funding setup, this is the recipient who will receive an\r\nemail inviting them to setup funding configuration for Avalara Managed Returns.  The recipient can\r\nthen click on a link in the email and setup funding configuration for this company.",
					"type": "string",
					"example": "user@example.org"
				},
				"requestWidget": {
					"description": "Set this value to true to request an HTML-based funding widget that can be embedded within an\r\nexisting user interface.  A user can then interact with the HTML-based funding widget to set up\r\nfunding information for the company.",
					"type": "boolean"
				}
			},
			"example": {
				"requestEmail": true,
				"fundingEmailRecipient": "user@example.org"
			}
		},
		"CompanyConfigurationModel": {
			"description": "Represents one configuration setting for this company",
			"required": ["category", "name"],
			"type": "object",
			"properties": {
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the account to which this setting applies",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"category": {
					"description": "The category of the configuration setting.  Avalara-defined categories include `AddressServiceConfig` and `TaxServiceConfig`.  Customer-defined categories begin with `X-`.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "AvaCertServiceConfig"
				},
				"name": {
					"description": "The name of the configuration setting",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "AllowPending"
				},
				"value": {
					"description": "The current value of the configuration setting",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"example": "true"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"companyId": 0,
				"category": "AvaCertServiceConfig",
				"name": "AllowPending",
				"value": "true"
			}
		},
		"FilingStatusChangeModel": {
			"description": "Represents a change request for filing status for a company",
			"type": "object",
			"properties": {
				"requestedStatus": {
					"description": "Indicates the filing status you are requesting for this company",
					"enum": ["NoReporting", "NotYetFiling", "FilingRequested", "FirstFiling", "Active", "NotConfiguredForCompliance"],
					"type": "string",
					"example": "FirstFiling",
					"x-enum-metadata": {
						"name": "CompanyFilingStatus",
						"values": [
							{
								"name": "NoReporting",
								"value": 0
							},
							{
								"name": "NotYetFiling",
								"value": 1
							},
							{
								"name": "FilingRequested",
								"value": 2
							},
							{
								"name": "FirstFiling",
								"value": 3
							},
							{
								"name": "Active",
								"value": 4
							},
							{
								"name": "NotConfiguredForCompliance",
								"value": 5
							}
						]
					}
				}
			},
			"example": {
				"requestedStatus": "FirstFiling"
			}
		},
		"FetchResult[CompanyParameterDetailModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyParameterDetailModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"ComplianceTaxRateModel": {
			"description": "The tax rate model.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique id of the rate.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"rate": {
					"format": "double",
					"description": "The tax rate.",
					"type": "number",
					"readOnly": true,
					"example": 0.05
				},
				"jurisdictionId": {
					"format": "int32",
					"description": "The id of the jurisdiction.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"taxRegionId": {
					"format": "int32",
					"description": "The id of the tax region.",
					"type": "integer",
					"readOnly": true,
					"example": 4574
				},
				"effectiveDate": {
					"format": "date",
					"description": "The date this rate is starts to take effect.",
					"type": "string",
					"readOnly": true,
					"example": "1900-01-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "The date this rate is no longer active.",
					"type": "string",
					"readOnly": true,
					"example": "2011-04-30T00:00:00"
				},
				"rateTypeId": {
					"description": "The rate type.",
					"type": "string",
					"readOnly": true,
					"example": "F"
				},
				"taxTypeId": {
					"description": "The tax type.",
					"type": "string",
					"readOnly": true,
					"example": "S"
				},
				"taxName": {
					"description": "The name of the tax.",
					"type": "string",
					"readOnly": true,
					"example": "AL STATE TAX"
				},
				"unitOfBasisId": {
					"format": "int64",
					"description": "The unit of basis.",
					"type": "integer",
					"readOnly": true,
					"example": 13
				},
				"rateTypeTaxTypeMappingId": {
					"format": "int32",
					"description": "The rate type tax type mapping id.",
					"type": "integer",
					"readOnly": true,
					"example": 46
				}
			},
			"example": {
				"id": 1,
				"rate": 0.05,
				"jurisdictionId": 1,
				"taxRegionId": 4574,
				"effectiveDate": "1900-01-01",
				"endDate": "2011-04-30",
				"rateTypeId": "F",
				"taxTypeId": "S",
				"taxName": "AL STATE TAX",
				"unitOfBasisId": 13,
				"rateTypeTaxTypeMappingId": 46
			}
		},
		"TaxRegionModel": {
			"description": "The tax region model.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The id of the tax region.",
					"type": "integer",
					"readOnly": true,
					"example": 120
				},
				"code": {
					"description": "The code of the tax region.",
					"type": "string",
					"readOnly": true,
					"example": "2000000000"
				},
				"name": {
					"description": "The name of the tax region.",
					"type": "string",
					"readOnly": true,
					"example": "KANSAS"
				},
				"county": {
					"description": "The name of the county.",
					"type": "string",
					"readOnly": true
				},
				"city": {
					"description": "The name of the city.",
					"type": "string",
					"readOnly": true
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"readOnly": true,
					"example": "KS"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country of this jurisdiction.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"readOnly": true,
					"example": "US"
				},
				"serCode": {
					"description": "The ser code.",
					"type": "string",
					"readOnly": true
				},
				"signatureCode": {
					"description": "The tax region signature code.",
					"type": "string",
					"readOnly": true,
					"example": "AUIO"
				},
				"effectiveDate": {
					"format": "date",
					"description": "The date this tax region starts to take effect.",
					"type": "string",
					"readOnly": true,
					"example": "1900-01-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "The date this tax region stops to take effect.",
					"type": "string",
					"readOnly": true,
					"example": "2013-11-30T00:00:00"
				},
				"isAcm": {
					"description": "Is Acm flag.",
					"type": "boolean",
					"readOnly": true,
					"example": false
				},
				"isSst": {
					"description": "Is SST flag.",
					"type": "boolean",
					"readOnly": true,
					"example": false
				},
				"jurisdictions": {
					"description": "List of jurisdictions associated with this tax region.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/DenormalizedJurisModel"
					},
					"example": [
						{
							"effectiveDate": "1900-01-01T00:00:00",
							"endDate": "2013-11-30T00:00:00",
							"jurisCode": "20",
							"jurisdictionId": 20,
							"jurisType": "State",
							"jurisName": "KANSAS",
							"taxAuthorityId": 280
						}
					]
				}
			},
			"example": {
				"id": 120,
				"code": "2000000000",
				"name": "KANSAS",
				"region": "KS",
				"country": "US",
				"signatureCode": "AUIO",
				"effectiveDate": "1900-01-01",
				"endDate": "2013-11-30",
				"isAcm": false,
				"isSst": false,
				"jurisdictions": [
					{
						"effectiveDate": "1900-01-01T00:00:00",
						"endDate": "2013-11-30T00:00:00",
						"jurisCode": "20",
						"jurisdictionId": 20,
						"jurisType": "State",
						"jurisName": "KANSAS",
						"taxAuthorityId": 280
					}
				]
			}
		},
		"DenormalizedJurisModel": {
			"description": "Represents information about a single legal taxing jurisdiction within a specific Avalara tax region.",
			"type": "object",
			"properties": {
				"effectiveDate": {
					"format": "date-time",
					"description": "The jurisdiction's effective date.",
					"type": "string",
					"example": "1900-01-01T00:00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "The jurisdiction's end date.",
					"type": "string",
					"example": "2013-11-30T00:00:00"
				},
				"jurisCode": {
					"description": "The jurisdiction's code.",
					"type": "string",
					"example": "20"
				},
				"jurisdictionId": {
					"format": "int32",
					"description": "The jurisdiction's id.",
					"type": "integer",
					"example": 20
				},
				"jurisType": {
					"description": "The jurisdiction's type.",
					"enum": ["Country", "State", "County", "City", "Special"],
					"type": "string",
					"example": "State",
					"x-enum-metadata": {
						"name": "JurisdictionType",
						"values": [
							{
								"name": "Country",
								"value": 0
							},
							{
								"name": "State",
								"value": 1
							},
							{
								"name": "County",
								"value": 2
							},
							{
								"name": "City",
								"value": 3
							},
							{
								"name": "Special",
								"value": 4
							}
						]
					}
				},
				"jurisName": {
					"description": "The jurisdiction's name.",
					"type": "string",
					"example": "KANSAS"
				},
				"stateAssignedCode": {
					"description": "The state assigned code.",
					"type": "string"
				},
				"taxAuthorityId": {
					"format": "int32",
					"description": "The id of the tax authority.",
					"type": "integer",
					"example": 280
				},
				"state": {
					"description": "The jurisdiction's region.\r\nThis should exist on the TaxRegion, but in practice often doesn't.",
					"type": "string"
				},
				"country": {
					"description": "The jurisdiction's country.\r\nThis should exist on the TaxRegion, but in practice often doesn't.",
					"type": "string"
				},
				"county": {
					"description": "The jurisdiction's county.\r\nThis should exist on the TaxRegion, but in practice often doesn't.",
					"type": "string"
				},
				"city": {
					"description": "The jurisdiction's city.\r\nThis should exist on the TaxRegion, but in practice often doesn't.",
					"type": "string"
				}
			},
			"example": {
				"effectiveDate": "1900-01-01T00:00:00",
				"endDate": "2013-11-30T00:00:00",
				"jurisCode": "20",
				"jurisdictionId": 20,
				"jurisType": "State",
				"jurisName": "KANSAS",
				"taxAuthorityId": 280
			}
		},
		"TaxRegionJurisdictionModel": {
			"description": "The tax region jurisdiction model.",
			"type": "object",
			"properties": {
				"jurisdictionId": {
					"format": "int32",
					"description": "The id of the jurisdiction.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"taxRegionId": {
					"format": "int32",
					"description": "The id of the tax region.",
					"type": "integer",
					"readOnly": true,
					"example": 4556
				},
				"jurisdictionLevelId": {
					"format": "int32",
					"description": "The id of the jurisdiction level.",
					"type": "integer",
					"readOnly": true
				},
				"rockName": {
					"description": "The rock name.",
					"type": "string",
					"readOnly": true
				},
				"reportLevel": {
					"format": "int32",
					"description": "The report level.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"stateAssignedCode": {
					"description": "The state assigned code.",
					"type": "string",
					"readOnly": true
				},
				"taxAuthorityId": {
					"format": "int32",
					"description": "The id of the tax authority.",
					"type": "integer",
					"readOnly": true,
					"example": 271
				},
				"signatureCode": {
					"description": "The signature code.",
					"type": "string",
					"readOnly": true,
					"example": "AAKB"
				},
				"effectiveDate": {
					"format": "date",
					"description": "The date in which this tax region jurisdiction starts to take effect.",
					"type": "string",
					"readOnly": true,
					"example": "1900-01-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "The date in which this tax region jurisdiction stops to take effect.",
					"type": "string",
					"readOnly": true,
					"example": "2011-04-30T00:00:00"
				}
			},
			"example": {
				"jurisdictionId": 1,
				"taxRegionId": 4556,
				"reportLevel": 1,
				"taxAuthorityId": 271,
				"signatureCode": "AAKB",
				"effectiveDate": "1900-01-01",
				"endDate": "2011-04-30"
			}
		},
		"ComplianceJurisdictionModel": {
			"description": "Model for distinct jurisdictions.",
			"type": "object",
			"properties": {
				"taxRegionId": {
					"format": "int32",
					"description": "The id of the tax region.",
					"type": "integer",
					"readOnly": true,
					"example": 2062642
				},
				"stateAssignedCode": {
					"description": "The state assigned code for the jurisdiction.",
					"type": "string",
					"readOnly": true,
					"example": "001-0001-3 QUINCY"
				},
				"jurisdictionTypeId": {
					"description": "The type of the jurisdiction, indicating whether it is a country, state/region, city, for example.",
					"type": "string",
					"readOnly": true,
					"example": "CIT"
				},
				"name": {
					"description": "The name of the jurisdiction.",
					"type": "string",
					"readOnly": true,
					"example": "QUINCY"
				},
				"county": {
					"description": "The name of the county.",
					"type": "string",
					"readOnly": true,
					"example": "ADAMS"
				},
				"city": {
					"description": "The name of the city.",
					"type": "string",
					"readOnly": true,
					"example": "QUINCY"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"readOnly": true,
					"example": "IL"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country of this jurisdiction.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"readOnly": true,
					"example": "US"
				},
				"taxRegionName": {
					"description": "The name of the tax region.",
					"type": "string",
					"readOnly": true
				},
				"taxAuthorityId": {
					"format": "int32",
					"description": "The id of the tax authority.",
					"type": "integer",
					"example": 275
				},
				"rates": {
					"description": "Optional: A list of rates for this jurisdiction. To fetch this list, add the query string `?$include=TaxRates` to your URL.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ComplianceAggregatedTaxRateModel"
					},
					"example": [
						{
							"rate": 0.005,
							"stackRate": 0.005,
							"effectiveDate": "1900-01-01",
							"endDate": "9999-12-21",
							"taxTypeId": "S",
							"rateTypeId": "G"
						}
					]
				}
			},
			"example": {
				"taxRegionId": 2062642,
				"stateAssignedCode": "001-0001-3 QUINCY",
				"jurisdictionTypeId": "CIT",
				"name": "QUINCY",
				"county": "ADAMS",
				"city": "QUINCY",
				"region": "IL",
				"country": "US",
				"taxAuthorityId": 275,
				"rates": [
					{
						"rate": 0.005,
						"stackRate": 0.005,
						"effectiveDate": "1900-01-01",
						"endDate": "9999-12-21",
						"taxTypeId": "S",
						"rateTypeId": "G"
					}
				]
			}
		},
		"ComplianceAggregatedTaxRateModel": {
			"description": "A model for aggregated rates.",
			"type": "object",
			"properties": {
				"rate": {
					"format": "double",
					"description": "The compontent rate.",
					"type": "number",
					"readOnly": true,
					"example": 0.005
				},
				"stackRate": {
					"format": "double",
					"description": "The stack rate based on the aggregation method.",
					"type": "number",
					"readOnly": true,
					"example": 0.005
				},
				"effectiveDate": {
					"format": "date",
					"description": "The date this rate is starts to take effect.",
					"type": "string",
					"readOnly": true,
					"example": "1900-01-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "The date this rate is no longer active.",
					"type": "string",
					"readOnly": true,
					"example": "9999-12-21T00:00:00"
				},
				"taxTypeId": {
					"description": "The tax type of the rate.",
					"type": "string",
					"readOnly": true,
					"example": "S"
				},
				"rateTypeId": {
					"description": "The rate type of the rate.",
					"type": "string",
					"readOnly": true,
					"example": "G"
				}
			},
			"example": {
				"rate": 0.005,
				"stackRate": 0.005,
				"effectiveDate": "1900-01-01",
				"endDate": "9999-12-21",
				"taxTypeId": "S",
				"rateTypeId": "G"
			}
		},
		"ComplianceJurisdictionRateModel": {
			"description": "A flattened model for jurisdictions and rates.",
			"type": "object",
			"properties": {
				"jurisdictionId": {
					"format": "int32",
					"description": "The id of the jurisdiction.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country of this jurisdiction.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"readOnly": true,
					"example": "US"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"readOnly": true,
					"example": "AL"
				},
				"name": {
					"description": "The name of the jurisdiction.",
					"type": "string",
					"readOnly": true,
					"example": "ALABAMA"
				},
				"jurisdictionTypeId": {
					"description": "The type of the jurisdiction, indicating whether it is a country, state/region, city, for example.",
					"type": "string",
					"readOnly": true,
					"example": "CIT"
				},
				"rate": {
					"format": "double",
					"description": "The compontent rate.",
					"type": "number",
					"readOnly": true,
					"example": 0.005
				},
				"rateTypeId": {
					"description": "The rate type.",
					"type": "string",
					"readOnly": true,
					"example": "G"
				},
				"taxTypeId": {
					"description": "The tax type.",
					"type": "string",
					"readOnly": true,
					"example": "S"
				},
				"effectiveDate": {
					"format": "date",
					"description": "The date this rate is starts to take effect.",
					"type": "string",
					"readOnly": true,
					"example": "1900-01-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "The date this rate is no longer active.",
					"type": "string",
					"readOnly": true,
					"example": "9999-12-21T00:00:00"
				},
				"stateAssignedCode": {
					"description": "The state assigned code.",
					"type": "string",
					"readOnly": true,
					"example": "ALABAMA"
				},
				"taxAuthorityId": {
					"format": "int32",
					"description": "The id of the tax authority.",
					"type": "integer",
					"readOnly": true,
					"example": 271
				}
			},
			"example": {
				"jurisdictionId": 1,
				"country": "US",
				"region": "AL",
				"name": "ALABAMA",
				"jurisdictionTypeId": "CIT",
				"rate": 0.005,
				"rateTypeId": "G",
				"taxTypeId": "S",
				"effectiveDate": "1900-01-01",
				"endDate": "9999-12-21",
				"stateAssignedCode": "ALABAMA",
				"taxAuthorityId": 271
			}
		},
		"TransactionReferenceFieldModel": {
			"description": "Represents a fixup change",
			"required": ["documentId"],
			"type": "object",
			"properties": {
				"documentId": {
					"format": "int64",
					"description": "The id of the transaction",
					"type": "integer",
					"example": 12345
				},
				"reportingLocationCode": {
					"description": "Sets the sale location code (Outlet ID) for reporting this document to the tax authority.\r\n            \r\nThis value is used by Avalara Managed Returns to group documents together by reporting locations\r\nfor tax authorities that require location-based reporting.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "NewReportingLocation"
				},
				"lineDetailSerCodes": {
					"description": "Reference field of the line details",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/LineDetailSERCodeModel"
					},
					"example": [
						{
							"transactionLineDetailId": 12345,
							"serCode": "SerCode"
						}
					]
				}
			},
			"example": {
				"documentId": 12345,
				"reportingLocationCode": "NewReportingLocation",
				"lineDetailSerCodes": [
					{
						"transactionLineDetailId": 12345,
						"serCode": "SerCode"
					}
				]
			}
		},
		"LineDetailSERCodeModel": {
			"description": "SER code fixup",
			"type": "object",
			"properties": {
				"transactionLineDetailId": {
					"format": "int64",
					"description": "Transaction line detail Id",
					"type": "integer",
					"example": 12345
				},
				"serCode": {
					"description": "Updated SER code",
					"maxLength": 10,
					"minLength": 0,
					"type": "string"
				}
			},
			"example": {
				"transactionLineDetailId": 12345,
				"serCode": "SerCode"
			}
		},
		"FetchResult[TransactionModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"TransactionModel": {
			"description": "This object represents a single transaction; for example, a sales invoice or purchase order.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this transaction.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"code": {
					"description": "A unique customer-provided code identifying this transaction.",
					"type": "string",
					"readOnly": true,
					"example": "2de4dc84-9142-415a-bb52-b1907cdc83fa"
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that recorded this transaction.",
					"type": "integer",
					"example": 12345
				},
				"date": {
					"format": "date",
					"description": "The date on which this transaction occurred.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"paymentDate": {
					"format": "date",
					"description": "DEPRECATED - Date: 07/25/2018, Version: 18.7, Message: This field is deprecated and will return null till its removed.\r\nThe date when payment was made on this transaction.  By default, this should be the same as the date of the transaction.",
					"type": "string",
					"x-property-deprecation-info": {
						"date": "07/25/2018",
						"version": "18.7",
						"message": "This field is deprecated and will return null till its removed."
					}
				},
				"status": {
					"description": "The status of the transaction.",
					"enum": ["Temporary", "Saved", "Posted", "Committed", "Cancelled", "Adjusted", "Queued", "PendingApproval", "Any"],
					"type": "string",
					"example": "Committed",
					"x-enum-metadata": {
						"name": "DocumentStatus",
						"values": [
							{
								"name": "Temporary",
								"value": 0
							},
							{
								"name": "Saved",
								"value": 1
							},
							{
								"name": "Posted",
								"value": 2
							},
							{
								"name": "Committed",
								"value": 3
							},
							{
								"name": "Cancelled",
								"value": 4
							},
							{
								"name": "Adjusted",
								"value": 5
							},
							{
								"name": "Queued",
								"value": 6
							},
							{
								"name": "PendingApproval",
								"value": 7
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"type": {
					"description": "The type of the transaction.\r\n            \r\nTransactions of type `SalesOrder`, `ReturnOrder`, and so on are temporary estimates and will not be saved.\r\n            \r\nTransactions of type `SalesInvoice, `ReturnInvoice`, and so on are permanent transactions that can be reported to tax authorities\r\nif they are in status `Committed`.\r\n            \r\nA sales transaction represents a sale from the company to a customer.  A purchase transaction represents a purchase made by the company.\r\nA return transaction represents a customer who decided to request a refund after purchasing a product from the company.  An inventory\r\ntransfer transaction represents goods that were moved from one location of the company to another location without changing ownership.",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesInvoice",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"batchCode": {
					"description": "If this transaction was created as part of a batch, this code indicates which batch.",
					"type": "string"
				},
				"currencyCode": {
					"description": "The three-character ISO 4217 currency code that was used for payment for this transaction.",
					"type": "string",
					"example": "USD"
				},
				"customerUsageType": {
					"description": "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please use entityUseCode instead.\r\nThe customer usage type for this transaction.  Customer usage types often affect exemption or taxability rules.",
					"type": "string",
					"x-property-deprecation-info": {
						"date": "10/16/2017",
						"version": "17.11",
						"message": "Please use entityUseCode instead."
					}
				},
				"entityUseCode": {
					"description": "The entity use code for this transaction.  Entity use codes often affect exemption or taxability rules.",
					"type": "string",
					"example": ""
				},
				"customerVendorCode": {
					"description": "DEPRECATED - Date: 3/1/2018, Version: 18.3, Message: Please use `customerCode`\r\nThis field has been renamed to `customerCode` to match documentation for other APIs related to exemption customers.",
					"type": "string",
					"example": "ABC",
					"x-property-deprecation-info": {
						"date": "3/1/2018",
						"version": "18.3",
						"message": "Please use `customerCode`"
					}
				},
				"customerCode": {
					"description": "Unique code identifying the customer that requested this transaction.\r\n            \r\nWhen you specify a `customerCode`, AvaTax will look to see if a customer exists with this code in the exemption certificate system.\r\nIf that customer exists, and if that customer has uploaded an exemption certificate that applies to this transaction, the relevant\r\nparts of this transaction that can use the exemption certificate will be treated as exempt.",
					"type": "string",
					"example": "ABC"
				},
				"exemptNo": {
					"description": "The customer Tax Id Number (tax_number) associated with a certificate - Sales tax calculation requests first determine if there is an applicable\r\nECMS entry available, and will utilize it for exemption processing. If no applicable ECMS entry is available, the AvaTax service\r\nwill determine if an Exemption Number field is populated or an Entity/Use Code is included in the sales tax calculation request,\r\nand will perform exemption processing using either of those two options.",
					"type": "string",
					"example": ""
				},
				"reconciled": {
					"description": "If this transaction has been reconciled against the company's ledger, this value is set to true.",
					"type": "boolean",
					"example": true
				},
				"locationCode": {
					"description": "DEPRECATED - Date: 3/1/2018, Version: 18.3, Message: In order to ensure consistency of field names, Please use reportingLocationCode instead.\r\nThis field has been replaced by the reportingLocationCode field",
					"type": "string",
					"example": "DEFAULT",
					"x-property-deprecation-info": {
						"date": "3/1/2018",
						"version": "18.3",
						"message": "In order to ensure consistency of field names, Please use reportingLocationCode instead."
					}
				},
				"reportingLocationCode": {
					"description": "For customers who use [location-based tax reporting](https://developer.avalara.com/avatax/dev-guide/locations/location-based-reporting),\r\nthis field controls how this transaction will be filed for multi-location tax filings.\r\n            \r\nIf you specify a non-null value for this field, AvaTax will ensure that this transaction is reported on the tax return associated\r\nwith the [LocationModel](https://developer.avalara.com/api-reference/avatax/rest/v2/models/LocationModel/) identified by this code.\r\n            \r\nThis field does not affect any addresses for the transaction.  It only controls the tax filing behavior of this transaction.\r\n            \r\nIf you are looking for information about how to set up addresses for a transaction, please see [Using Address Types](https://developer.avalara.com/avatax/dev-guide/customizing-transaction/address-types/)\r\nin the AvaTax Developer Guide.",
					"type": "string"
				},
				"purchaseOrderNo": {
					"description": "The customer-supplied purchase order number of this transaction.",
					"type": "string"
				},
				"referenceCode": {
					"description": "A user-defined reference code for this transaction.",
					"type": "string"
				},
				"salespersonCode": {
					"description": "The salesperson who provided this transaction.  Not required.",
					"type": "string",
					"example": "DEF"
				},
				"taxOverrideType": {
					"description": "If a tax override was applied to this transaction, indicates what type of tax override was applied.",
					"enum": ["None", "TaxAmount", "Exemption", "TaxDate", "AccruedTaxAmount", "DeriveTaxable", "OutOfHarbor"],
					"type": "string",
					"example": "None",
					"x-enum-metadata": {
						"name": "TaxOverrideType",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "TaxAmount",
								"value": 1
							},
							{
								"name": "Exemption",
								"value": 2
							},
							{
								"name": "TaxDate",
								"value": 3
							},
							{
								"name": "AccruedTaxAmount",
								"value": 4
							},
							{
								"name": "DeriveTaxable",
								"value": 5
							},
							{
								"name": "OutOfHarbor",
								"value": 6
							}
						]
					}
				},
				"taxOverrideAmount": {
					"format": "double",
					"description": "If a tax override was applied to this transaction, indicates the amount of tax that was requested by the customer.",
					"type": "number",
					"example": 0.0
				},
				"taxOverrideReason": {
					"description": "If a tax override was applied to this transaction, indicates the reason for the tax override.",
					"type": "string",
					"example": ""
				},
				"totalAmount": {
					"format": "double",
					"description": "The total amount of this transaction.",
					"type": "number",
					"example": 1000.0
				},
				"totalExempt": {
					"format": "double",
					"description": "The amount of this transaction that was exempt.",
					"type": "number",
					"example": 0.0
				},
				"totalDiscount": {
					"format": "double",
					"description": "The total amount of discounts applied to all lines within this transaction.",
					"type": "number",
					"example": 0.0
				},
				"totalTax": {
					"format": "double",
					"description": "The total tax for all lines in this transaction.\r\n            \r\nIf you used a `taxOverride` of type `taxAmount` for any lines in this transaction, this value\r\nmay be different than the amount of tax calculated by AvaTax.  The amount of tax calculated by\r\nAvaTax will be stored in the `totalTaxCalculated` field, whereas this field will contain the\r\ntotal tax that was charged on the transaction.\r\n            \r\nYou can compare the `totalTax` and `totalTaxCalculated` fields to check for any discrepancies\r\nbetween an external tax calculation provider and the calculation performed by AvaTax.",
					"type": "number",
					"example": 62.5
				},
				"totalTaxable": {
					"format": "double",
					"description": "The portion of the total amount of this transaction that was taxable.",
					"type": "number",
					"example": 1000.0
				},
				"totalTaxCalculated": {
					"format": "double",
					"description": "The amount of tax that AvaTax calculated for the transaction.\r\n            \r\nIf you used a `taxOverride` of type `taxAmount` for any lines in this transaction, this value\r\nwill represent the amount that AvaTax calculated for this transaction without applying the override.\r\nThe field `totalTax` will be the total amount of tax after all overrides are applied.\r\n            \r\nYou can compare the `totalTax` and `totalTaxCalculated` fields to check for any discrepancies\r\nbetween an external tax calculation provider and the calculation performed by AvaTax.",
					"type": "number",
					"example": 62.5
				},
				"adjustmentReason": {
					"description": "If this transaction was adjusted, indicates the unique ID number of the reason why the transaction was adjusted.",
					"enum": [
						"NotAdjusted",
						"SourcingIssue",
						"ReconciledWithGeneralLedger",
						"ExemptCertApplied",
						"PriceAdjusted",
						"ProductReturned",
						"ProductExchanged",
						"BadDebt",
						"Other",
						"Offline"
					],
					"type": "string",
					"example": "NotAdjusted",
					"x-enum-metadata": {
						"name": "AdjustmentReason",
						"values": [
							{
								"name": "NotAdjusted",
								"value": 0
							},
							{
								"name": "SourcingIssue",
								"value": 1
							},
							{
								"name": "ReconciledWithGeneralLedger",
								"value": 2
							},
							{
								"name": "ExemptCertApplied",
								"value": 3
							},
							{
								"name": "PriceAdjusted",
								"value": 4
							},
							{
								"name": "ProductReturned",
								"value": 5
							},
							{
								"name": "ProductExchanged",
								"value": 6
							},
							{
								"name": "BadDebt",
								"value": 7
							},
							{
								"name": "Other",
								"value": 8
							},
							{
								"name": "Offline",
								"value": 9
							}
						]
					}
				},
				"adjustmentDescription": {
					"description": "If this transaction was adjusted, indicates a description of the reason why the transaction was adjusted.",
					"type": "string",
					"example": ""
				},
				"locked": {
					"description": "If this transaction has been reported to a tax authority, this transaction is considered locked and may not be adjusted after reporting.",
					"type": "boolean",
					"example": false
				},
				"region": {
					"description": "The two-or-three character ISO region code of the region for this transaction.",
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "The two-character ISO 3166 code of the country for this transaction.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"example": "US"
				},
				"version": {
					"format": "int32",
					"description": "If this transaction was adjusted, this indicates the version number of this transaction.  Incremented each time the transaction\r\nis adjusted.",
					"type": "integer",
					"example": 0
				},
				"softwareVersion": {
					"description": "The software version used to calculate this transaction.",
					"type": "string"
				},
				"originAddressId": {
					"format": "int64",
					"description": "The unique ID number of the origin address for this transaction.",
					"type": "integer",
					"example": 123456789
				},
				"destinationAddressId": {
					"format": "int64",
					"description": "The unique ID number of the destination address for this transaction.",
					"type": "integer",
					"example": 123456789
				},
				"exchangeRateEffectiveDate": {
					"format": "date",
					"description": "If this transaction included foreign currency exchange, this is the date as of which the exchange rate was calculated.",
					"type": "string"
				},
				"exchangeRate": {
					"format": "double",
					"description": "If this transaction included foreign currency exchange, this is the exchange rate that was used.",
					"type": "number"
				},
				"isSellerImporterOfRecord": {
					"description": "By default, the value is null, when the value is null, the value can be set at nexus level and used.\r\nIf the value is not null, it will override the value at nexus level.\r\n            \r\nIf true, this seller was considered the importer of record of a product shipped internationally.\r\n            \r\nIf this transaction is not an international transaction, this field may be left blank.\r\n            \r\nThe \"importer of record\" is liable to pay customs and import duties for products shipped internationally.  If\r\nyou specify that the seller is the importer of record, then estimates of customs and import duties will be added\r\nas tax details to the transaction.  Otherwise, the buyer is considered the importer of record, and customs\r\nand import duties will not be added to the tax details for this transaction.",
					"type": "boolean",
					"example": false
				},
				"description": {
					"description": "Description of this transaction.  Field permits unicode values.",
					"type": "string",
					"example": "Yarn"
				},
				"email": {
					"description": "Email address associated with this transaction.",
					"type": "string"
				},
				"businessIdentificationNo": {
					"description": "VAT business identification number used for this transaction.",
					"type": "string"
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"taxDate": {
					"format": "date-time",
					"description": "Tax date for this transaction",
					"type": "string",
					"readOnly": true,
					"example": "2020-07-30T00:00:00+00:00"
				},
				"lines": {
					"description": "A list of line items in this transaction.  To fetch this list, add the query string `?$include=Lines` or `?$include=Details` to your URL.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionLineModel"
					},
					"example": [
						{
							"id": 123456789,
							"transactionId": 123456789,
							"lineNumber": "1",
							"boundaryOverrideId": 0,
							"entityUseCode": "",
							"description": "Yarn",
							"destinationAddressId": 12345,
							"originAddressId": 123456789,
							"discountAmount": 100.0,
							"discountTypeId": 0,
							"exemptAmount": 0.0,
							"exemptCertId": 0,
							"exemptNo": "",
							"isItemTaxable": true,
							"isSSTP": false,
							"itemCode": "116292",
							"lineAmount": 1000.0,
							"quantity": 1.0,
							"ref1": "Note: Deliver to Bob",
							"reportingDate": "2020-07-30",
							"revAccount": "",
							"sourcing": "Destination",
							"tax": 62.5,
							"taxableAmount": 1000.0,
							"taxCalculated": 62.5,
							"taxCode": "PS081282",
							"taxDate": "2020-07-30",
							"taxEngine": "",
							"taxOverrideType": "None",
							"taxOverrideAmount": 0.0,
							"taxOverrideReason": "",
							"taxIncluded": false,
							"details": [
								{
									"id": 123456789,
									"transactionLineId": 123456789,
									"transactionId": 123456789,
									"addressId": 12345,
									"country": "US",
									"region": "CA",
									"stateFIPS": "06",
									"exemptAmount": 0.0,
									"exemptReasonId": 4,
									"inState": false,
									"jurisCode": "06",
									"jurisName": "CALIFORNIA",
									"jurisdictionId": 5000531,
									"signatureCode": "AGAM",
									"stateAssignedNo": "",
									"jurisType": "STA",
									"nonTaxableAmount": 0.0,
									"nonTaxableRuleId": 0,
									"nonTaxableType": "BaseRule",
									"rate": 0.0625,
									"rateRuleId": 1321915,
									"rateSourceId": 3,
									"serCode": "",
									"sourcing": "Destination",
									"tax": 62.5,
									"taxableAmount": 1000.0,
									"taxType": "Sales",
									"taxName": "CA STATE TAX",
									"taxAuthorityTypeId": 45,
									"taxRegionId": 2127184,
									"taxCalculated": 62.5,
									"taxOverride": 0.0,
									"rateType": "General"
								}
							],
							"vatNumberTypeId": 0
						}
					]
				},
				"addresses": {
					"description": "A list of line items in this transaction.  To fetch this list, add the query string `?$include=Addresses` to your URL.\r\n            \r\nFor more information about transaction addresses, please see [Using Address Types](https://developer.avalara.com/avatax/dev-guide/customizing-transaction/address-types/)\r\nin the AvaTax Developer Guide.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionAddressModel"
					},
					"example": [
						{
							"id": 0,
							"transactionId": 0,
							"boundaryLevel": "Address",
							"line1": "100 Ravine Lane Northeast #220",
							"city": "Bainbridge Island",
							"region": "WA",
							"postalCode": "98110",
							"country": "US",
							"taxRegionId": 0
						}
					]
				},
				"locationTypes": {
					"description": "A list of location types in this transaction.  To fetch this list, add the query string `?$include=Addresses` to your URL.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionLocationTypeModel"
					}
				},
				"summary": {
					"description": "Contains a summary of tax on this transaction.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionSummary"
					}
				},
				"taxDetailsByTaxType": {
					"description": "Contains the tax details per tax type",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxDetailsByTaxType"
					},
					"example": [
						{
							"taxType": "SalesAndUse",
							"totalTaxable": 100.0,
							"totalExempt": 0.05,
							"totalNonTaxable": 0.0,
							"totalTax": 0.625
						}
					]
				},
				"parameters": {
					"description": "Contains a list of extra parameters that were set when the transaction was created.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionParameterModel"
					}
				},
				"messages": {
					"description": "List of informational and warning messages regarding this API call.  These messages are only relevant to the current API call.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/AvaTaxMessage"
					}
				},
				"invoiceMessages": {
					"description": "Invoice messages associated with this document. Currently, this stores legally-required VAT messages.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/InvoiceMessageModel"
					}
				}
			},
			"example": {
				"id": 123456789,
				"code": "2de4dc84-9142-415a-bb52-b1907cdc83fa",
				"companyId": 12345,
				"date": "2020-07-30",
				"status": "Committed",
				"type": "SalesInvoice",
				"currencyCode": "USD",
				"entityUseCode": "",
				"customerVendorCode": "ABC",
				"customerCode": "ABC",
				"exemptNo": "",
				"reconciled": true,
				"locationCode": "DEFAULT",
				"salespersonCode": "DEF",
				"taxOverrideType": "None",
				"taxOverrideAmount": 0.0,
				"taxOverrideReason": "",
				"totalAmount": 1000.0,
				"totalExempt": 0.0,
				"totalDiscount": 0.0,
				"totalTax": 62.5,
				"totalTaxable": 1000.0,
				"totalTaxCalculated": 62.5,
				"adjustmentReason": "NotAdjusted",
				"adjustmentDescription": "",
				"locked": false,
				"region": "CA",
				"country": "US",
				"version": 0,
				"originAddressId": 123456789,
				"destinationAddressId": 123456789,
				"isSellerImporterOfRecord": false,
				"description": "Yarn",
				"taxDate": "2020-07-30T00:00:00+00:00",
				"lines": [
					{
						"id": 123456789,
						"transactionId": 123456789,
						"lineNumber": "1",
						"boundaryOverrideId": 0,
						"entityUseCode": "",
						"description": "Yarn",
						"destinationAddressId": 12345,
						"originAddressId": 123456789,
						"discountAmount": 100.0,
						"discountTypeId": 0,
						"exemptAmount": 0.0,
						"exemptCertId": 0,
						"exemptNo": "",
						"isItemTaxable": true,
						"isSSTP": false,
						"itemCode": "116292",
						"lineAmount": 1000.0,
						"quantity": 1.0,
						"ref1": "Note: Deliver to Bob",
						"reportingDate": "2020-07-30",
						"revAccount": "",
						"sourcing": "Destination",
						"tax": 62.5,
						"taxableAmount": 1000.0,
						"taxCalculated": 62.5,
						"taxCode": "PS081282",
						"taxDate": "2020-07-30",
						"taxEngine": "",
						"taxOverrideType": "None",
						"taxOverrideAmount": 0.0,
						"taxOverrideReason": "",
						"taxIncluded": false,
						"details": [
							{
								"id": 123456789,
								"transactionLineId": 123456789,
								"transactionId": 123456789,
								"addressId": 12345,
								"country": "US",
								"region": "CA",
								"stateFIPS": "06",
								"exemptAmount": 0.0,
								"exemptReasonId": 4,
								"inState": false,
								"jurisCode": "06",
								"jurisName": "CALIFORNIA",
								"jurisdictionId": 5000531,
								"signatureCode": "AGAM",
								"stateAssignedNo": "",
								"jurisType": "STA",
								"nonTaxableAmount": 0.0,
								"nonTaxableRuleId": 0,
								"nonTaxableType": "BaseRule",
								"rate": 0.0625,
								"rateRuleId": 1321915,
								"rateSourceId": 3,
								"serCode": "",
								"sourcing": "Destination",
								"tax": 62.5,
								"taxableAmount": 1000.0,
								"taxType": "Sales",
								"taxName": "CA STATE TAX",
								"taxAuthorityTypeId": 45,
								"taxRegionId": 2127184,
								"taxCalculated": 62.5,
								"taxOverride": 0.0,
								"rateType": "General"
							}
						],
						"vatNumberTypeId": 0
					}
				],
				"addresses": [
					{
						"id": 0,
						"transactionId": 0,
						"boundaryLevel": "Address",
						"line1": "100 Ravine Lane Northeast #220",
						"city": "Bainbridge Island",
						"region": "WA",
						"postalCode": "98110",
						"country": "US",
						"taxRegionId": 0
					}
				],
				"taxDetailsByTaxType": [
					{
						"taxType": "SalesAndUse",
						"totalTaxable": 100.0,
						"totalExempt": 0.05,
						"totalNonTaxable": 0.0,
						"totalTax": 0.625
					}
				]
			}
		},
		"TransactionLineModel": {
			"description": "One line item on this transaction.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this transaction line item.",
					"type": "integer",
					"example": 123456789
				},
				"transactionId": {
					"format": "int64",
					"description": "The unique ID number of the transaction to which this line item belongs.",
					"type": "integer",
					"example": 123456789
				},
				"lineNumber": {
					"description": "The line number or code indicating the line on this invoice or receipt or document.",
					"type": "string",
					"example": "1"
				},
				"boundaryOverrideId": {
					"format": "int32",
					"description": "The unique ID number of the boundary override applied to this line item.",
					"type": "integer",
					"example": 0
				},
				"customerUsageType": {
					"description": "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please use entityUseCode instead.\r\nThe customer usage type for this line item.  Usage type often affects taxability rules.",
					"type": "string",
					"x-property-deprecation-info": {
						"date": "10/16/2017",
						"version": "17.11",
						"message": "Please use entityUseCode instead."
					}
				},
				"entityUseCode": {
					"description": "The entity use code for this line item.  Usage type often affects taxability rules.",
					"type": "string",
					"example": ""
				},
				"description": {
					"description": "A description of the item or service represented by this line.",
					"type": "string",
					"example": "Yarn"
				},
				"destinationAddressId": {
					"format": "int64",
					"description": "The unique ID number of the destination address where this line was delivered or sold.\r\nIn the case of a point-of-sale transaction, the destination address and origin address will be the same.\r\nIn the case of a shipped transaction, they will be different.",
					"type": "integer",
					"example": 12345
				},
				"originAddressId": {
					"format": "int64",
					"description": "The unique ID number of the origin address where this line was delivered or sold.\r\nIn the case of a point-of-sale transaction, the origin address and destination address will be the same.\r\nIn the case of a shipped transaction, they will be different.",
					"type": "integer",
					"example": 123456789
				},
				"discountAmount": {
					"format": "double",
					"description": "The amount of discount that was applied to this line item.  This represents the difference between list price and sale price of the item.\r\nIn general, a discount represents money that did not change hands; tax is calculated on only the amount of money that changed hands.",
					"type": "number",
					"example": 100.0
				},
				"discountTypeId": {
					"format": "int32",
					"description": "The type of discount, if any, that was applied to this line item.",
					"type": "integer",
					"example": 0
				},
				"exemptAmount": {
					"format": "double",
					"description": "The amount of this line item that was exempt.",
					"type": "number",
					"example": 0.0
				},
				"exemptCertId": {
					"format": "int32",
					"description": "The unique ID number of the exemption certificate that applied to this line item. It is the calc_id associated with a certificate in CertCapture.",
					"type": "integer",
					"example": 0
				},
				"certificateId": {
					"description": "The CertCapture Certificate ID",
					"type": "string",
					"readOnly": true
				},
				"exemptNo": {
					"description": "The customer Tax Id Number (tax_number) associated with a certificate - Sales tax calculation requests first determine if there is an applicable\r\nECMS entry available, and will utilize it for exemption processing. If no applicable ECMS entry is available, the AvaTax service\r\nwill determine if an Exemption Number field is populated or an Entity/Use Code is included in the sales tax calculation request,\r\nand will perform exemption processing using either of those two options.",
					"type": "string",
					"example": ""
				},
				"isItemTaxable": {
					"description": "True if this item is taxable.",
					"type": "boolean",
					"example": true
				},
				"isSSTP": {
					"description": "True if this item is a Streamlined Sales Tax line item.",
					"type": "boolean",
					"example": false
				},
				"itemCode": {
					"description": "The code string of the item represented by this line item.",
					"type": "string",
					"example": "116292"
				},
				"lineAmount": {
					"format": "double",
					"description": "The total amount of the transaction, including both taxable and exempt.  This is the total price for all items.\r\nTo determine the individual item price, divide this by quantity.",
					"type": "number",
					"example": 1000.0
				},
				"quantity": {
					"format": "double",
					"description": "The quantity of products sold on this line item.",
					"type": "number",
					"example": 1.0
				},
				"ref1": {
					"description": "A user-defined reference identifier for this transaction line item.",
					"type": "string",
					"example": "Note: Deliver to Bob"
				},
				"ref2": {
					"description": "A user-defined reference identifier for this transaction line item.",
					"type": "string"
				},
				"reportingDate": {
					"format": "date",
					"description": "The date when this transaction should be reported.  By default, all transactions are reported on the date when the actual transaction took place.\r\nIn some cases, line items may be reported later due to delayed shipments or other business reasons.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"revAccount": {
					"description": "The revenue account number for this line item.",
					"type": "string",
					"example": ""
				},
				"sourcing": {
					"description": "Indicates whether this line item was taxed according to the origin or destination.",
					"enum": ["Origin", "Destination", "Mixed"],
					"type": "string",
					"example": "Destination",
					"x-enum-metadata": {
						"name": "Sourcing",
						"values": [
							{
								"name": "Mixed",
								"value": 42
							},
							{
								"name": "Destination",
								"value": 68
							},
							{
								"name": "Origin",
								"value": 79
							}
						]
					}
				},
				"tax": {
					"format": "double",
					"description": "The tax for this line in this transaction.\r\n            \r\nIf you used a `taxOverride` of type `taxAmount` for this line, this value\r\nwill represent the amount of your override.  AvaTax will still attempt to calculate the correct tax\r\nfor this line and will store that calculated value in the `taxCalculated` field.\r\n            \r\nYou can compare the `tax` and `taxCalculated` fields to check for any discrepancies\r\nbetween an external tax calculation provider and the calculation performed by AvaTax.",
					"type": "number",
					"example": 62.5
				},
				"taxableAmount": {
					"format": "double",
					"description": "The taxable amount of this line item.",
					"type": "number",
					"example": 1000.0
				},
				"taxCalculated": {
					"format": "double",
					"description": "The amount of tax that AvaTax calculated for the transaction.\r\n            \r\nIf you used a `taxOverride` of type `taxAmount`, there may be a difference between\r\nthe `tax` field which applies your override, and the `taxCalculated` field which\r\nrepresents the amount of tax that AvaTax calculated without the override.\r\n            \r\nYou can compare the `tax` and `taxCalculated` fields to check for any discrepancies\r\nbetween an external tax calculation provider and the calculation performed by AvaTax.",
					"type": "number",
					"example": 62.5
				},
				"taxCode": {
					"description": "The code string for the tax code that was used to calculate this line item.",
					"type": "string",
					"example": "PS081282"
				},
				"taxCodeId": {
					"format": "int32",
					"description": "The unique ID number for the tax code that was used to calculate this line item.",
					"type": "integer"
				},
				"taxDate": {
					"format": "date",
					"description": "The date that was used for calculating tax amounts for this line item.  By default, this date should be the same as the document date.\r\nIn some cases, for example when a consumer returns a product purchased previously, line items may be calculated using a tax date in the past\r\nso that the consumer can receive a refund for the correct tax amount that was charged when the item was originally purchased.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"taxEngine": {
					"description": "The tax engine identifier that was used to calculate this line item.",
					"type": "string",
					"example": ""
				},
				"taxOverrideType": {
					"description": "If a tax override was specified, this indicates the type of tax override.",
					"enum": ["None", "TaxAmount", "Exemption", "TaxDate", "AccruedTaxAmount", "DeriveTaxable", "OutOfHarbor"],
					"type": "string",
					"example": "None",
					"x-enum-metadata": {
						"name": "TaxOverrideType",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "TaxAmount",
								"value": 1
							},
							{
								"name": "Exemption",
								"value": 2
							},
							{
								"name": "TaxDate",
								"value": 3
							},
							{
								"name": "AccruedTaxAmount",
								"value": 4
							},
							{
								"name": "DeriveTaxable",
								"value": 5
							},
							{
								"name": "OutOfHarbor",
								"value": 6
							}
						]
					}
				},
				"businessIdentificationNo": {
					"description": "VAT business identification number used for this transaction.",
					"type": "string"
				},
				"taxOverrideAmount": {
					"format": "double",
					"description": "If a tax override was specified, this indicates the amount of tax that was requested.",
					"type": "number",
					"example": 0.0
				},
				"taxOverrideReason": {
					"description": "If a tax override was specified, represents the reason for the tax override.",
					"type": "string",
					"example": ""
				},
				"taxIncluded": {
					"description": "Indicates whether the `amount` for this line already includes tax.\r\n            \r\nIf this value is `true`, the final price of this line including tax will equal the value in `amount`.\r\n            \r\nIf this value is `null` or `false`, the final price will equal `amount` plus whatever taxes apply to this line.",
					"type": "boolean",
					"example": false
				},
				"details": {
					"description": "Optional: A list of tax details for this line item.\r\n            \r\nTax details represent taxes being charged by various tax authorities. Taxes that appear in the `details` collection are intended to be\r\ndisplayed to the customer and charged as a 'tax' on the invoice.\r\n            \r\nTo fetch this list, add the query string `?$include=Details` to your URL.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionLineDetailModel"
					},
					"example": [
						{
							"id": 123456789,
							"transactionLineId": 123456789,
							"transactionId": 123456789,
							"addressId": 12345,
							"country": "US",
							"region": "CA",
							"stateFIPS": "06",
							"exemptAmount": 0.0,
							"exemptReasonId": 4,
							"inState": false,
							"jurisCode": "06",
							"jurisName": "CALIFORNIA",
							"jurisdictionId": 5000531,
							"signatureCode": "AGAM",
							"stateAssignedNo": "",
							"jurisType": "STA",
							"nonTaxableAmount": 0.0,
							"nonTaxableRuleId": 0,
							"nonTaxableType": "BaseRule",
							"rate": 0.0625,
							"rateRuleId": 1321915,
							"rateSourceId": 3,
							"serCode": "",
							"sourcing": "Destination",
							"tax": 62.5,
							"taxableAmount": 1000.0,
							"taxType": "Sales",
							"taxName": "CA STATE TAX",
							"taxAuthorityTypeId": 45,
							"taxRegionId": 2127184,
							"taxCalculated": 62.5,
							"taxOverride": 0.0,
							"rateType": "General"
						}
					]
				},
				"nonPassthroughDetails": {
					"description": "Optional: A list of non-passthrough tax details for this line item.\r\n            \r\nTax details represent taxes being charged by various tax authorities. Taxes that appear in the `nonPassthroughDetails` collection are\r\ntaxes that must be paid directly by the company and not shown to the customer.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionLineDetailModel"
					}
				},
				"lineLocationTypes": {
					"description": "Optional: A list of location types for this line item.  To fetch this list, add the query string \"?$include=LineLocationTypes\" to your URL.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionLineLocationTypeModel"
					}
				},
				"parameters": {
					"description": "Contains a list of extra parameters that were set when the transaction was created.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionLineParameterModel"
					}
				},
				"hsCode": {
					"description": "The cross-border harmonized system code (HSCode) used to calculate tariffs and duties for this line item.\r\nFor a full list of HS codes, see `ListCrossBorderCodes()`.",
					"type": "string"
				},
				"costInsuranceFreight": {
					"format": "double",
					"description": "Indicates the cost of insurance and freight for this line.",
					"type": "number"
				},
				"vatCode": {
					"description": "Indicates the VAT code for this line item.",
					"type": "string"
				},
				"vatNumberTypeId": {
					"format": "int32",
					"description": "Indicates the VAT number type for this line item.",
					"type": "integer",
					"example": 0
				}
			},
			"example": {
				"id": 123456789,
				"transactionId": 123456789,
				"lineNumber": "1",
				"boundaryOverrideId": 0,
				"entityUseCode": "",
				"description": "Yarn",
				"destinationAddressId": 12345,
				"originAddressId": 123456789,
				"discountAmount": 100.0,
				"discountTypeId": 0,
				"exemptAmount": 0.0,
				"exemptCertId": 0,
				"exemptNo": "",
				"isItemTaxable": true,
				"isSSTP": false,
				"itemCode": "116292",
				"lineAmount": 1000.0,
				"quantity": 1.0,
				"ref1": "Note: Deliver to Bob",
				"reportingDate": "2020-07-30",
				"revAccount": "",
				"sourcing": "Destination",
				"tax": 62.5,
				"taxableAmount": 1000.0,
				"taxCalculated": 62.5,
				"taxCode": "PS081282",
				"taxDate": "2020-07-30",
				"taxEngine": "",
				"taxOverrideType": "None",
				"taxOverrideAmount": 0.0,
				"taxOverrideReason": "",
				"taxIncluded": false,
				"details": [
					{
						"id": 123456789,
						"transactionLineId": 123456789,
						"transactionId": 123456789,
						"addressId": 12345,
						"country": "US",
						"region": "CA",
						"stateFIPS": "06",
						"exemptAmount": 0.0,
						"exemptReasonId": 4,
						"inState": false,
						"jurisCode": "06",
						"jurisName": "CALIFORNIA",
						"jurisdictionId": 5000531,
						"signatureCode": "AGAM",
						"stateAssignedNo": "",
						"jurisType": "STA",
						"nonTaxableAmount": 0.0,
						"nonTaxableRuleId": 0,
						"nonTaxableType": "BaseRule",
						"rate": 0.0625,
						"rateRuleId": 1321915,
						"rateSourceId": 3,
						"serCode": "",
						"sourcing": "Destination",
						"tax": 62.5,
						"taxableAmount": 1000.0,
						"taxType": "Sales",
						"taxName": "CA STATE TAX",
						"taxAuthorityTypeId": 45,
						"taxRegionId": 2127184,
						"taxCalculated": 62.5,
						"taxOverride": 0.0,
						"rateType": "General"
					}
				],
				"vatNumberTypeId": 0
			}
		},
		"TransactionAddressModel": {
			"description": "An address used within this transaction.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this address.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"transactionId": {
					"format": "int64",
					"description": "The unique ID number of the document to which this address belongs.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"boundaryLevel": {
					"description": "The boundary level at which this address was validated.",
					"enum": ["Address", "Zip9", "Zip5"],
					"type": "string",
					"readOnly": true,
					"example": "Address",
					"x-enum-metadata": {
						"name": "BoundaryLevel",
						"values": [
							{
								"name": "Address",
								"value": 0
							},
							{
								"name": "Zip9",
								"value": 1
							},
							{
								"name": "Zip5",
								"value": 2
							}
						]
					}
				},
				"line1": {
					"description": "The first line of the address.",
					"type": "string",
					"example": "100 Ravine Lane Northeast #220"
				},
				"line2": {
					"description": "The second line of the address.",
					"type": "string"
				},
				"line3": {
					"description": "The third line of the address.",
					"type": "string"
				},
				"city": {
					"description": "The city for the address.",
					"type": "string",
					"example": "Bainbridge Island"
				},
				"region": {
					"description": "The ISO 3166 region code. E.g., the second part of ISO 3166-2.",
					"type": "string",
					"example": "WA"
				},
				"postalCode": {
					"description": "The postal code or zip code for the address.",
					"type": "string",
					"example": "98110"
				},
				"country": {
					"description": "The ISO 3166 country code",
					"type": "string",
					"example": "US"
				},
				"taxRegionId": {
					"format": "int32",
					"description": "The unique ID number of the tax region for this address.",
					"type": "integer",
					"example": 0
				},
				"latitude": {
					"description": "Latitude for this address",
					"type": "string"
				},
				"longitude": {
					"description": "Longitude for this address",
					"type": "string"
				}
			},
			"example": {
				"id": 0,
				"transactionId": 0,
				"boundaryLevel": "Address",
				"line1": "100 Ravine Lane Northeast #220",
				"city": "Bainbridge Island",
				"region": "WA",
				"postalCode": "98110",
				"country": "US",
				"taxRegionId": 0
			}
		},
		"TransactionLocationTypeModel": {
			"description": "Information about a location type",
			"type": "object",
			"properties": {
				"documentLocationTypeId": {
					"format": "int64",
					"description": "Location type ID for this location type in transaction",
					"type": "integer",
					"readOnly": true,
					"example": 123
				},
				"documentId": {
					"format": "int64",
					"description": "Transaction ID",
					"type": "integer",
					"readOnly": true,
					"example": 456
				},
				"documentAddressId": {
					"format": "int64",
					"description": "Address ID for the transaction",
					"type": "integer",
					"readOnly": true,
					"example": 789
				},
				"locationTypeCode": {
					"description": "Location type code",
					"type": "string",
					"readOnly": true,
					"example": "SingleLocation"
				}
			},
			"example": {
				"documentLocationTypeId": 123,
				"documentId": 456,
				"documentAddressId": 789,
				"locationTypeCode": "SingleLocation"
			}
		},
		"TransactionSummary": {
			"description": "Summary information about an overall transaction.",
			"type": "object",
			"properties": {
				"country": {
					"description": "Two character ISO-3166 country code.",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "Two or three character ISO region, state or province code, if applicable.",
					"type": "string",
					"example": "CA"
				},
				"jurisType": {
					"description": "The type of jurisdiction that collects this tax.",
					"enum": ["Country", "State", "County", "City", "Special"],
					"type": "string",
					"example": "State",
					"x-enum-metadata": {
						"name": "JurisdictionType",
						"values": [
							{
								"name": "Country",
								"value": 0
							},
							{
								"name": "State",
								"value": 1
							},
							{
								"name": "County",
								"value": 2
							},
							{
								"name": "City",
								"value": 3
							},
							{
								"name": "Special",
								"value": 4
							}
						]
					}
				},
				"jurisCode": {
					"description": "Jurisdiction Code for the taxing jurisdiction",
					"type": "string",
					"example": "06"
				},
				"jurisName": {
					"description": "The name of the jurisdiction that collects this tax.",
					"type": "string",
					"example": "CALIFORNIA"
				},
				"taxAuthorityType": {
					"format": "int32",
					"description": "The unique ID of the Tax Authority Type that collects this tax.",
					"type": "integer",
					"example": 45
				},
				"stateAssignedNo": {
					"description": "The state assigned number of the jurisdiction that collects this tax.",
					"type": "string",
					"example": ""
				},
				"taxType": {
					"description": "The tax type of this tax.",
					"type": "string",
					"example": "Sales"
				},
				"taxSubType": {
					"description": "The tax subtype of this tax.",
					"type": "string",
					"example": "S"
				},
				"taxName": {
					"description": "The name of the tax.",
					"type": "string",
					"example": "CA STATE TAX"
				},
				"taxGroup": {
					"description": "Group code when special grouping is enabled.",
					"type": "string",
					"example": ""
				},
				"rateType": {
					"description": "DEPRECATED - Date: 3/1/2018, Version: 18.3, Message: Please use rateTypeCode instead.\r\nIndicates the tax rate type.",
					"enum": [
						"Food",
						"General",
						"IncreasedStandard",
						"LinenRental",
						"Medical",
						"Parking",
						"ReducedA",
						"ReducedB",
						"ReducedR",
						"Standard",
						"SuperReduced",
						"Zero",
						"Services",
						"Leasing"
					],
					"type": "string",
					"example": "General",
					"x-property-deprecation-info": {
						"date": "3/1/2018",
						"version": "18.3",
						"message": "Please use rateTypeCode instead."
					},
					"x-enum-metadata": {
						"name": "RateType",
						"values": [
							{
								"name": "ReducedA",
								"value": 65
							},
							{
								"name": "ReducedB",
								"value": 66
							},
							{
								"name": "Food",
								"value": 70
							},
							{
								"name": "General",
								"value": 71
							},
							{
								"name": "IncreasedStandard",
								"value": 73
							},
							{
								"name": "LinenRental",
								"value": 76
							},
							{
								"name": "Medical",
								"value": 77
							},
							{
								"name": "Parking",
								"value": 80
							},
							{
								"name": "SuperReduced",
								"value": 81
							},
							{
								"name": "ReducedR",
								"value": 82
							},
							{
								"name": "Standard",
								"value": 83
							},
							{
								"name": "Leasing",
								"value": 85
							},
							{
								"name": "Services",
								"value": 88
							},
							{
								"name": "Zero",
								"value": 90
							}
						]
					}
				},
				"rateTypeCode": {
					"description": "Indicates the code of the rate type.  Use [ListRateTypesByCountry](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListRateTypesByCountry/) API for a full list of rate type codes.",
					"type": "string",
					"example": "G"
				},
				"taxable": {
					"format": "double",
					"description": "Tax Base - The adjusted taxable amount.",
					"type": "number",
					"example": 1000.0
				},
				"rate": {
					"format": "double",
					"description": "Tax Rate - The rate of taxation, as a fraction of the amount.",
					"type": "number",
					"example": 0.0625
				},
				"tax": {
					"format": "double",
					"description": "Tax amount - The calculated tax (Base * Rate).",
					"type": "number",
					"example": 62.5
				},
				"taxCalculated": {
					"format": "double",
					"description": "The amount of tax that AvaTax calculated for the transaction.\r\n            \r\nIf you used a `taxOverride` of type `taxAmount`, there may be a difference between\r\nthe `tax` field which applies your override, and the `TaxCalculated` field which\r\nrepresents the amount of tax that AvaTax calculated for this transaction without override.\r\n            \r\nYou can use this for comparison.",
					"type": "number",
					"example": 62.5
				},
				"nonTaxable": {
					"format": "double",
					"description": "The amount of the transaction that was non-taxable.",
					"type": "number",
					"example": 0.0
				},
				"exemption": {
					"format": "double",
					"description": "The amount of the transaction that was exempt.",
					"type": "number",
					"example": 0.0
				}
			},
			"example": {
				"country": "US",
				"region": "CA",
				"jurisType": "State",
				"jurisCode": "06",
				"jurisName": "CALIFORNIA",
				"taxAuthorityType": 45,
				"stateAssignedNo": "",
				"taxType": "Sales",
				"taxSubType": "S",
				"taxName": "CA STATE TAX",
				"taxGroup": "",
				"rateType": "General",
				"rateTypeCode": "G",
				"taxable": 1000.0,
				"rate": 0.0625,
				"tax": 62.5,
				"taxCalculated": 62.5,
				"nonTaxable": 0.0,
				"exemption": 0.0
			}
		},
		"TaxDetailsByTaxType": {
			"description": "Tax Details by Tax Type",
			"type": "object",
			"properties": {
				"taxType": {
					"description": "Tax Type",
					"type": "string",
					"example": "SalesAndUse"
				},
				"totalTaxable": {
					"format": "double",
					"description": "Total taxable amount by tax type",
					"type": "number",
					"example": 100.0
				},
				"totalExempt": {
					"format": "double",
					"description": "Total exempt by tax type",
					"type": "number",
					"example": 0.05
				},
				"totalNonTaxable": {
					"format": "double",
					"description": "Total non taxable by tax type",
					"type": "number",
					"example": 0.0
				},
				"totalTax": {
					"format": "double",
					"description": "Total tax by tax type",
					"type": "number",
					"example": 0.625
				},
				"taxSubTypeDetails": {
					"description": "Tax subtype details",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxDetailsByTaxSubType"
					}
				}
			},
			"example": {
				"taxType": "SalesAndUse",
				"totalTaxable": 100.0,
				"totalExempt": 0.05,
				"totalNonTaxable": 0.0,
				"totalTax": 0.625
			}
		},
		"InvoiceMessageModel": {
			"description": "Represents a message to be displayed on an invoice.",
			"type": "object",
			"properties": {
				"content": {
					"description": "The content of the invoice message.",
					"type": "string",
					"example": "Intra-EU Supply of Goods as per Art. 138 EU VAT Directive 2006/112"
				},
				"lineNumbers": {
					"description": "The applicable tax line numbers and codes.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["1", "2"]
				}
			},
			"example": {
				"content": "Intra-EU Supply of Goods as per Art. 138 EU VAT Directive 2006/112",
				"lineNumbers": ["1", "2"]
			}
		},
		"TransactionLineDetailModel": {
			"description": "An individual tax detail element.  Represents the amount of tax calculated for a particular jurisdiction, for a particular line in an invoice.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this tax detail.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"transactionLineId": {
					"format": "int64",
					"description": "The unique ID number of the line within this transaction.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"transactionId": {
					"format": "int64",
					"description": "The unique ID number of this transaction.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"addressId": {
					"format": "int64",
					"description": "The unique ID number of the address used for this tax detail.",
					"type": "integer",
					"example": 12345
				},
				"country": {
					"description": "The two character ISO 3166 country code of the country where this tax detail is assigned.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "The two-or-three character ISO region code for the region where this tax detail is assigned.",
					"type": "string",
					"example": "CA"
				},
				"countyFIPS": {
					"description": "For U.S. transactions, the Federal Information Processing Standard (FIPS) code for the county where this tax detail is assigned.",
					"type": "string"
				},
				"stateFIPS": {
					"description": "For U.S. transactions, the Federal Information Processing Standard (FIPS) code for the state where this tax detail is assigned.",
					"type": "string",
					"example": "06"
				},
				"exemptAmount": {
					"format": "double",
					"description": "The amount of this line that was considered exempt in this tax detail.",
					"type": "number",
					"example": 0.0
				},
				"exemptReasonId": {
					"format": "int32",
					"description": "The unique ID number of the exemption reason for this tax detail.",
					"type": "integer",
					"example": 4
				},
				"inState": {
					"description": "True if this detail element represented an in-state transaction.",
					"type": "boolean",
					"example": false
				},
				"jurisCode": {
					"description": "The code of the jurisdiction to which this tax detail applies.",
					"type": "string",
					"example": "06"
				},
				"jurisName": {
					"description": "The name of the jurisdiction to which this tax detail applies.",
					"type": "string",
					"example": "CALIFORNIA"
				},
				"jurisdictionId": {
					"format": "int32",
					"description": "The unique ID number of the jurisdiction to which this tax detail applies.",
					"type": "integer",
					"example": 5000531
				},
				"signatureCode": {
					"description": "The Avalara-specified signature code of the jurisdiction to which this tax detail applies.",
					"type": "string",
					"example": "AGAM"
				},
				"stateAssignedNo": {
					"description": "The state assigned number of the jurisdiction to which this tax detail applies.",
					"type": "string",
					"example": ""
				},
				"jurisType": {
					"description": "DEPRECATED - Date: 12/20/2017, Version: 18.1, Message: Use jurisdictionTypeId instead.\r\nThe type of the jurisdiction to which this tax detail applies.",
					"enum": ["STA", "CTY", "CIT", "STJ", "CNT"],
					"type": "string",
					"example": "STA",
					"x-property-deprecation-info": {
						"date": "12/20/2017",
						"version": "18.1",
						"message": "Use jurisdictionTypeId instead."
					},
					"x-enum-metadata": {
						"name": "JurisTypeId",
						"values": [
							{
								"name": "STA",
								"value": 1
							},
							{
								"name": "CTY",
								"value": 2
							},
							{
								"name": "CIT",
								"value": 3
							},
							{
								"name": "STJ",
								"value": 4
							},
							{
								"name": "CNT",
								"value": 5
							}
						]
					}
				},
				"jurisdictionType": {
					"description": "The type of the jurisdiction in which this tax detail applies.",
					"enum": ["Country", "State", "County", "City", "Special"],
					"type": "string",
					"x-enum-metadata": {
						"name": "JurisdictionType",
						"values": [
							{
								"name": "Country",
								"value": 0
							},
							{
								"name": "State",
								"value": 1
							},
							{
								"name": "County",
								"value": 2
							},
							{
								"name": "City",
								"value": 3
							},
							{
								"name": "Special",
								"value": 4
							}
						]
					}
				},
				"nonTaxableAmount": {
					"format": "double",
					"description": "The amount of this line item that was considered nontaxable in this tax detail.",
					"type": "number",
					"example": 0.0
				},
				"nonTaxableRuleId": {
					"format": "int32",
					"description": "The rule according to which portion of this detail was considered nontaxable.",
					"type": "integer",
					"example": 0
				},
				"nonTaxableType": {
					"description": "The type of nontaxability that was applied to this tax detail.",
					"enum": ["RateRule", "RateOverrideRule", "BaseRule", "ExemptEntityRule", "ProductTaxabilityRule", "NexusRule"],
					"type": "string",
					"example": "BaseRule",
					"x-enum-metadata": {
						"name": "TaxRuleTypeId",
						"values": [
							{
								"name": "RateRule",
								"value": 0
							},
							{
								"name": "RateOverrideRule",
								"value": 1
							},
							{
								"name": "BaseRule",
								"value": 2
							},
							{
								"name": "ExemptEntityRule",
								"value": 3
							},
							{
								"name": "ProductTaxabilityRule",
								"value": 4
							},
							{
								"name": "NexusRule",
								"value": 5
							}
						]
					}
				},
				"rate": {
					"format": "double",
					"description": "The rate at which this tax detail was calculated.",
					"type": "number",
					"example": 0.0625
				},
				"rateRuleId": {
					"format": "int32",
					"description": "The unique ID number of the rule according to which this tax detail was calculated.",
					"type": "integer",
					"example": 1321915
				},
				"rateSourceId": {
					"format": "int32",
					"description": "The unique ID number of the source of the rate according to which this tax detail was calculated.",
					"type": "integer",
					"example": 3
				},
				"serCode": {
					"description": "For Streamlined Sales Tax customers, the SST Electronic Return code under which this tax detail should be applied.",
					"type": "string",
					"example": ""
				},
				"sourcing": {
					"description": "Indicates whether this tax detail applies to the origin or destination of the transaction.",
					"enum": ["Origin", "Destination", "Mixed"],
					"type": "string",
					"example": "Destination",
					"x-enum-metadata": {
						"name": "Sourcing",
						"values": [
							{
								"name": "Mixed",
								"value": 42
							},
							{
								"name": "Destination",
								"value": 68
							},
							{
								"name": "Origin",
								"value": 79
							}
						]
					}
				},
				"tax": {
					"format": "double",
					"description": "The amount of tax for this tax detail.",
					"type": "number",
					"example": 62.5
				},
				"taxableAmount": {
					"format": "double",
					"description": "The taxable amount of this tax detail.",
					"type": "number",
					"example": 1000.0
				},
				"taxType": {
					"description": "The type of tax that was calculated.  Depends on the company's nexus settings as well as the jurisdiction's tax laws.",
					"type": "string",
					"example": "Sales"
				},
				"taxSubTypeId": {
					"description": "The id of the tax subtype.",
					"type": "string"
				},
				"taxTypeGroupId": {
					"description": "The id of the tax type group.",
					"type": "string"
				},
				"taxName": {
					"description": "The name of the tax against which this tax amount was calculated.",
					"type": "string",
					"example": "CA STATE TAX"
				},
				"taxAuthorityTypeId": {
					"format": "int32",
					"description": "The type of the tax authority to which this tax will be remitted.",
					"type": "integer",
					"example": 45
				},
				"taxRegionId": {
					"format": "int32",
					"description": "The unique ID number of the tax region.",
					"type": "integer",
					"example": 2127184
				},
				"taxCalculated": {
					"format": "double",
					"description": "The amount of tax that AvaTax calculated.\r\nIf an override for tax amount is used, there may be a difference between the tax\r\nfield which applies your override, and the this amount that is calculated without override.",
					"type": "number",
					"example": 62.5
				},
				"taxOverride": {
					"format": "double",
					"description": "The amount of tax override that was specified for this tax line.",
					"type": "number",
					"example": 0.0
				},
				"rateType": {
					"description": "DEPRECATED - Date: 12/20/2017, Version: 18.1, Message: Please use rateTypeCode instead.\r\nThe rate type for this tax detail.",
					"enum": [
						"Food",
						"General",
						"IncreasedStandard",
						"LinenRental",
						"Medical",
						"Parking",
						"ReducedA",
						"ReducedB",
						"ReducedR",
						"Standard",
						"SuperReduced",
						"Zero",
						"Services",
						"Leasing"
					],
					"type": "string",
					"example": "General",
					"x-property-deprecation-info": {
						"date": "12/20/2017",
						"version": "18.1",
						"message": "Please use rateTypeCode instead."
					},
					"x-enum-metadata": {
						"name": "RateType",
						"values": [
							{
								"name": "ReducedA",
								"value": 65
							},
							{
								"name": "ReducedB",
								"value": 66
							},
							{
								"name": "Food",
								"value": 70
							},
							{
								"name": "General",
								"value": 71
							},
							{
								"name": "IncreasedStandard",
								"value": 73
							},
							{
								"name": "LinenRental",
								"value": 76
							},
							{
								"name": "Medical",
								"value": 77
							},
							{
								"name": "Parking",
								"value": 80
							},
							{
								"name": "SuperReduced",
								"value": 81
							},
							{
								"name": "ReducedR",
								"value": 82
							},
							{
								"name": "Standard",
								"value": 83
							},
							{
								"name": "Leasing",
								"value": 85
							},
							{
								"name": "Services",
								"value": 88
							},
							{
								"name": "Zero",
								"value": 90
							}
						]
					}
				},
				"rateTypeCode": {
					"description": "Indicates the code of the rate type that was used to calculate this tax detail.  Use [ListRateTypesByCountry](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListRateTypesByCountry/) API for a full list of rate type codes.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"taxableUnits": {
					"format": "double",
					"description": "Number of units in this line item that were calculated to be taxable according to this rate detail.",
					"type": "number"
				},
				"nonTaxableUnits": {
					"format": "double",
					"description": "Number of units in this line item that were calculated to be nontaxable according to this rate detail.",
					"type": "number"
				},
				"exemptUnits": {
					"format": "double",
					"description": "Number of units in this line item that were calculated to be exempt according to this rate detail.",
					"type": "number"
				},
				"unitOfBasis": {
					"description": "When calculating units, what basis of measurement did we use for calculating the units?",
					"type": "string"
				},
				"isNonPassThru": {
					"description": "True if this value is a non-passthrough tax.\r\n            \r\nA non-passthrough tax is a tax that may not be charged to a customer; it must be paid directly by the company.",
					"type": "boolean"
				},
				"isFee": {
					"description": "The Taxes/Fee component. True if the fee is applied.",
					"type": "boolean"
				}
			},
			"example": {
				"id": 123456789,
				"transactionLineId": 123456789,
				"transactionId": 123456789,
				"addressId": 12345,
				"country": "US",
				"region": "CA",
				"stateFIPS": "06",
				"exemptAmount": 0.0,
				"exemptReasonId": 4,
				"inState": false,
				"jurisCode": "06",
				"jurisName": "CALIFORNIA",
				"jurisdictionId": 5000531,
				"signatureCode": "AGAM",
				"stateAssignedNo": "",
				"jurisType": "STA",
				"nonTaxableAmount": 0.0,
				"nonTaxableRuleId": 0,
				"nonTaxableType": "BaseRule",
				"rate": 0.0625,
				"rateRuleId": 1321915,
				"rateSourceId": 3,
				"serCode": "",
				"sourcing": "Destination",
				"tax": 62.5,
				"taxableAmount": 1000.0,
				"taxType": "Sales",
				"taxName": "CA STATE TAX",
				"taxAuthorityTypeId": 45,
				"taxRegionId": 2127184,
				"taxCalculated": 62.5,
				"taxOverride": 0.0,
				"rateType": "General"
			}
		},
		"TransactionLineLocationTypeModel": {
			"description": "Represents information about location types stored in a line",
			"type": "object",
			"properties": {
				"documentLineLocationTypeId": {
					"format": "int64",
					"description": "The unique ID number of this line location address model",
					"type": "integer",
					"readOnly": true,
					"example": 123
				},
				"documentLineId": {
					"format": "int64",
					"description": "The unique ID number of the document line associated with this line location address model",
					"type": "integer",
					"readOnly": true,
					"example": 456
				},
				"documentAddressId": {
					"format": "int64",
					"description": "The address ID corresponding to this model",
					"type": "integer",
					"readOnly": true,
					"example": 789
				},
				"locationTypeCode": {
					"description": "The location type code corresponding to this model",
					"type": "string",
					"readOnly": true,
					"example": "SingleLocation"
				}
			},
			"example": {
				"documentLineLocationTypeId": 123,
				"documentLineId": 456,
				"documentAddressId": 789,
				"locationTypeCode": "SingleLocation"
			}
		},
		"TaxDetailsByTaxSubType": {
			"description": "Tax Details by Tax subtype",
			"type": "object",
			"properties": {
				"taxSubType": {
					"description": "Tax subtype",
					"type": "string",
					"example": "S"
				},
				"totalTaxable": {
					"format": "double",
					"description": "Total taxable amount by tax type",
					"type": "number",
					"example": 100.0
				},
				"totalExempt": {
					"format": "double",
					"description": "Total exempt by tax type",
					"type": "number",
					"example": 0.05
				},
				"totalNonTaxable": {
					"format": "double",
					"description": "Total non taxable by tax type",
					"type": "number",
					"example": 0.0
				},
				"totalTax": {
					"format": "double",
					"description": "Total tax by tax type",
					"type": "number",
					"example": 0.625
				}
			},
			"example": {
				"taxSubType": "S",
				"totalTaxable": 100.0,
				"totalExempt": 0.05,
				"totalNonTaxable": 0.0,
				"totalTax": 0.625
			}
		},
		"FetchResult[ContactModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ContactModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"LinkCertificatesModel": {
			"description": "Represents a customer to whom you sell products and/or services.",
			"required": ["certificates"],
			"type": "object",
			"properties": {
				"certificates": {
					"description": "An array of certificate ID numbers to link",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					},
					"example": [1, 3]
				}
			},
			"example": {
				"certificates": [1, 3]
			}
		},
		"ExemptionStatusModel": {
			"description": "Indicates the customer's exemption status in a specific country and region.",
			"type": "object",
			"properties": {
				"status": {
					"description": "The exemption status of this customer in this country/region.",
					"type": "string",
					"example": "Exempt"
				},
				"certificate": {
					"$ref": "#/definitions/CertificateModel",
					"description": "Certificate if the customer is exempted",
					"example": {
						"id": 0,
						"signedDate": "2016-02-01",
						"expirationDate": "2020-12-31",
						"filename": "483a740f-4da5-481b-ab40-9f3d275a75fc",
						"documentExists": false,
						"valid": true,
						"verified": false,
						"exemptPercentage": 0.0,
						"isSingleCertificate": false,
						"exemptionNumber": "Exempt-1234",
						"exemptionReason": {
							"name": "RESALE"
						},
						"createdDate": "2020-07-30T22:11:30.2651183Z",
						"modifiedDate": "2020-07-30",
						"pageCount": 0,
						"customers": [
							{
								"companyId": 0,
								"customerCode": "998d09c5-9255-499f-8578-eed58d16c0d2",
								"alternateId": "987654321",
								"name": "Dr. Bob Example",
								"attnName": "Attn: Receiving",
								"line1": "645 Main Street",
								"city": "Irvine",
								"postalCode": "92614",
								"phoneNumber": "(949) 555-1212",
								"faxNumber": "949.555.1213",
								"emailAddress": "dr.bob.example@example.org",
								"contactName": "Alice Smith",
								"lastTransaction": "2008-10-08T00:00:00",
								"country": "US",
								"region": "CA",
								"exposureZones": [
									{
										"name": "Washington"
									}
								]
							},
							{
								"companyId": 0,
								"customerCode": "694b5cf7-b1d5-4dbe-bb17-5f8b25938a67",
								"alternateId": "987654321",
								"name": "Dr. Bob Example",
								"attnName": "Attn: Receiving",
								"line1": "645 Main Street",
								"city": "Irvine",
								"postalCode": "92614",
								"phoneNumber": "(949) 555-1212",
								"faxNumber": "949.555.1213",
								"emailAddress": "dr.bob.example@example.org",
								"contactName": "Alice Smith",
								"lastTransaction": "2008-10-08T00:00:00",
								"country": "US",
								"region": "CA",
								"exposureZones": [
									{
										"name": "Washington"
									}
								]
							}
						],
						"exposureZone": {
							"name": "Washington"
						}
					}
				}
			},
			"example": {
				"status": "Exempt",
				"certificate": {
					"id": 0,
					"signedDate": "2016-02-01",
					"expirationDate": "2020-12-31",
					"filename": "483a740f-4da5-481b-ab40-9f3d275a75fc",
					"documentExists": false,
					"valid": true,
					"verified": false,
					"exemptPercentage": 0.0,
					"isSingleCertificate": false,
					"exemptionNumber": "Exempt-1234",
					"exemptionReason": {
						"name": "RESALE"
					},
					"createdDate": "2020-07-30T22:11:30.2651183Z",
					"modifiedDate": "2020-07-30",
					"pageCount": 0,
					"customers": [
						{
							"companyId": 0,
							"customerCode": "998d09c5-9255-499f-8578-eed58d16c0d2",
							"alternateId": "987654321",
							"name": "Dr. Bob Example",
							"attnName": "Attn: Receiving",
							"line1": "645 Main Street",
							"city": "Irvine",
							"postalCode": "92614",
							"phoneNumber": "(949) 555-1212",
							"faxNumber": "949.555.1213",
							"emailAddress": "dr.bob.example@example.org",
							"contactName": "Alice Smith",
							"lastTransaction": "2008-10-08T00:00:00",
							"country": "US",
							"region": "CA",
							"exposureZones": [
								{
									"name": "Washington"
								}
							]
						},
						{
							"companyId": 0,
							"customerCode": "694b5cf7-b1d5-4dbe-bb17-5f8b25938a67",
							"alternateId": "987654321",
							"name": "Dr. Bob Example",
							"attnName": "Attn: Receiving",
							"line1": "645 Main Street",
							"city": "Irvine",
							"postalCode": "92614",
							"phoneNumber": "(949) 555-1212",
							"faxNumber": "949.555.1213",
							"emailAddress": "dr.bob.example@example.org",
							"contactName": "Alice Smith",
							"lastTransaction": "2008-10-08T00:00:00",
							"country": "US",
							"region": "CA",
							"exposureZones": [
								{
									"name": "Washington"
								}
							]
						}
					],
					"exposureZone": {
						"name": "Washington"
					}
				}
			}
		},
		"FetchResult[CustomerAttributeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerAttributeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"DataSourceModel": {
			"description": "Data source object",
			"required": ["companyId", "source"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The id of the datasource.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"companyId": {
					"format": "int32",
					"description": "The id of the company to which the datasource belongs to.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"source": {
					"description": "The extractor/connector id.",
					"type": "string",
					"example": "Amazon v2 Extractor"
				},
				"instance": {
					"description": "The unique ID number of this connection.",
					"type": "string",
					"readOnly": true,
					"example": "a04c8399-6f8d-448a-a864-bf4f43304f7f"
				},
				"isEnabled": {
					"description": "The connection using the connection_id is enabled. The customer is responsible to enable or disable.",
					"type": "boolean",
					"example": false
				},
				"isSynced": {
					"description": "If all the information has been transferred from the extractor to the database.",
					"type": "boolean",
					"example": false
				},
				"isAuthorized": {
					"description": "True if this data source is authorized.",
					"type": "boolean",
					"example": false
				},
				"lastSyncedDate": {
					"format": "date-time",
					"description": "The date when the information was last synched.",
					"type": "string"
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true,
					"example": 123
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true,
					"example": "2020-07-30T00:00:00+00:00"
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true,
					"example": 12
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true,
					"example": "2020-07-30T00:00:00+00:00"
				},
				"deletedDate": {
					"format": "date-time",
					"description": "The date when this record was deleted.",
					"type": "string",
					"readOnly": true
				},
				"recalculate": {
					"description": "Specifies whether transactions created by this data source needs to re-calculate tax or not",
					"type": "boolean"
				},
				"name": {
					"description": "Specifies the name of the extractor",
					"type": "string",
					"example": "TestName"
				},
				"externalState": {
					"description": "Specifies any implementation-specific information along with the DataSource.This field has no internal meaning in AvaTax and is purely for the convenience of the DataSource API user",
					"type": "string",
					"example": "Test Path"
				}
			},
			"example": {
				"id": 1,
				"companyId": 12345,
				"source": "Amazon v2 Extractor",
				"instance": "a04c8399-6f8d-448a-a864-bf4f43304f7f",
				"isEnabled": false,
				"isSynced": false,
				"isAuthorized": false,
				"createdUserId": 123,
				"createdDate": "2020-07-30T00:00:00+00:00",
				"modifiedUserId": 12,
				"modifiedDate": "2020-07-30T00:00:00+00:00",
				"name": "TestName",
				"externalState": "Test Path"
			}
		},
		"FetchResult[DataSourceModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/DataSourceModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[NexusModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NexusByTaxFormModel": {
			"description": "Identifies all nexus that match a particular tax form",
			"type": "object",
			"properties": {
				"formCode": {
					"description": "The code of the tax form that was requested",
					"type": "string",
					"example": "UNKNOWNFORM"
				},
				"companyId": {
					"format": "int32",
					"description": "The company ID of the company that was used to load the companyNexus array.  If this value is null, no company data was loaded.",
					"type": "integer",
					"example": 12345
				},
				"nexusDefinitions": {
					"description": "A list of all Avalara-defined nexus that are relevant to this tax form",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusModel"
					},
					"example": []
				},
				"companyNexus": {
					"description": "A list of all currently-defined company nexus that are related to this tax form",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusModel"
					},
					"example": []
				}
			},
			"example": {
				"formCode": "UNKNOWNFORM",
				"companyId": 12345,
				"nexusDefinitions": [],
				"companyNexus": []
			}
		},
		"FetchResult[TaxCodeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxCodeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"TaxCodeTypesModel": {
			"description": "Information about Avalara-defined tax code types.\r\nThis list is used when creating tax codes and tax rules.",
			"type": "object",
			"properties": {
				"types": {
					"description": "The list of Avalara-defined tax code types.",
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"example": {
						"D": "Digital",
						"F": "Freight",
						"O": "Other",
						"P": "Product",
						"S": "Service",
						"U": "Unknown"
					}
				}
			},
			"example": {
				"types": {
					"D": "Digital",
					"F": "Freight",
					"O": "Other",
					"P": "Product",
					"S": "Service",
					"U": "Unknown"
				}
			}
		},
		"FetchResult[SubscriptionTypeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/SubscriptionTypeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"SubscriptionTypeModel": {
			"description": "Represents a service or a subscription type.",
			"required": ["description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this subscription type.",
					"type": "integer",
					"readOnly": true,
					"example": 2
				},
				"description": {
					"description": "The friendly name of the service this subscription type represents.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": "AvaTaxPro"
				}
			},
			"example": {
				"id": 2,
				"description": "AvaTaxPro"
			}
		},
		"FetchResult[SecurityRoleModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/SecurityRoleModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"SecurityRoleModel": {
			"description": "Represents a single security role.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this security role.",
					"type": "integer",
					"readOnly": true,
					"example": 3
				},
				"description": {
					"description": "A description of this security role",
					"type": "string",
					"readOnly": true,
					"example": "AccountAdmin"
				}
			},
			"example": {
				"id": 3,
				"description": "AccountAdmin"
			}
		},
		"FetchResult[TaxAuthorityModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxAuthorityModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"TaxAuthorityModel": {
			"description": "Tax Authority Model",
			"required": ["id", "name"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax authority.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"name": {
					"description": "The friendly name of this tax authority.",
					"maxLength": 128,
					"minLength": 0,
					"type": "string",
					"example": "COLORADO"
				},
				"taxAuthorityTypeId": {
					"format": "int32",
					"description": "The type of this tax authority.",
					"type": "integer",
					"example": 45
				},
				"jurisdictionId": {
					"format": "int32",
					"description": "The unique ID number of the jurisdiction for this tax authority.",
					"type": "integer",
					"example": 12345
				}
			},
			"example": {
				"id": 12345,
				"name": "COLORADO",
				"taxAuthorityTypeId": 45,
				"jurisdictionId": 12345
			}
		},
		"FetchResult[TaxAuthorityFormModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxAuthorityFormModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"TaxAuthorityFormModel": {
			"description": "Represents a form that can be filed with a tax authority.",
			"required": ["taxAuthorityId", "formName"],
			"type": "object",
			"properties": {
				"taxAuthorityId": {
					"format": "int32",
					"description": "The unique ID number of the tax authority.",
					"type": "integer",
					"example": 69
				},
				"formName": {
					"description": "The form name of the form for this tax authority.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "CABOE401A2"
				}
			},
			"example": {
				"taxAuthorityId": 69,
				"formName": "CABOE401A2"
			}
		},
		"FetchResult[ParameterUsageModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ParameterUsageModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"ParameterUsageModel": {
			"description": "usage of system defined parameters.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this property.",
					"type": "integer",
					"example": 12345
				},
				"parameterId": {
					"format": "int64",
					"description": "The id of the parameter.",
					"type": "integer",
					"example": 12345
				},
				"productCode": {
					"description": "Product code for the parameter usage item.",
					"type": "string",
					"example": "PC080100"
				},
				"country": {
					"description": "The country for the parameter usage item.",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "The state for the parameter usage item.",
					"type": "string",
					"example": "CA"
				},
				"systemId": {
					"format": "int32",
					"description": "System Id for the parameter usage item",
					"type": "integer",
					"example": 0
				},
				"taxTypeId": {
					"description": "tax type for the parameter usage item.",
					"type": "string",
					"example": "EWaste"
				},
				"attributeType": {
					"description": "The type of parameter as determined by its application, e.g. Product, Transaction, Calculated",
					"type": "string",
					"example": "Product"
				},
				"name": {
					"description": "The name of the property.  To use this property, add a field on the `parameters` object of a [CreateTransaction](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/) call.",
					"type": "string",
					"example": "ScreenSize"
				},
				"dataType": {
					"description": "The data type of the property.",
					"type": "string",
					"example": "NumericMeasured"
				},
				"helpText": {
					"description": "Help text to be shown to the user when they are filling out this parameter.  Help text may include HTML links to additional\r\ncontent with more information about a parameter.",
					"type": "string",
					"example": "A diagonal length measure of a rectangular screen along it's surface; indicative of it's total surface area."
				},
				"label": {
					"description": "Label that helps the user to identify a parameter",
					"type": "string",
					"example": "Screen Size"
				},
				"helpUrl": {
					"description": "A help url that provides more information about the parameter",
					"type": "string"
				},
				"values": {
					"description": "If the parameter is of enumeration data type, then this list will be populated with all of the possible enumeration values.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"measurementType": {
					"description": "The unit of measurement type of the parameter",
					"type": "string",
					"example": "Length"
				}
			},
			"example": {
				"id": 12345,
				"parameterId": 12345,
				"productCode": "PC080100",
				"country": "US",
				"region": "CA",
				"systemId": 0,
				"taxTypeId": "EWaste",
				"attributeType": "Product",
				"name": "ScreenSize",
				"dataType": "NumericMeasured",
				"helpText": "A diagonal length measure of a rectangular screen along it's surface; indicative of it's total surface area.",
				"label": "Screen Size",
				"measurementType": "Length"
			}
		},
		"FetchResult[ParameterModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ParameterModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"ParameterModel": {
			"description": "An extra property that can change the behavior of tax transactions.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this property.",
					"type": "integer",
					"example": 12345
				},
				"category": {
					"description": "DEPRECATED - Date: 07/25/2018, Version: 18.7, Message: This field is deprecated and will return null.\r\nThe category grouping of this parameter.  When your user interface displays a large number of parameters, they should\r\nbe grouped by their category value.",
					"type": "string",
					"example": "Lodging",
					"x-property-deprecation-info": {
						"date": "07/25/2018",
						"version": "18.7",
						"message": "This field is deprecated and will return null."
					}
				},
				"name": {
					"description": "The name of the property.  To use this property, add a field on the `parameters` object of a [CreateTransaction](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/) call.",
					"type": "string",
					"example": "NumberOfNights"
				},
				"dataType": {
					"description": "The data type of the property.",
					"type": "string",
					"example": "NumericMeasured"
				},
				"helpText": {
					"description": "Help text to be shown to the user when they are filling out this parameter.  Help text may include HTML links to additional\r\ncontent with more information about a parameter.",
					"type": "string",
					"example": "Please enter the number of nights the customer stayed in your lodging; whole numbers only."
				},
				"serviceTypes": {
					"description": "A list of service types to which this parameter applies.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["AvaLodging"]
				},
				"prompt": {
					"description": "DEPRECATED - Date: 07/25/2018, Version: 18.7, Message: This field is deprecated and will return null.\r\nThe prompt you should use when displaying this parameter to a user.  For example, if your user interface displays a\r\nparameter in a text box, this is the label you should use to identify that text box.",
					"type": "string",
					"example": "Lodging Number of Nights",
					"x-property-deprecation-info": {
						"date": "07/25/2018",
						"version": "18.7",
						"message": "This field is deprecated and will return null."
					}
				},
				"regularExpression": {
					"description": "DEPRECATED - Date: 07/25/2018, Version: 18.7, Message: This field is deprecated and will return null.\r\nIf your user interface permits client-side validation of parameters, this string is a regular expression you can use\r\nto validate the user's data entry prior to submitting a tax request.",
					"type": "string",
					"example": "\\d*",
					"x-property-deprecation-info": {
						"date": "07/25/2018",
						"version": "18.7",
						"message": "This field is deprecated and will return null."
					}
				},
				"label": {
					"description": "Label that helps the user to identify a parameter",
					"type": "string",
					"example": "lodging"
				},
				"helpUrl": {
					"description": "A help url that provides more information about the parameter",
					"type": "string",
					"example": "www.example.com/lodging"
				},
				"attributeType": {
					"description": "The type of parameter as determined by its application, e.g. Product, Transaction, Calculated",
					"type": "string"
				},
				"values": {
					"description": "If the parameter is of enumeration data type, then this list will be populated with all of the possible enumeration values.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"measurementType": {
					"description": "The unit of measurement type of the parameter",
					"type": "string"
				}
			},
			"example": {
				"id": 12345,
				"category": "Lodging",
				"name": "NumberOfNights",
				"dataType": "NumericMeasured",
				"helpText": "Please enter the number of nights the customer stayed in your lodging; whole numbers only.",
				"serviceTypes": ["AvaLodging"],
				"prompt": "Lodging Number of Nights",
				"regularExpression": "\\d*",
				"label": "lodging",
				"helpUrl": "www.example.com/lodging"
			}
		},
		"FetchResult[LocationQuestionModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationQuestionModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"LocationQuestionModel": {
			"description": "Information about questions that the local jurisdictions require for each location",
			"required": ["id", "question", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this location setting type",
					"type": "integer",
					"example": 1
				},
				"question": {
					"description": "This is the prompt for this question",
					"type": "string",
					"example": "State Assigned Code"
				},
				"description": {
					"description": "If additional information is available about the location setting, this contains descriptive text to help\r\nyou identify the correct value to provide in this setting.",
					"type": "string",
					"example": ""
				},
				"regularExpression": {
					"description": "If available, this regular expression will verify that the input from the user is in the expected format.",
					"type": "string"
				},
				"exampleValue": {
					"description": "If available, this is an example value that you can demonstrate to the user to show what is expected.",
					"type": "string"
				},
				"jurisdictionName": {
					"description": "Indicates which jurisdiction requires this question",
					"type": "string"
				},
				"jurisdictionType": {
					"description": "Indicates which type of jurisdiction requires this question",
					"enum": ["Country", "State", "County", "City", "Special"],
					"type": "string",
					"example": "Country",
					"x-enum-metadata": {
						"name": "JurisdictionType",
						"values": [
							{
								"name": "Country",
								"value": 0
							},
							{
								"name": "State",
								"value": 1
							},
							{
								"name": "County",
								"value": 2
							},
							{
								"name": "City",
								"value": 3
							},
							{
								"name": "Special",
								"value": 4
							}
						]
					}
				},
				"jurisdictionCountry": {
					"description": "Indicates the country that this jurisdiction belongs to",
					"type": "string"
				},
				"jurisdictionRegion": {
					"description": "Indicates the state, region, or province that this jurisdiction belongs to",
					"type": "string"
				}
			},
			"example": {
				"id": 1,
				"question": "State Assigned Code",
				"description": "",
				"jurisdictionType": "Country"
			}
		},
		"FetchResult[IsoCountryModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/IsoCountryModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"IsoCountryModel": {
			"description": "Represents an ISO 3166 recognized country",
			"type": "object",
			"properties": {
				"code": {
					"description": "The two character ISO 3166 country code",
					"type": "string",
					"example": "FR"
				},
				"alpha3Code": {
					"description": "The three character ISO 3166 country code",
					"type": "string"
				},
				"name": {
					"description": "The full name of this country in uppercase.\r\n            \r\nFor names in proper or formal case, or for names in other languages, please examine the `localizedNames` element for an appropriate name.",
					"type": "string",
					"example": "France"
				},
				"isEuropeanUnion": {
					"description": "True if this country is a member of the European Union",
					"type": "boolean",
					"example": true
				},
				"localizedNames": {
					"description": "A list of localized names in a variety of languages.\r\n            \r\nThis list is maintained by the International Standards Organization.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/IsoLocalizedName"
					}
				},
				"addressesRequireRegion": {
					"description": "Whether or not this country requires a region in postal addresses.",
					"type": "boolean",
					"example": false
				}
			},
			"example": {
				"code": "FR",
				"name": "France",
				"isEuropeanUnion": true,
				"addressesRequireRegion": false
			}
		},
		"IsoLocalizedName": {
			"description": "Represents a language-specific localized name of a particular geographic entity such\r\nas a country or a region.",
			"type": "object",
			"properties": {
				"languageAlpha2Code": {
					"description": "The two-character alphanumeric code identifying the language in which this name is used.\r\n            \r\nNote that languageAlpha2Code and language3AlphaCode refer to the same language.",
					"type": "string",
					"example": "en"
				},
				"languageAlpha3Code": {
					"description": "The three-character alphanumeric code identifying the language in which this name is used.\r\n            \r\nNote that languageAlpha2Code and language3AlphaCode refer to the same language.",
					"type": "string",
					"example": "eng"
				},
				"name": {
					"description": "The name of this geographic entity as known in this language.",
					"type": "string",
					"example": "United States"
				}
			},
			"example": {
				"languageAlpha2Code": "en",
				"languageAlpha3Code": "eng",
				"name": "United States"
			}
		},
		"FetchResult[IsoRegionModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/IsoRegionModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"IsoRegionModel": {
			"description": "Represents a region, province, or state within a country",
			"type": "object",
			"properties": {
				"countryCode": {
					"description": "The two-character ISO 3166 country code this region belongs to",
					"type": "string",
					"example": "US"
				},
				"code": {
					"description": "The three character ISO 3166 region code",
					"type": "string",
					"example": "CA"
				},
				"name": {
					"description": "The full name, using localized characters, for this region, in uppercase.\r\n            \r\nFor names in proper or formal case, or for names in other languages, please examine the `localizedNames` element for an appropriate name.",
					"type": "string",
					"example": "California"
				},
				"classification": {
					"description": "The word in the local language that classifies what type of a region this represents",
					"type": "string",
					"example": "State"
				},
				"streamlinedSalesTax": {
					"description": "For the United States, this flag indicates whether a U.S. State participates in the Streamlined\r\nSales Tax program.  For countries other than the US, this flag is null.",
					"type": "boolean"
				},
				"localizedNames": {
					"description": "A list of localized names in a variety of languages.\r\n            \r\nThis list is maintained by the International Standards Organization.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/IsoLocalizedName"
					}
				}
			},
			"example": {
				"countryCode": "US",
				"code": "CA",
				"name": "California",
				"classification": "State"
			}
		},
		"FetchResult[EntityUseCodeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityUseCodeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"EntityUseCodeModel": {
			"description": "Represents a code describing the intended use for a product that may affect its taxability",
			"type": "object",
			"properties": {
				"code": {
					"description": "The Avalara-recognized entity use code for this definition",
					"type": "string",
					"example": "A"
				},
				"name": {
					"description": "The name of this entity use code",
					"type": "string",
					"example": "FEDERAL GOV"
				},
				"description": {
					"description": "Text describing the meaning of this use code",
					"type": "string",
					"example": ""
				},
				"validCountries": {
					"description": "A list of countries where this use code is valid",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["US"]
				}
			},
			"example": {
				"code": "A",
				"name": "FEDERAL GOV",
				"description": "",
				"validCountries": ["US"]
			}
		},
		"FetchResult[PreferredProgramModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/PreferredProgramModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"PreferredProgramModel": {
			"description": "A preferred program is a customs and/or duty program that can be used to handle cross-border transactions.\r\nCustomers who sign up for a preferred program may obtain better terms for their customs and duty payments.\r\n            \r\nTo indicate that your company has signed up for a preferred program, specify the `code` value from this\r\nobject as the value for the `AvaTax.LC.PreferredProgram` parameter in your transaction.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number representing this preferred program.",
					"type": "integer",
					"example": 99
				},
				"code": {
					"description": "A code that identifies this preferred program.  To select this program, specify this code\r\nvalue in the `AvaTax.LC.PreferredProgram` parameter.",
					"type": "string",
					"example": "NAFTA"
				},
				"originCountry": {
					"description": "The ISO 3166 country code for the origin permitted by this program",
					"type": "string",
					"example": "US"
				},
				"destinationCountry": {
					"description": "The ISO 3166 country code for the destination permitted by this program",
					"type": "string",
					"example": "MX"
				},
				"effectiveDate": {
					"format": "date",
					"description": "The earliest date for which this preferred program can be used in AvaTax.  If `null`, this preferred program\r\nis valid for all dates earlier than `endDate`.",
					"type": "string",
					"example": "2018-01-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "The latest date for which this preferred program can be used in AvaTax.  If `null`, this preferred program\r\nis valid for all dates later than `effectiveDate`.",
					"type": "string",
					"example": "9999-12-31T00:00:00"
				}
			},
			"example": {
				"id": 99,
				"code": "NAFTA",
				"originCountry": "US",
				"destinationCountry": "MX",
				"effectiveDate": "2018-01-01",
				"endDate": "9999-12-31"
			}
		},
		"FetchResult[CurrencyModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CurrencyModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"CurrencyModel": {
			"description": "Represents an ISO 4217 currency code used for designating the currency of a transaction.",
			"type": "object",
			"properties": {
				"code": {
					"description": "The ISO 4217 currency code for this currency.",
					"type": "string",
					"example": "AED"
				},
				"description": {
					"description": "A friendly human-readable name representing this currency.",
					"type": "string",
					"example": "UAE Dirham"
				},
				"decimalDigits": {
					"format": "int32",
					"description": "The number of decimal digits to use when formatting a currency value for display.",
					"type": "integer",
					"example": 2
				}
			},
			"example": {
				"code": "AED",
				"description": "UAE Dirham",
				"decimalDigits": 2
			}
		},
		"FetchResult[ProductClassificationSystemModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductClassificationSystemModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"ProductClassificationSystemModel": {
			"description": "Represents a product classification system.",
			"type": "object",
			"properties": {
				"systemId": {
					"format": "int32",
					"description": "Its Integer SystemId value for System",
					"type": "integer",
					"example": 1
				},
				"systemCode": {
					"description": "The System code for this System.",
					"type": "string",
					"example": "abc"
				},
				"description": {
					"description": "A friendly human-readable name representing this System.",
					"type": "string",
					"example": "xyz"
				},
				"customsValue": {
					"description": "custom value set for the system",
					"type": "string",
					"example": "pqr"
				},
				"countries": {
					"description": "List of all countries that belong to the system including",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductSystemCountryModel"
					}
				}
			},
			"example": {
				"systemId": 1,
				"systemCode": "abc",
				"description": "xyz",
				"customsValue": "pqr"
			}
		},
		"ProductSystemCountryModel": {
			"description": "Represents a System Country.",
			"type": "object",
			"properties": {
				"systemCountryId": {
					"format": "int32",
					"description": "Its Integer SystemCountryId value for SystemCountry",
					"type": "integer",
					"example": 1
				},
				"systemId": {
					"format": "int32",
					"description": "Its Integer SystemId value for SystemCountry",
					"type": "integer",
					"example": 1
				},
				"country": {
					"description": "string value of country code for SystemCountry",
					"type": "string",
					"example": "US"
				},
				"effDate": {
					"format": "date-time",
					"description": "DateTime as EffDate for SystemCountry",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "DateTime as EffDate for SystemCountry",
					"type": "string",
					"example": "9999-12-31T00:00:00"
				}
			},
			"example": {
				"systemCountryId": 1,
				"systemId": 1,
				"country": "US",
				"effDate": "2020-07-30T00:00:00+00:00",
				"endDate": "9999-12-31T00:00:00"
			}
		},
		"FetchResult[TaxAuthorityTypeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxAuthorityTypeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"TaxAuthorityTypeModel": {
			"description": "Tax Authority Type Model",
			"required": ["id", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax Authority customer type.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"description": {
					"description": "The description name of this tax authority type.",
					"type": "string",
					"example": "County"
				},
				"taxAuthorityGroup": {
					"description": "Tax Authority Group",
					"type": "string",
					"example": "LocalCounty"
				}
			},
			"example": {
				"id": 0,
				"description": "County",
				"taxAuthorityGroup": "LocalCounty"
			}
		},
		"FetchResult[NoticeStatusModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeStatusModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NoticeStatusModel": {
			"description": "Tax Notice Status Model",
			"required": ["id", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax authority type.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"description": {
					"description": "The description name of this tax authority type.",
					"type": "string",
					"example": "City"
				},
				"isOpen": {
					"description": "True if a tax notice in this status is considered 'open' and has more work expected to be done before it is closed.",
					"type": "boolean",
					"example": false
				},
				"sortOrder": {
					"format": "int32",
					"description": "If a list of status values is to be displayed in a dropdown, they should be displayed in this numeric order.",
					"type": "integer",
					"example": 0
				}
			},
			"example": {
				"id": 12345,
				"description": "City",
				"isOpen": false,
				"sortOrder": 0
			}
		},
		"FetchResult[NoticeCustomerTypeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeCustomerTypeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NoticeCustomerTypeModel": {
			"description": "Tax Authority Model",
			"required": ["id", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax notice customer type.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"description": {
					"description": "The description name of this tax authority type.",
					"type": "string",
					"example": "City"
				},
				"activeFlag": {
					"description": "A flag if the type is active",
					"type": "boolean",
					"example": true
				},
				"sortOrder": {
					"format": "int32",
					"description": "sort order of the types",
					"type": "integer",
					"example": 5
				}
			},
			"example": {
				"id": 12345,
				"description": "City",
				"activeFlag": true,
				"sortOrder": 5
			}
		},
		"FetchResult[NoticeReasonModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeReasonModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NoticeReasonModel": {
			"description": "Tax Notice Reason Model",
			"required": ["id", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax notice customer type.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"description": {
					"description": "The description name of this tax authority type.",
					"type": "string",
					"example": "AvaTax Returns"
				},
				"activeFlag": {
					"description": "A flag if the type is active",
					"type": "boolean",
					"example": true
				},
				"sortOrder": {
					"format": "int32",
					"description": "sort order of the types",
					"type": "integer",
					"example": 5
				}
			},
			"example": {
				"id": 1,
				"description": "AvaTax Returns",
				"activeFlag": true,
				"sortOrder": 5
			}
		},
		"FetchResult[FilingFrequencyModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingFrequencyModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FilingFrequencyModel": {
			"description": "FilingFrequency Model",
			"required": ["id", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this filing frequency.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"description": {
					"description": "The description name of this filing frequency",
					"type": "string",
					"example": "Monthly"
				}
			},
			"example": {
				"id": 1,
				"description": "Monthly"
			}
		},
		"FetchResult[NoticeFilingTypeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeFilingTypeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NoticeFilingTypeModel": {
			"description": "Tax Notice FilingType Model",
			"required": ["id", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax notice customer type.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"description": {
					"description": "The description name of this tax authority type.",
					"type": "string",
					"example": "Electronic Return "
				},
				"activeFlag": {
					"description": "A flag if the type is active",
					"type": "boolean",
					"example": true
				},
				"sortOrder": {
					"format": "int32",
					"description": "sort order of the types",
					"type": "integer",
					"example": 5
				}
			},
			"example": {
				"id": 1,
				"description": "Electronic Return ",
				"activeFlag": true,
				"sortOrder": 5
			}
		},
		"FetchResult[NoticeTypeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeTypeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NoticeTypeModel": {
			"description": "Tax Notice Type Model",
			"required": ["id", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax notice customer type.",
					"type": "integer",
					"readOnly": true,
					"example": 2
				},
				"description": {
					"description": "The description name of this tax authority type.",
					"type": "string",
					"example": "Notices"
				},
				"activeFlag": {
					"description": "A flag if the type is active",
					"type": "boolean",
					"example": true
				},
				"sortOrder": {
					"format": "int32",
					"description": "sort order of the types",
					"type": "integer",
					"example": 10
				}
			},
			"example": {
				"id": 2,
				"description": "Notices",
				"activeFlag": true,
				"sortOrder": 10
			}
		},
		"FetchResult[NoticeCustomerFundingOptionModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeCustomerFundingOptionModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NoticeCustomerFundingOptionModel": {
			"description": "Tax Authority Model",
			"required": ["id", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax notice customer FundingOption.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"description": {
					"description": "The description name of this tax authority FundingOption.",
					"type": "string",
					"example": "Pull"
				},
				"activeFlag": {
					"description": "A flag if the FundingOption is active",
					"type": "boolean",
					"example": true
				},
				"sortOrder": {
					"format": "int32",
					"description": "sort order of the FundingOptions",
					"type": "integer",
					"example": 5
				}
			},
			"example": {
				"id": 1,
				"description": "Pull",
				"activeFlag": true,
				"sortOrder": 5
			}
		},
		"FetchResult[NoticePriorityModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticePriorityModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NoticePriorityModel": {
			"description": "Tax Notice Priority Model",
			"required": ["id", "description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax notice customer Priority.",
					"type": "integer",
					"readOnly": true,
					"example": 2
				},
				"description": {
					"description": "The description name of this tax authority Priority.",
					"type": "string",
					"example": "High"
				},
				"activeFlag": {
					"description": "A flag if the Priority is active",
					"type": "boolean",
					"example": true
				},
				"sortOrder": {
					"format": "int32",
					"description": "sort order of the Prioritys",
					"type": "integer",
					"example": 10
				}
			},
			"example": {
				"id": 2,
				"description": "High",
				"activeFlag": true,
				"sortOrder": 10
			}
		},
		"FetchResult[NoticeResponsibilityModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeResponsibilityModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NoticeResponsibilityModel": {
			"description": "NoticeResponsibility Model",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this notice responsibility.",
					"type": "integer",
					"example": 11
				},
				"description": {
					"description": "The description name of this notice responsibility",
					"type": "string",
					"example": "Customer-Invalid login (Return filed manual)"
				},
				"isActive": {
					"description": "Defines if the responsibility is active",
					"type": "boolean",
					"example": true
				},
				"sortOrder": {
					"format": "int32",
					"description": "The sort order of this responsibility",
					"type": "integer",
					"example": 55
				}
			},
			"example": {
				"id": 11,
				"description": "Customer-Invalid login (Return filed manual)",
				"isActive": true,
				"sortOrder": 55
			}
		},
		"FetchResult[NoticeRootCauseModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeRootCauseModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NoticeRootCauseModel": {
			"description": "NoticeRootCause Model",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this notice RootCause.",
					"type": "integer",
					"example": 11
				},
				"description": {
					"description": "The description name of this notice RootCause",
					"type": "string",
					"example": "Customer-Invalid login (Return filed manual)"
				},
				"isActive": {
					"description": "Defines if the RootCause is active",
					"type": "boolean",
					"example": true
				},
				"sortOrder": {
					"format": "int32",
					"description": "The sort order of this RootCause",
					"type": "integer",
					"example": 55
				}
			},
			"example": {
				"id": 11,
				"description": "Customer-Invalid login (Return filed manual)",
				"isActive": true,
				"sortOrder": 55
			}
		},
		"FetchResult[SkyscraperStatusModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/SkyscraperStatusModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"SkyscraperStatusModel": {
			"description": "Represents a list of statuses of returns available in skyscraper",
			"type": "object",
			"properties": {
				"name": {
					"description": "The specific name of the returns available in skyscraper",
					"type": "string",
					"example": "AL"
				},
				"taxFormCodes": {
					"description": "The tax form codes available to file through skyscrper",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["USAL21009501"]
				},
				"country": {
					"description": "The country of the returns",
					"type": "string",
					"example": "US"
				},
				"scraperType": {
					"description": "The Scraper type",
					"enum": ["Login", "CustomerDorData"],
					"type": "string",
					"example": "Login",
					"x-enum-metadata": {
						"name": "ScraperType",
						"values": [
							{
								"name": "Login",
								"value": 1
							},
							{
								"name": "CustomerDorData",
								"value": 2
							}
						]
					}
				},
				"isAvailable": {
					"description": "Indicates if the return is currently available",
					"type": "boolean",
					"example": true
				},
				"expectedResponseTime": {
					"description": "The expected response time of the call",
					"type": "string",
					"example": "00:30:00"
				},
				"message": {
					"description": "Message on the returns",
					"type": "string",
					"example": "Message"
				},
				"requiredFilingCalendarDataFields": {
					"description": "A list of required fields to file",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/requiredFilingCalendarDataFieldModel"
					},
					"example": [
						{
							"name": "RegistrationId",
							"description": "Id Used for Registration"
						}
					]
				}
			},
			"example": {
				"name": "AL",
				"taxFormCodes": ["USAL21009501"],
				"country": "US",
				"scraperType": "Login",
				"isAvailable": true,
				"expectedResponseTime": "00:30:00",
				"message": "Message",
				"requiredFilingCalendarDataFields": [
					{
						"name": "RegistrationId",
						"description": "Id Used for Registration"
					}
				]
			}
		},
		"requiredFilingCalendarDataFieldModel": {
			"description": "Represents a verification request using Skyscraper for a company",
			"type": "object",
			"properties": {
				"name": {
					"description": "Region of the verification request",
					"type": "string",
					"example": "RegistrationId"
				},
				"description": {
					"description": "Username that we are using for verification",
					"type": "string",
					"example": "Id Used for Registration"
				}
			},
			"example": {
				"name": "RegistrationId",
				"description": "Id Used for Registration"
			}
		},
		"FetchResult[JurisdictionOverrideModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/JurisdictionOverrideModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"JurisdictionOverrideModel": {
			"description": "Represents an override of tax jurisdictions for a specific address.\r\n            \r\nDuring the time period represented by EffDate through EndDate, all tax decisions for addresses matching\r\nthis override object will be assigned to the list of jurisdictions designated in this object.",
			"required": ["description", "region", "postalCode", "jurisdictions", "taxRegionId"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this override.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number assigned to this account.",
					"type": "integer",
					"example": 0
				},
				"description": {
					"description": "A description of why this jurisdiction override was created.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "a test JO"
				},
				"line1": {
					"description": "The street address of the physical location affected by this override.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "5500 Irvine Center Dr"
				},
				"city": {
					"description": "The city address of the physical location affected by this override.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country to be affected by this override.\r\n            \r\nNote that only United States addresses are affected by the jurisdiction override system.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "The two character ISO-3166 country code of the country affected by this override.\r\n            \r\nNote that only United States addresses are affected by the jurisdiction override system.",
					"type": "string",
					"readOnly": true,
					"example": "US"
				},
				"postalCode": {
					"description": "The postal code of the physical location affected by this override.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string",
					"example": "92618"
				},
				"effectiveDate": {
					"format": "date",
					"description": "The date when this override first takes effect.  Set this value to null to affect all dates up to the end date.",
					"type": "string",
					"example": "2006-08-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "The date when this override will cease to take effect.  Set this value to null to never expire.",
					"type": "string",
					"example": "2099-01-12T00:00:00"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"jurisdictions": {
					"description": "A list of the tax jurisdictions that will be assigned to this overridden address.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/JurisdictionModel"
					}
				},
				"taxRegionId": {
					"format": "int32",
					"description": "The TaxRegionId of the new location affected by this jurisdiction override.",
					"type": "integer",
					"example": 0
				},
				"boundaryLevel": {
					"description": "The boundary level of this override",
					"enum": ["Address", "Zip9", "Zip5"],
					"type": "string",
					"readOnly": true,
					"example": "Address",
					"x-enum-metadata": {
						"name": "BoundaryLevel",
						"values": [
							{
								"name": "Address",
								"value": 0
							},
							{
								"name": "Zip9",
								"value": 1
							},
							{
								"name": "Zip5",
								"value": 2
							}
						]
					}
				},
				"isDefault": {
					"description": "True if this is a default boundary",
					"type": "boolean"
				}
			},
			"example": {
				"id": 0,
				"accountId": 0,
				"description": "a test JO",
				"line1": "5500 Irvine Center Dr",
				"city": "Irvine",
				"region": "CA",
				"country": "US",
				"postalCode": "92618",
				"effectiveDate": "2006-08-01",
				"endDate": "2099-01-12",
				"jurisdictions": [
					{
						"code": "53",
						"name": "WASHINGTON",
						"type": "State",
						"rate": 0.06,
						"salesRate": 0.06,
						"signatureCode": "",
						"region": "WA",
						"useRate": 0.06
					}
				],
				"taxRegionId": 0,
				"boundaryLevel": "Address",
				"isDefault": false
			}
		},
		"JurisdictionModel": {
			"description": "Represents information about a single legal taxing jurisdiction",
			"required": ["code", "name", "type", "signatureCode"],
			"type": "object",
			"properties": {
				"code": {
					"description": "The code that is used to identify this jurisdiction",
					"type": "string",
					"example": "53"
				},
				"name": {
					"description": "The name of this jurisdiction",
					"type": "string",
					"example": "WASHINGTON"
				},
				"type": {
					"description": "The type of the jurisdiction, indicating whether it is a country, state/region, city, for example.",
					"enum": ["Country", "State", "County", "City", "Special"],
					"type": "string",
					"example": "State",
					"x-enum-metadata": {
						"name": "JurisdictionType",
						"values": [
							{
								"name": "Country",
								"value": 0
							},
							{
								"name": "State",
								"value": 1
							},
							{
								"name": "County",
								"value": 2
							},
							{
								"name": "City",
								"value": 3
							},
							{
								"name": "Special",
								"value": 4
							}
						]
					}
				},
				"rate": {
					"format": "double",
					"description": "The base rate of tax specific to this jurisdiction.",
					"type": "number",
					"example": 0.06
				},
				"salesRate": {
					"format": "double",
					"description": "The \"Sales\" tax rate specific to this jurisdiction.",
					"type": "number",
					"example": 0.06
				},
				"signatureCode": {
					"description": "The Avalara-supplied signature code for this jurisdiction.",
					"type": "string",
					"example": ""
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "WA"
				},
				"useRate": {
					"format": "double",
					"description": "The \"Seller's Use\" tax rate specific to this jurisdiction.",
					"type": "number",
					"example": 0.06
				},
				"city": {
					"description": "The city name of this jurisdiction",
					"type": "string"
				},
				"county": {
					"description": "The county name of this jurisdiction",
					"type": "string"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country of this jurisdiction.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string"
				},
				"shortName": {
					"description": "A short name of the jurisidiction",
					"type": "string"
				},
				"stateFips": {
					"description": "State FIPS code",
					"type": "string"
				},
				"countyFips": {
					"description": "County FIPS code",
					"type": "string"
				},
				"placeFips": {
					"description": "City FIPS code",
					"type": "string"
				},
				"id": {
					"format": "int32",
					"description": "Unique AvaTax Id of this Jurisdiction",
					"type": "integer"
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "The date this jurisdiction starts to take effect on tax calculations",
					"type": "string"
				},
				"endDate": {
					"format": "date-time",
					"description": "The date this jurisdiction stops to take effect on tax calculations",
					"type": "string"
				}
			},
			"example": {
				"code": "53",
				"name": "WASHINGTON",
				"type": "State",
				"rate": 0.06,
				"salesRate": 0.06,
				"signatureCode": "",
				"region": "WA",
				"useRate": 0.06
			}
		},
		"FetchResult[JurisdictionModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/JurisdictionModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[ResourceFileTypeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceFileTypeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"ResourceFileTypeModel": {
			"description": "Resource File Type Model",
			"type": "object",
			"properties": {
				"resourceFileTypeId": {
					"format": "int32",
					"description": "The resource file type id",
					"type": "integer",
					"example": 1
				},
				"name": {
					"description": "The name of the file type",
					"type": "string",
					"example": "TaxNoticeAttachment"
				}
			},
			"example": {
				"resourceFileTypeId": 1,
				"name": "TaxNoticeAttachment"
			}
		},
		"FetchResult[RateTypeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/RateTypeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"RateTypeModel": {
			"description": "Rate type Model",
			"type": "object",
			"properties": {
				"id": {
					"description": "The unique ID number of this rate type.",
					"type": "string",
					"readOnly": true,
					"example": "1"
				},
				"description": {
					"description": "Description of this rate type.",
					"type": "string",
					"readOnly": true,
					"example": "test"
				},
				"country": {
					"description": "Country code for this rate type",
					"type": "string",
					"readOnly": true,
					"example": "US"
				}
			},
			"example": {
				"id": "1",
				"description": "test",
				"country": "US"
			}
		},
		"FetchResult[FormMasterModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FormMasterModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FormMasterModel": {
			"description": "Represents information about a tax form known to Avalara",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "Unique ID number of this form master object",
					"type": "integer",
					"example": 2415
				},
				"formTypeId": {
					"format": "int32",
					"description": "The type of the form being submitted",
					"type": "integer",
					"example": 0
				},
				"taxFormCode": {
					"description": "Unique tax form code representing this tax form",
					"type": "string"
				},
				"legacyReturnName": {
					"description": "Legacy return name as known in the AvaFileForm table",
					"type": "string",
					"example": "CABOE401A2"
				},
				"taxFormName": {
					"description": "Human readable form summary name",
					"type": "string",
					"example": "CA BOE 401 A2"
				},
				"description": {
					"description": "Description of this tax form",
					"type": "string",
					"example": "State, Local, and District Sales and Use Tax Return"
				},
				"isEffective": {
					"description": "True if this form is available for use",
					"type": "boolean",
					"example": true
				},
				"country": {
					"description": "ISO 3166 code of the country that issued this tax form",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "The region within which this form was issued",
					"type": "string",
					"example": "CA"
				},
				"authorityName": {
					"description": "Tax authority that issued the form",
					"type": "string"
				},
				"shortCode": {
					"description": "DEPRECATED",
					"type": "string"
				},
				"dueDay": {
					"format": "int32",
					"description": "Day of the month when the form is due",
					"type": "integer",
					"example": 20
				},
				"delinquentDay": {
					"format": "int32",
					"description": "Day of the month on which the form is considered delinquent. Almost always the same as DueDay",
					"type": "integer"
				},
				"fiscalYearStartMonth": {
					"format": "int32",
					"description": "Month of the year the state considers as the first fiscal month",
					"type": "integer"
				},
				"hasMultiFrequencies": {
					"description": "Can form support multi frequencies",
					"type": "boolean",
					"example": false
				},
				"isPOARequired": {
					"description": "Does this tax authority require a power of attorney in order to speak to Avalara",
					"type": "boolean",
					"example": false
				},
				"isRegistrationRequired": {
					"description": "True if this form requires that the customer register with the authority",
					"type": "boolean",
					"example": false
				},
				"hasMultiRegistrationMethods": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"hasSchedules": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"hasMultiFilingMethods": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"hasMultiPayMethods": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"isEFTRequired": {
					"description": "Unused",
					"type": "boolean"
				},
				"isFilePayMethodLinked": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"mailingReceivedRuleId": {
					"format": "int32",
					"description": "Unused",
					"type": "integer",
					"example": 0
				},
				"proofOfMailingId": {
					"format": "int32",
					"description": "Unused",
					"type": "integer",
					"example": 0
				},
				"isNegAmountAllowed": {
					"description": "True if you can report a negative amount in a single jurisdiction on the form",
					"type": "boolean"
				},
				"allowNegativeOverallTax": {
					"description": "True if the form overall can go negative",
					"type": "boolean",
					"example": false
				},
				"isNettingRequired": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"roundingMethodId": {
					"format": "int32",
					"description": "Unused",
					"type": "integer",
					"example": 0
				},
				"vendorDiscountAnnualMax": {
					"format": "double",
					"description": "Total amount of discounts that can be received by a vendor each year",
					"type": "number",
					"example": 0.0
				},
				"versionsRequireAuthorityApproval": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"outletReportingMethodId": {
					"format": "int32",
					"description": "Type of outlet reporting for this form",
					"type": "integer",
					"example": 0
				},
				"hasReportingCodes": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"hasPrepayments": {
					"description": "Not sure if used",
					"type": "boolean",
					"example": false
				},
				"grossIncludesInterstateSales": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"grossIncludesTax": {
					"description": "Unused",
					"type": "string"
				},
				"hasEfileFee": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"hasEpayFee": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"hasDependencies": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"requiredEfileTrigger": {
					"description": "Unused",
					"type": "string"
				},
				"requiredEftTrigger": {
					"description": "Unused",
					"type": "string"
				},
				"vendorDiscountEfile": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"vendorDiscountPaper": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"peerReviewed": {
					"description": "Unused",
					"type": "string"
				},
				"peerReviewedId": {
					"description": "Unused",
					"type": "string"
				},
				"peerReviewedDate": {
					"description": "Unused",
					"type": "string"
				},
				"createdUserId": {
					"format": "int32",
					"description": "ID of the Avalara user who created the form",
					"type": "integer",
					"example": 0
				},
				"createdDate": {
					"format": "date-time",
					"description": "Date when form was created",
					"type": "string",
					"example": "0001-01-01T00:00:00"
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "ID of the Avalara user who modified the form",
					"type": "integer",
					"example": 0
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "Date when form was modified",
					"type": "string",
					"example": "0001-01-01T00:00:00"
				},
				"dorAddressMailTo": {
					"description": "Mailing address of the department of revenue",
					"type": "string"
				},
				"dorAddress1": {
					"description": "Mailing address of the department of revenue",
					"type": "string"
				},
				"dorAddress2": {
					"description": "Mailing address of the department of revenue",
					"type": "string"
				},
				"dorAddressCity": {
					"description": "Mailing address of the department of revenue",
					"type": "string"
				},
				"dorAddressRegion": {
					"description": "Mailing address of the department of revenue",
					"type": "string"
				},
				"dorAddressPostalCode": {
					"description": "Mailing address of the department of revenue",
					"type": "string"
				},
				"dorAddressCountry": {
					"description": "Mailing address of the department of revenue",
					"type": "string"
				},
				"zeroAddressMailTo": {
					"description": "Mailing address to use when a zero dollar form is filed",
					"type": "string"
				},
				"zeroAddress1": {
					"description": "Mailing address to use when a zero dollar form is filed",
					"type": "string"
				},
				"zeroAddress2": {
					"description": "Mailing address to use when a zero dollar form is filed",
					"type": "string"
				},
				"zeroAddressCity": {
					"description": "Mailing address to use when a zero dollar form is filed",
					"type": "string"
				},
				"zeroAddressRegion": {
					"description": "Mailing address to use when a zero dollar form is filed",
					"type": "string"
				},
				"zeroAddressPostalCode": {
					"description": "Mailing address to use when a zero dollar form is filed",
					"type": "string"
				},
				"zeroAddressCountry": {
					"description": "Mailing address to use when a zero dollar form is filed",
					"type": "string"
				},
				"amendedAddressMailTo": {
					"description": "Mailing address to use when filing an amended return",
					"type": "string"
				},
				"amendedAddress1": {
					"description": "Mailing address to use when filing an amended return",
					"type": "string"
				},
				"amendedAddress2": {
					"description": "Mailing address to use when filing an amended return",
					"type": "string"
				},
				"amendedAddressCity": {
					"description": "Mailing address to use when filing an amended return",
					"type": "string"
				},
				"amendedAddressRegion": {
					"description": "Mailing address to use when filing an amended return",
					"type": "string"
				},
				"amendedAddressPostalCode": {
					"description": "Mailing address to use when filing an amended return",
					"type": "string"
				},
				"amendedAddressCountry": {
					"description": "Mailing address to use when filing an amended return",
					"type": "string"
				},
				"onlineBackFiling": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"onlineAmendedReturns": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"prepaymentFrequency": {
					"description": "--Need Further Clarification",
					"type": "string"
				},
				"outletLocationIdentifiersRequired": {
					"description": "Unused",
					"type": "boolean"
				},
				"listingSortOrder": {
					"description": "--Need Further Clarification",
					"type": "string"
				},
				"dorWebsite": {
					"description": "Link to the state department of revenue website, if available",
					"type": "string"
				},
				"fileForAllOutlets": {
					"description": "--Need Further Clarification",
					"type": "boolean",
					"example": false
				},
				"paperFormsDoNotHaveDiscounts": {
					"description": "--Need Further Clarification",
					"type": "boolean",
					"example": false
				},
				"stackAggregation": {
					"description": "Internal behavior",
					"type": "boolean",
					"example": false
				},
				"roundingPrecision": {
					"description": "--Need Further Clarification",
					"type": "string"
				},
				"inconsistencyTolerance": {
					"description": "--Need Further Clarification",
					"type": "string"
				},
				"effDate": {
					"format": "date-time",
					"description": "Date when this form became effective",
					"type": "string",
					"example": "2005-04-01T00:00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "Date when this form expired",
					"type": "string",
					"example": "9999-12-31T00:00:00"
				},
				"visibleToCustomers": {
					"description": "True if this form can be shown to customers",
					"type": "boolean",
					"example": false
				},
				"requiresOutletSetup": {
					"description": "True if this form requires that you set up outlets in the state",
					"type": "boolean",
					"example": false
				},
				"achCreditAllowed": {
					"description": "True if this state permits payment by ACH Credit",
					"type": "boolean",
					"example": false
				},
				"reportLevel": {
					"description": "Jurisdiction level of the state",
					"type": "string"
				},
				"postOfficeValidated": {
					"description": "True if this form is verified filed via email",
					"type": "boolean",
					"example": false
				},
				"stackAggregationOption": {
					"description": "Internal Avalara flag",
					"type": "string"
				},
				"sstBehavior": {
					"description": "Internal Avalara flag",
					"type": "string"
				},
				"nonSstBehavior": {
					"description": "Internal Avalara flag",
					"type": "string"
				},
				"dorPhoneNumber": {
					"description": "Phone number of the department of revenue",
					"type": "string"
				},
				"averageCheckClearDays": {
					"description": "Unused",
					"type": "string"
				},
				"filterZeroRatedLineDetails": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"allowsBulkFilingAccounts": {
					"description": "Unused",
					"type": "boolean",
					"example": false
				},
				"bulkAccountInstructionLink": {
					"description": "Unused",
					"type": "string"
				},
				"registrationIdFormat": {
					"description": "Unused",
					"type": "string"
				},
				"thresholdTrigger": {
					"description": "Unused",
					"type": "string"
				},
				"transactionSortingOption": {
					"description": "Unused",
					"type": "string"
				},
				"contentReviewFrequencyId": {
					"format": "int32",
					"description": "Unused",
					"type": "integer"
				},
				"aliasForFormMasterId": {
					"description": "Unused",
					"type": "string"
				}
			},
			"example": {
				"id": 2415,
				"formTypeId": 0,
				"legacyReturnName": "CABOE401A2",
				"taxFormName": "CA BOE 401 A2",
				"description": "State, Local, and District Sales and Use Tax Return",
				"isEffective": true,
				"country": "US",
				"region": "CA",
				"dueDay": 20,
				"hasMultiFrequencies": false,
				"isPOARequired": false,
				"isRegistrationRequired": false,
				"hasMultiRegistrationMethods": false,
				"hasSchedules": false,
				"hasMultiFilingMethods": false,
				"hasMultiPayMethods": false,
				"isEFTRequired": false,
				"isFilePayMethodLinked": false,
				"mailingReceivedRuleId": 0,
				"proofOfMailingId": 0,
				"isNegAmountAllowed": false,
				"allowNegativeOverallTax": false,
				"isNettingRequired": false,
				"roundingMethodId": 0,
				"vendorDiscountAnnualMax": 0.0,
				"versionsRequireAuthorityApproval": false,
				"outletReportingMethodId": 0,
				"hasReportingCodes": false,
				"hasPrepayments": false,
				"grossIncludesInterstateSales": false,
				"hasEfileFee": false,
				"hasEpayFee": false,
				"hasDependencies": false,
				"vendorDiscountEfile": false,
				"vendorDiscountPaper": false,
				"createdUserId": 0,
				"createdDate": "0001-01-01T00:00:00",
				"modifiedUserId": 0,
				"modifiedDate": "0001-01-01T00:00:00",
				"onlineBackFiling": false,
				"onlineAmendedReturns": false,
				"fileForAllOutlets": false,
				"paperFormsDoNotHaveDiscounts": false,
				"stackAggregation": false,
				"effDate": "2005-04-01T00:00:00",
				"endDate": "9999-12-31T00:00:00",
				"visibleToCustomers": false,
				"requiresOutletSetup": false,
				"achCreditAllowed": false,
				"postOfficeValidated": false,
				"filterZeroRatedLineDetails": false,
				"allowsBulkFilingAccounts": false
			}
		},
		"FetchResult[TaxTypeGroupModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxTypeGroupModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"TaxTypeGroupModel": {
			"description": "Represents a tax type group",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax type group.",
					"type": "integer",
					"example": 1
				},
				"taxTypeGroup": {
					"description": "The unique human readable Id of this tax type group.",
					"type": "string",
					"example": "SalesAndUse"
				},
				"description": {
					"description": "The description of this tax type group.",
					"type": "string",
					"example": "Sales and Use"
				},
				"subscriptionTypeId": {
					"format": "int32",
					"description": "If this tax type group requires a subscription, this contains the ID number of the subscription type required to use it.",
					"type": "integer"
				},
				"subscriptionDescription": {
					"description": "If this tax type group requires a subscription, this contains the friendly name of the subscription type required to use it.",
					"type": "string"
				},
				"tabName": {
					"description": "The name of the tab in the AvaTax website corresponding to this tax type group.",
					"type": "string"
				},
				"showColumn": {
					"description": "True if this tax type group is displayed in the user interface of the AvaTax website.",
					"type": "boolean"
				},
				"displaySequence": {
					"format": "int32",
					"description": "The order this record is being returned in the response",
					"type": "integer",
					"example": 0
				}
			},
			"example": {
				"id": 1,
				"taxTypeGroup": "SalesAndUse",
				"description": "Sales and Use",
				"displaySequence": 0
			}
		},
		"FetchResult[TaxSubTypeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxSubTypeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"TaxSubTypeModel": {
			"description": "Represents a tax subtype",
			"required": ["id", "taxSubType", "description", "taxTypeGroup"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax sub-type.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"taxSubType": {
					"description": "The unique human readable Id of this tax sub-type.",
					"type": "string",
					"readOnly": true,
					"example": "*"
				},
				"description": {
					"description": "The description of this tax sub-type.",
					"type": "string",
					"readOnly": true,
					"example": "ALL"
				},
				"taxTypeGroup": {
					"description": "The upper level group of tax types.",
					"type": "string",
					"readOnly": true
				}
			},
			"example": {
				"id": 1,
				"taxSubType": "*",
				"description": "ALL"
			}
		},
		"FetchResult[NexusTaxTypeGroupModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusTaxTypeGroupModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NexusTaxTypeGroupModel": {
			"description": "Represents a group of tax types",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this nexus tax type group.",
					"type": "integer",
					"example": 1
				},
				"nexusTaxTypeGroupId": {
					"description": "The unique human readable Id of this nexus tax type group.",
					"type": "string",
					"example": "SalesAndUse"
				},
				"description": {
					"description": "The description of this nexus tax type group.",
					"type": "string",
					"example": "Sales and Use"
				},
				"subscriptionTypeId": {
					"format": "int32",
					"description": "If this tax type group requires a subscription, this contains the ID number of the subscription type required to use it.",
					"type": "integer"
				},
				"subscriptionDescription": {
					"description": "If this tax type group requires a subscription, this contains the friendly name of the subscription type required to use it.",
					"type": "string"
				},
				"tabName": {
					"description": "The name of the tab in the AvaTax website corresponding to this tax type group.",
					"type": "string"
				},
				"showColumn": {
					"description": "True if this tax type group is displayed in the user interface of the AvaTax website.",
					"type": "boolean"
				}
			},
			"example": {
				"id": 1,
				"nexusTaxTypeGroupId": "SalesAndUse",
				"description": "Sales and Use"
			}
		},
		"FetchResult[CommunicationsTSPairModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CommunicationsTSPairModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"CommunicationsTSPairModel": {
			"description": "Represents a transaction/service type pair for telecommunications tax",
			"required": ["transactionTypeId", "serviceTypeId"],
			"type": "object",
			"properties": {
				"transactionTypeId": {
					"format": "int32",
					"description": "The numeric Id of the transaction type.",
					"type": "integer",
					"example": 13
				},
				"serviceTypeId": {
					"format": "int32",
					"description": "The numeric Id of the service type.",
					"type": "integer",
					"example": 6
				},
				"AvaTax.Communications.TransactionType": {
					"description": "The name of the transaction type.",
					"type": "string"
				},
				"AvaTax.Communications.ServiceType": {
					"description": "The name of the service type.",
					"type": "string"
				},
				"description": {
					"description": "The description of the transaction/service type pair.",
					"type": "string",
					"example": "Basic monthly flat-rate charge for cellular/wireless service."
				},
				"requiredParameters": {
					"description": "List of the parameters (among Charge, Minutes and Lines) that will be used for calculation for this T/S pair.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["AvaTax.Communications.Charge", "AvaTax.Communications.Minutes"]
				}
			},
			"example": {
				"transactionTypeId": 13,
				"serviceTypeId": 6,
				"AvaTax.Communications.TransactionType": "Cellular",
				"AvaTax.Communications.ServiceType": "Access Charge",
				"description": "Basic monthly flat-rate charge for cellular/wireless service.",
				"requiredParameters": ["AvaTax.Communications.Charge", "AvaTax.Communications.Minutes"]
			}
		},
		"FetchResult[CommunicationsTransactionTypeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CommunicationsTransactionTypeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"CommunicationsTransactionTypeModel": {
			"description": "Represents information about a type of telecommunications transaction",
			"required": ["transactionTypeId"],
			"type": "object",
			"properties": {
				"transactionTypeId": {
					"format": "int32",
					"description": "The numeric Id of the transaction type.",
					"type": "integer",
					"example": 13
				},
				"AvaTax.Communications.TransactionType": {
					"description": "The name of the transaction type.",
					"type": "string"
				}
			},
			"example": {
				"transactionTypeId": 13,
				"AvaTax.Communications.TransactionType": "Cellular"
			}
		},
		"FetchResult[ExposureZoneModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExposureZoneModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[CoverLetterModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CoverLetterModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[ExemptionReasonModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExemptionReasonModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[UomModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/UomModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"UomModel": {
			"description": "The \"Unit of Measurement\" model captures information about a type of measurement.  Types of measurement refer to\r\ndifferent scales for the same dimension.  For example, measurements of type \"Distance\" may include units of measurement\r\nsuch as meters, feet, inches, and miles.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this unit of measurement.",
					"type": "integer",
					"example": 2
				},
				"code": {
					"description": "The code that refers to this unit of measurement.",
					"type": "string",
					"example": "British thermal unit (International Table)"
				},
				"shortDesc": {
					"description": "A short description of this unit of measurement.",
					"type": "string",
					"example": "British thermal unit (International Table)"
				},
				"description": {
					"description": "A longer description of this unit of measurement.",
					"type": "string",
					"example": "British thermal unit (International Table)"
				},
				"measurementTypeId": {
					"format": "int32",
					"description": "The ID number of the measurement type, such as \"Distance\" or \"Mass\".",
					"type": "integer",
					"example": 1
				},
				"measurementTypeCode": {
					"description": "The code describing the measurement type.",
					"type": "string",
					"example": "Energy"
				},
				"siUOM": {
					"description": "For a particular measurement type, this is the ID number of the unit of measurement object corresponding to the\r\nInternational System of Units (abbreviated SI) unit of measurement standard.  This pointer allows you to select\r\nthe SI unit of measurement for a particular measurement type.",
					"type": "string",
					"example": "374"
				},
				"measurementTypeDescription": {
					"description": "A description of the measurement type system.",
					"type": "string",
					"example": "Energy"
				},
				"isSiUom": {
					"description": "True if this measurement is an International System of Units (abbreviated SI) defined standard.",
					"type": "boolean",
					"example": false
				}
			},
			"example": {
				"id": 2,
				"code": "British thermal unit (International Table)",
				"shortDesc": "British thermal unit (International Table)",
				"description": "British thermal unit (International Table)",
				"measurementTypeId": 1,
				"measurementTypeCode": "Energy",
				"siUOM": "374",
				"measurementTypeDescription": "Energy",
				"isSiUom": false
			}
		},
		"FetchResult[HsCodeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/HsCodeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"HsCodeModel": {
			"description": "Describes an element in the harmonized tariff system.\r\n            \r\nAccording to the [United States International Trade Commission](https://www.usitc.gov), the harmonized tariff schedule is defined as follows:\r\n            \r\nThe HTS is a U.S. nomenclature system used to classify traded goods based on their material composition, product name, and/or intended\r\nfunction. The HTS is designed so that each article falls into only one category. It is divided into chapters, each of which has a 2-digit\r\nnumber. Each product category within the various chapters is designated by 4, 6, 8, or 10 digits. The 4-digit categories are called\r\n\"headings.\" The 6-, 8- and 10-digit classifications are called \"subheadings.\"\r\n            \r\nWithin AvaTax, the `HsCodeModel` object can refer to sections, chapters, headings, subheadings, or articles.  Each object represents one\r\nclassification.  Many of these objects have child objects underneath them; these child objects are more specific than their parent objects.",
			"required": ["id", "description"],
			"type": "object",
			"properties": {
				"hsCode": {
					"description": "The harmonized tariff system code for this section and chapter.\r\n            \r\nA full HS code contains more than six characters.  Partial HS codes with two, four, or six characters may have child codes underneath them.\r\nA child code is one that contains greater specificity than a parent code.  It is recommended that when you identify a product you use\r\nthe most detailed code available to identify it.\r\n            \r\nTop level sections do not have HS Codes.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "hsCode"
				},
				"id": {
					"format": "int64",
					"description": "A unique identifier for this harmonized tariff system code.\r\n            \r\nTo search for a list of child codes underneath a specific HS code, search for codes where the child's `parentHsCodeId` value matches the parent's `id` value.",
					"type": "integer",
					"example": 12345
				},
				"parentHsCodeId": {
					"format": "int64",
					"description": "The unique ID number of the parent HS code or HS code prefix.\r\n            \r\nTo search for a list of child codes underneath a specific HS code, search for codes where the child's `parentHsCodeId` value matches the parent's `id` value.",
					"type": "integer",
					"example": 0
				},
				"description": {
					"description": "A human readable description that identifies Code descriptive text for this Section, Chapter, Heading, or Subheading.",
					"type": "string",
					"readOnly": true,
					"example": "HSCode"
				},
				"system": {
					"description": "The system to which this HS code belongs.",
					"type": "string",
					"readOnly": true,
					"example": "system"
				},
				"destinationCountry": {
					"description": "The destination country identified with this HS Code.  This value applies when certain products are classified in specific ways by\r\nbilateral trade agreements.",
					"type": "string",
					"example": "US"
				},
				"effDate": {
					"format": "date",
					"description": "For codes that have been expired or defined on specific dates, this value indicates the earliest\r\ndate for which this code is considered valid.\r\n            \r\nIf this value is null, this code can be used for any valid date earlier than its end date.",
					"type": "string"
				},
				"endDate": {
					"format": "date",
					"description": "For codes that have been expired or defined on specific dates, this value indicates the latest\r\ndate for which this code is considered valid.\r\n            \r\nIf this value is null, this code can be used for any valid date later than its effective date.",
					"type": "string"
				}
			},
			"example": {
				"hsCode": "hsCode",
				"id": 12345,
				"parentHsCodeId": 0,
				"description": "HSCode",
				"system": "system",
				"destinationCountry": "US"
			}
		},
		"FetchResult[PostalCodeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/PostalCodeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"PostalCodeModel": {
			"description": "Represents a PostalCode and its associated data like: country, region, effective dates, etc.",
			"type": "object",
			"properties": {
				"country": {
					"description": "Country this PostalCode locates in",
					"type": "string",
					"readOnly": true,
					"example": "US"
				},
				"region": {
					"description": "The Region/State/Province this PostalCode locates in",
					"type": "string",
					"readOnly": true,
					"example": "WA"
				},
				"taxRegionId": {
					"format": "int32",
					"description": "An Avalara assigned TaxRegion Id associated to the PostalCode",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"effDate": {
					"format": "date-time",
					"description": "The date when the PostalCode becomes effective",
					"type": "string",
					"readOnly": true,
					"example": "2005-04-01T00:00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "The date when the PostalCode becomes expired",
					"type": "string",
					"readOnly": true,
					"example": "9999-12-31T00:00:00"
				},
				"postalCode": {
					"description": "The postalCode",
					"type": "string",
					"readOnly": true,
					"example": "98104"
				}
			},
			"example": {
				"country": "US",
				"region": "WA",
				"taxRegionId": 0,
				"effDate": "2005-04-01T00:00:00",
				"endDate": "9999-12-31T00:00:00",
				"postalCode": "98104"
			}
		},
		"FetchResult[MarketplaceLocationModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/MarketplaceLocationModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"MarketplaceLocationModel": {
			"description": "Marketplace Location Output model",
			"type": "object",
			"properties": {
				"region": {
					"description": "Marketplace Location State",
					"type": "string",
					"example": "AL"
				},
				"country": {
					"description": "Marketplace Location Country",
					"type": "string",
					"example": "US"
				},
				"marketplaceId": {
					"description": "Marketplace Location Id",
					"type": "string",
					"example": "a0n0b00000ODPh2AAH"
				},
				"marketplace": {
					"description": "Marketplace Location",
					"type": "string",
					"example": "Amazon"
				},
				"marketplaceAdoptionDate": {
					"format": "date-time",
					"description": "Marketplace Location Adoption Date",
					"type": "string",
					"example": "2019-01-01T00:00:00"
				},
				"marketplaceEndDate": {
					"format": "date-time",
					"description": "Marketplace Location End Date",
					"type": "string",
					"example": "9999-12-31T00:00:00"
				},
				"legislativeEffectiveDate": {
					"format": "date-time",
					"description": "Marketplace Location Legislative Effective Date",
					"type": "string"
				},
				"enforcementDate": {
					"format": "date-time",
					"description": "Marketplace Location Enforcement Date",
					"type": "string",
					"example": "2019-10-01T00:00:00"
				},
				"createdDate": {
					"format": "date-time",
					"description": "Marketplace Location Created Date",
					"type": "string",
					"example": "2019-11-21T00:00:00"
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "Marketplace Location Modified Date",
					"type": "string",
					"example": "2019-11-21T00:00:00"
				}
			},
			"example": {
				"region": "AL",
				"country": "US",
				"marketplaceId": "a0n0b00000ODPh2AAH",
				"marketplace": "Amazon",
				"marketplaceAdoptionDate": "2019-01-01T00:00:00",
				"marketplaceEndDate": "9999-12-31T00:00:00",
				"enforcementDate": "2019-10-01T00:00:00",
				"createdDate": "2019-11-21T00:00:00",
				"modifiedDate": "2019-11-21T00:00:00"
			}
		},
		"CompanyDistanceThresholdModel": {
			"description": "A company-distance-threshold model indicates the distance between a company\r\nand the taxing borders of various countries.  Distance thresholds are necessary\r\nto correctly calculate some value-added taxes.\r\n            \r\nDistance thresholds only apply to sales of goods in certain countries.  A distance threshold\r\nis applied for each ship-from/ship-to combination of countries.  The threshold amount is defined by\r\nthe ship-to country.\r\n            \r\nGenerally, if you have exceeded a distance threshold for taxes between a pair of countries, your tax calculation\r\nwill be determined to be the rate in the destination country.  If you have not exceeded the threshold,\r\nyour tax calculation will be determined to be the rate in the origin country.\r\n            \r\nThe amount of a threshold is not tracked or managed in AvaTax, but the decision of your tax compliance department\r\nas to whether you have exceeded this threshold is maintained in this object.\r\n            \r\nBy default, you are considered to have exceeded tax thresholds. If you wish to change this default, you can create\r\na company-distance-threshold object to select the correct behavior for this origin/destination tax calculation process.",
			"required": ["originCountry", "destinationCountry", "type"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "A unique ID number representing this distance threshold object.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"companyId": {
					"format": "int32",
					"description": "The ID number of the company that defined this distance threshold.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"originCountry": {
					"description": "The origin country for this threshold.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "FR"
				},
				"destinationCountry": {
					"description": "The destination country for this threshold.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "BR"
				},
				"effDate": {
					"format": "date-time",
					"description": "For distance threshold values that change over time, this is the earliest date for which this distance\r\nthreshold is valid.  If null, this distance threshold is valid for all dates earlier than the `endDate` field.",
					"type": "string"
				},
				"endDate": {
					"format": "date-time",
					"description": "For distance threshold values that change over time, this is the latest date for which this distance\r\nthreshold is valid.  If null, this distance threshold is valid for all dates later than the `effDate` field.",
					"type": "string"
				},
				"thresholdExceeded": {
					"description": "True if your tax professional has determined that the value-added tax distance threshold is exceeded for this pair of countries.\r\n            \r\nIf you set this value to `false`, your value added taxes will be calculated using the origin country.  Otherwise, value\r\nadded taxes will be calculated on the destination country.",
					"type": "boolean",
					"example": false
				},
				"type": {
					"description": "Indicates the distance threshold type.\r\n            \r\nThis value can be either `Sale` or `Purchase`.",
					"maxLength": 20,
					"minLength": 0,
					"type": "string",
					"example": "Sale"
				}
			},
			"example": {
				"id": 0,
				"companyId": 0,
				"originCountry": "FR",
				"destinationCountry": "BR",
				"thresholdExceeded": false,
				"type": "Sale"
			}
		},
		"FetchResult[CompanyDistanceThresholdModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyDistanceThresholdModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[EcmsModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/EcmsModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"CreateECommerceTokenInputModel": {
			"description": "A model used to initialize a new CertCapture eCommerce token.",
			"required": ["customerNumber"],
			"type": "object",
			"properties": {
				"customerNumber": {
					"description": "The customer's number that the token will be issued for.",
					"type": "string",
					"example": "1"
				}
			},
			"example": {
				"customerNumber": "1"
			}
		},
		"FetchResult[ECommerceTokenOutputModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ECommerceTokenOutputModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"ECommerceTokenOutputModel": {
			"description": "The resource model returned by the ECommerceTokenController's endpoints.",
			"required": ["token", "createdDate", "expirationDate"],
			"type": "object",
			"properties": {
				"token": {
					"description": "The JWT token that authorizes the gencert tool to operate.",
					"type": "string",
					"example": "jwt token for gencert utility"
				},
				"clientIds": {
					"description": "The list of clients that the token is valid for.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					},
					"example": [1, 2, 3]
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date the token was created.",
					"type": "string",
					"example": "2000-01-01T00:00:00"
				},
				"expirationDate": {
					"format": "date-time",
					"description": "The date that the token will expire.",
					"type": "string",
					"example": "2000-01-01T00:00:00"
				}
			},
			"example": {
				"token": "jwt token for gencert utility",
				"clientIds": [1, 2, 3],
				"createdDate": "2000-01-01T00:00:00",
				"expirationDate": "2000-01-01T00:00:00"
			}
		},
		"RefreshECommerceTokenInputModel": {
			"description": "A model used to request the refresh of a CertCapture eCommerce token.",
			"required": ["token"],
			"type": "object",
			"properties": {
				"token": {
					"description": "The token that requires its expiration to be extended.",
					"type": "string",
					"example": "jwt token for gencert utility"
				}
			},
			"example": {
				"token": "jwt token for gencert utility"
			}
		},
		"CappedFetchResult[ErrorTransactionOutputModel]": {
			"type": "object",
			"properties": {
				"@isRecordsetCountCapped": {
					"type": "boolean"
				},
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ErrorTransactionOutputModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"ErrorTransactionOutputModel": {
			"description": "Error Transaction Model",
			"required": ["documentType", "documentCode"],
			"type": "object",
			"properties": {
				"errorCode": {
					"description": "Error code of the error result from transaction creation",
					"type": "string",
					"example": "GetTaxError"
				},
				"errorMessage": {
					"description": "Error message of the error result from transaction creation",
					"type": "string",
					"example": "Invalid or missing state/province code (CQ)."
				},
				"avataxErrorJson": {
					"description": "The full JSON of the error result from transaction creation",
					"type": "string",
					"example": "{\r\n  \"error\": {\r\n    \"code\": \"GetTaxError\",\r\n    \"message\": \"Invalid or missing state/province code (CQ).\",\r\n    \"target\": \"Unknown\",\r\n    \"details\": [\r\n      {\r\n        \"code\": \"GetTaxError\",\r\n        \"number\": 300,\r\n        \"message\": \"Invalid or missing state/province code (CQ).\",\r\n        \"description\": \"CQ is not a known state or province.\",\r\n        \"faultCode\": \"GetTaxError\",\r\n        \"helpLink\": \"http://developer.avalara.com/avatax/errors/GetTaxError\",\r\n        \"refersTo\": \"Addresses[0]\",\r\n        \"severity\": \"Error\"\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"avataxCreateTransactionJson": {
					"description": "The full JSON of the transaction creation request",
					"type": "string",
					"example": "{\r\n  \"id\": 123456789,\r\n  \"code\": \"a0538d37-c476-4e4a-9c2e-a62d740583b8\",\r\n  \"companyId\": 12345,\r\n  \"date\": \"2019-08-29\",\r\n  \"status\": \"Committed\",\r\n  \"type\": \"SalesInvoice\",\r\n  \"currencyCode\": \"USD\",\r\n  \"entityUseCode\": \"\",\r\n  \"customerVendorCode\": \"ABC\",\r\n  \"customerCode\": \"ABC\",\r\n  \"exemptNo\": \"\",\r\n  \"reconciled\": true,\r\n  \"locationCode\": \"DEFAULT\",\r\n  \"salespersonCode\": \"DEF\",\r\n  \"taxOverrideType\": \"None\",\r\n  \"taxOverrideAmount\": 0,\r\n  \"taxOverrideReason\": \"\",\r\n  \"totalAmount\": 1000,\r\n  \"totalExempt\": 0,\r\n  \"totalDiscount\": 0,\r\n  \"totalTax\": 62.5,\r\n  \"totalTaxable\": 1000,\r\n  \"totalTaxCalculated\": 62.5,\r\n  \"adjustmentReason\": \"NotAdjusted\",\r\n  \"adjustmentDescription\": \"\",\r\n  \"locked\": false,\r\n  \"region\": \"CA\",\r\n  \"country\": \"US\",\r\n  \"version\": 0,\r\n  \"originAddressId\": 123456789,\r\n  \"destinationAddressId\": 123456789,\r\n  \"isSellerImporterOfRecord\": false,\r\n  \"description\": \"Yarn\",\r\n  \"taxDate\": \"2019-08-29T00:00:00-07:00\",\r\n  \"lines\": [\r\n    {\r\n      \"id\": 123456789,\r\n      \"transactionId\": 123456789,\r\n      \"lineNumber\": \"1\",\r\n      \"boundaryOverrideId\": 0,\r\n      \"entityUseCode\": \"\",\r\n      \"description\": \"Yarn\",\r\n      \"destinationAddressId\": 12345,\r\n      \"originAddressId\": 123456789,\r\n      \"discountAmount\": 100,\r\n      \"discountTypeId\": 0,\r\n      \"exemptAmount\": 0,\r\n      \"exemptCertId\": 0,\r\n      \"exemptNo\": \"\",\r\n      \"isItemTaxable\": true,\r\n      \"isSSTP\": false,\r\n      \"itemCode\": \"116292\",\r\n      \"lineAmount\": 1000,\r\n      \"quantity\": 1,\r\n      \"ref1\": \"Note: Deliver to Bob\",\r\n      \"reportingDate\": \"2019-08-29\",\r\n      \"revAccount\": \"\",\r\n      \"sourcing\": \"Destination\",\r\n      \"tax\": 62.5,\r\n      \"taxableAmount\": 1000,\r\n      \"taxCalculated\": 62.5,\r\n      \"taxCode\": \"PS081282\",\r\n      \"taxDate\": \"2019-08-29\",\r\n      \"taxEngine\": \"\",\r\n      \"taxOverrideType\": \"None\",\r\n      \"taxOverrideAmount\": 0,\r\n      \"taxOverrideReason\": \"\",\r\n      \"taxIncluded\": false,\r\n      \"details\": [\r\n        {\r\n          \"id\": 123456789,\r\n          \"transactionLineId\": 123456789,\r\n          \"transactionId\": 123456789,\r\n          \"addressId\": 12345,\r\n          \"country\": \"US\",\r\n          \"region\": \"CA\",\r\n          \"stateFIPS\": \"06\",\r\n          \"exemptAmount\": 0,\r\n          \"exemptReasonId\": 4,\r\n          \"inState\": false,\r\n          \"jurisCode\": \"06\",\r\n          \"jurisName\": \"CALIFORNIA\",\r\n          \"jurisdictionId\": 5000531,\r\n          \"signatureCode\": \"AGAM\",\r\n          \"stateAssignedNo\": \"\",\r\n          \"jurisType\": \"STA\",\r\n          \"nonTaxableAmount\": 0,\r\n          \"nonTaxableRuleId\": 0,\r\n          \"nonTaxableType\": \"BaseRule\",\r\n          \"rate\": 0.0625,\r\n          \"rateRuleId\": 1321915,\r\n          \"rateSourceId\": 3,\r\n          \"serCode\": \"\",\r\n          \"sourcing\": \"Destination\",\r\n          \"tax\": 62.5,\r\n          \"taxableAmount\": 1000,\r\n          \"taxType\": \"Sales\",\r\n          \"taxName\": \"CA STATE TAX\",\r\n          \"taxAuthorityTypeId\": 45,\r\n          \"taxRegionId\": 2127184,\r\n          \"taxCalculated\": 62.5,\r\n          \"taxOverride\": 0,\r\n          \"rateType\": \"General\"\r\n        }\r\n      ],\r\n      \"vatNumberTypeId\": 0\r\n    }\r\n  ],\r\n  \"addresses\": [\r\n    {\r\n      \"id\": 0,\r\n      \"transactionId\": 0,\r\n      \"boundaryLevel\": \"Address\",\r\n      \"line1\": \"100 Ravine Lane Northeast #220\",\r\n      \"city\": \"Bainbridge Island\",\r\n      \"region\": \"WA\",\r\n      \"postalCode\": \"98110\",\r\n      \"country\": \"US\",\r\n      \"taxRegionId\": 0\r\n    }\r\n  ],\r\n  \"taxDetailsByTaxType\": [\r\n    {\r\n      \"taxType\": \"SalesAndUse\",\r\n      \"totalTaxable\": 100,\r\n      \"totalExempt\": 0.05,\r\n      \"totalNonTaxable\": 0,\r\n      \"totalTax\": 0.625\r\n    }\r\n  ]\r\n}"
				},
				"datasource": {
					"description": "The datasource instance that made the transaction creation call",
					"type": "string",
					"example": "f92bd902-29c0-410b-9093-514add6d7bfd"
				},
				"documentDate": {
					"format": "date-time",
					"description": "The date of the document",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"expiresAt": {
					"format": "date-time",
					"description": "The date that this ErrorTransaction will be automatically purged from the detabase.",
					"type": "string",
					"example": "2021-09-30T00:00:00+00:00"
				},
				"amount": {
					"format": "double",
					"description": "The amount of the transaction.",
					"type": "number",
					"example": 2.34
				},
				"datasourceSource": {
					"description": "The Datasource source of the transaction creation call.",
					"type": "string",
					"example": "Extractor"
				},
				"shipToCountry": {
					"description": "The country of the ship to address for the transaction creation call.",
					"type": "string",
					"example": "US"
				},
				"shipToRegion": {
					"description": "The region of the ship to address for the transaction creation call.",
					"type": "string",
					"example": "WA"
				},
				"documentType": {
					"description": "Type of transaction of the error transaction",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesOrder",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"documentCode": {
					"description": "The internal reference code (used by the client application) of the error transaction",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "defd84ac-5083-4f2c-b22d-61cb6d92358c"
				}
			},
			"example": {
				"errorCode": "GetTaxError",
				"errorMessage": "Invalid or missing state/province code (CQ).",
				"avataxErrorJson": "{\r\n  \"error\": {\r\n    \"code\": \"GetTaxError\",\r\n    \"message\": \"Invalid or missing state/province code (CQ).\",\r\n    \"target\": \"Unknown\",\r\n    \"details\": [\r\n      {\r\n        \"code\": \"GetTaxError\",\r\n        \"number\": 300,\r\n        \"message\": \"Invalid or missing state/province code (CQ).\",\r\n        \"description\": \"CQ is not a known state or province.\",\r\n        \"faultCode\": \"GetTaxError\",\r\n        \"helpLink\": \"http://developer.avalara.com/avatax/errors/GetTaxError\",\r\n        \"refersTo\": \"Addresses[0]\",\r\n        \"severity\": \"Error\"\r\n      }\r\n    ]\r\n  }\r\n}",
				"avataxCreateTransactionJson": "{\r\n  \"id\": 123456789,\r\n  \"code\": \"a0538d37-c476-4e4a-9c2e-a62d740583b8\",\r\n  \"companyId\": 12345,\r\n  \"date\": \"2019-08-29\",\r\n  \"status\": \"Committed\",\r\n  \"type\": \"SalesInvoice\",\r\n  \"currencyCode\": \"USD\",\r\n  \"entityUseCode\": \"\",\r\n  \"customerVendorCode\": \"ABC\",\r\n  \"customerCode\": \"ABC\",\r\n  \"exemptNo\": \"\",\r\n  \"reconciled\": true,\r\n  \"locationCode\": \"DEFAULT\",\r\n  \"salespersonCode\": \"DEF\",\r\n  \"taxOverrideType\": \"None\",\r\n  \"taxOverrideAmount\": 0,\r\n  \"taxOverrideReason\": \"\",\r\n  \"totalAmount\": 1000,\r\n  \"totalExempt\": 0,\r\n  \"totalDiscount\": 0,\r\n  \"totalTax\": 62.5,\r\n  \"totalTaxable\": 1000,\r\n  \"totalTaxCalculated\": 62.5,\r\n  \"adjustmentReason\": \"NotAdjusted\",\r\n  \"adjustmentDescription\": \"\",\r\n  \"locked\": false,\r\n  \"region\": \"CA\",\r\n  \"country\": \"US\",\r\n  \"version\": 0,\r\n  \"originAddressId\": 123456789,\r\n  \"destinationAddressId\": 123456789,\r\n  \"isSellerImporterOfRecord\": false,\r\n  \"description\": \"Yarn\",\r\n  \"taxDate\": \"2019-08-29T00:00:00-07:00\",\r\n  \"lines\": [\r\n    {\r\n      \"id\": 123456789,\r\n      \"transactionId\": 123456789,\r\n      \"lineNumber\": \"1\",\r\n      \"boundaryOverrideId\": 0,\r\n      \"entityUseCode\": \"\",\r\n      \"description\": \"Yarn\",\r\n      \"destinationAddressId\": 12345,\r\n      \"originAddressId\": 123456789,\r\n      \"discountAmount\": 100,\r\n      \"discountTypeId\": 0,\r\n      \"exemptAmount\": 0,\r\n      \"exemptCertId\": 0,\r\n      \"exemptNo\": \"\",\r\n      \"isItemTaxable\": true,\r\n      \"isSSTP\": false,\r\n      \"itemCode\": \"116292\",\r\n      \"lineAmount\": 1000,\r\n      \"quantity\": 1,\r\n      \"ref1\": \"Note: Deliver to Bob\",\r\n      \"reportingDate\": \"2019-08-29\",\r\n      \"revAccount\": \"\",\r\n      \"sourcing\": \"Destination\",\r\n      \"tax\": 62.5,\r\n      \"taxableAmount\": 1000,\r\n      \"taxCalculated\": 62.5,\r\n      \"taxCode\": \"PS081282\",\r\n      \"taxDate\": \"2019-08-29\",\r\n      \"taxEngine\": \"\",\r\n      \"taxOverrideType\": \"None\",\r\n      \"taxOverrideAmount\": 0,\r\n      \"taxOverrideReason\": \"\",\r\n      \"taxIncluded\": false,\r\n      \"details\": [\r\n        {\r\n          \"id\": 123456789,\r\n          \"transactionLineId\": 123456789,\r\n          \"transactionId\": 123456789,\r\n          \"addressId\": 12345,\r\n          \"country\": \"US\",\r\n          \"region\": \"CA\",\r\n          \"stateFIPS\": \"06\",\r\n          \"exemptAmount\": 0,\r\n          \"exemptReasonId\": 4,\r\n          \"inState\": false,\r\n          \"jurisCode\": \"06\",\r\n          \"jurisName\": \"CALIFORNIA\",\r\n          \"jurisdictionId\": 5000531,\r\n          \"signatureCode\": \"AGAM\",\r\n          \"stateAssignedNo\": \"\",\r\n          \"jurisType\": \"STA\",\r\n          \"nonTaxableAmount\": 0,\r\n          \"nonTaxableRuleId\": 0,\r\n          \"nonTaxableType\": \"BaseRule\",\r\n          \"rate\": 0.0625,\r\n          \"rateRuleId\": 1321915,\r\n          \"rateSourceId\": 3,\r\n          \"serCode\": \"\",\r\n          \"sourcing\": \"Destination\",\r\n          \"tax\": 62.5,\r\n          \"taxableAmount\": 1000,\r\n          \"taxType\": \"Sales\",\r\n          \"taxName\": \"CA STATE TAX\",\r\n          \"taxAuthorityTypeId\": 45,\r\n          \"taxRegionId\": 2127184,\r\n          \"taxCalculated\": 62.5,\r\n          \"taxOverride\": 0,\r\n          \"rateType\": \"General\"\r\n        }\r\n      ],\r\n      \"vatNumberTypeId\": 0\r\n    }\r\n  ],\r\n  \"addresses\": [\r\n    {\r\n      \"id\": 0,\r\n      \"transactionId\": 0,\r\n      \"boundaryLevel\": \"Address\",\r\n      \"line1\": \"100 Ravine Lane Northeast #220\",\r\n      \"city\": \"Bainbridge Island\",\r\n      \"region\": \"WA\",\r\n      \"postalCode\": \"98110\",\r\n      \"country\": \"US\",\r\n      \"taxRegionId\": 0\r\n    }\r\n  ],\r\n  \"taxDetailsByTaxType\": [\r\n    {\r\n      \"taxType\": \"SalesAndUse\",\r\n      \"totalTaxable\": 100,\r\n      \"totalExempt\": 0.05,\r\n      \"totalNonTaxable\": 0,\r\n      \"totalTax\": 0.625\r\n    }\r\n  ]\r\n}",
				"datasource": "f92bd902-29c0-410b-9093-514add6d7bfd",
				"documentDate": "2020-07-30T00:00:00+00:00",
				"expiresAt": "2021-09-30T00:00:00+00:00",
				"amount": 2.34,
				"datasourceSource": "Extractor",
				"shipToCountry": "US",
				"shipToRegion": "WA",
				"documentType": "SalesOrder",
				"documentCode": "defd84ac-5083-4f2c-b22d-61cb6d92358c"
			}
		},
		"DeleteErrorTransactionsRequestModel": {
			"description": "Request model for when a user is deleting multiple error transaction",
			"required": ["models"],
			"type": "object",
			"properties": {
				"models": {
					"description": "List of error transactions to be deleted",
					"maxLength": 1000,
					"minLength": 1,
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ErrorTransactionModelBase"
					},
					"example": [
						{
							"documentType": "SalesOrder",
							"documentCode": "85884f74-22e4-4e90-a922-3db2d8cd4a04"
						}
					]
				}
			},
			"example": {
				"models": [
					{
						"documentType": "SalesOrder",
						"documentCode": "85884f74-22e4-4e90-a922-3db2d8cd4a04"
					}
				]
			}
		},
		"ErrorTransactionModelBase": {
			"description": "Base model class for single error transaction delete request",
			"required": ["documentType", "documentCode"],
			"type": "object",
			"properties": {
				"documentType": {
					"description": "Type of transaction of the error transaction",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesOrder",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"documentCode": {
					"description": "The internal reference code (used by the client application) of the error transaction",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "b12a2db6-a651-4878-8f6f-4794cf5ca9e3"
				}
			},
			"example": {
				"documentType": "SalesOrder",
				"documentCode": "b12a2db6-a651-4878-8f6f-4794cf5ca9e3"
			}
		},
		"DeleteErrorTransactionsResponseModel": {
			"description": "Response model of error transaction batch delete",
			"type": "object",
			"properties": {
				"results": {
					"description": "The individual result of each error transaction in the request batch",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/DeleteErrorTransactionResponseModel"
					},
					"example": [
						{
							"result": "Success",
							"documentType": "SalesOrder",
							"documentCode": "510db315-13f4-46bc-b0b6-5ab540bf4e4f"
						}
					]
				}
			},
			"example": {
				"results": [
					{
						"result": "Success",
						"documentType": "SalesOrder",
						"documentCode": "510db315-13f4-46bc-b0b6-5ab540bf4e4f"
					}
				]
			}
		},
		"DeleteErrorTransactionResponseModel": {
			"description": "Response model of a single error transaction delete",
			"required": ["documentType", "documentCode"],
			"type": "object",
			"properties": {
				"result": {
					"description": "Result of the deletion",
					"enum": ["Success", "Failure"],
					"type": "string",
					"example": "Success",
					"x-enum-metadata": {
						"name": "AvataxDeleteErrorTransactionStatus",
						"values": [
							{
								"name": "Success",
								"value": 0
							},
							{
								"name": "Failure",
								"value": 1
							}
						]
					}
				},
				"documentType": {
					"description": "Type of transaction of the error transaction",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesOrder",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"documentCode": {
					"description": "The internal reference code (used by the client application) of the error transaction",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "6e45c264-a4c7-4fc6-ab4a-0523ce6b38dc"
				}
			},
			"example": {
				"result": "Success",
				"documentType": "SalesOrder",
				"documentCode": "6e45c264-a4c7-4fc6-ab4a-0523ce6b38dc"
			}
		},
		"CappedFetchResult[ErrorCodeOutputModel]": {
			"type": "object",
			"properties": {
				"@isRecordsetCountCapped": {
					"type": "boolean"
				},
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ErrorCodeOutputModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"ErrorCodeOutputModel": {
			"description": "Model that has the matching count for an errorcode",
			"type": "object",
			"properties": {
				"errorCode": {
					"description": "Name of the error code",
					"type": "string",
					"example": "GetTaxError"
				},
				"count": {
					"format": "int32",
					"description": "Number of error code recorded",
					"type": "integer",
					"example": 123
				}
			},
			"example": {
				"errorCode": "GetTaxError",
				"count": 123
			}
		},
		"FilingCalendarModel": {
			"description": "Represents a commitment to file a tax return on a recurring basis.\r\nOnly used if you subscribe to Avalara Returns.",
			"required": ["companyId", "filingFrequencyId", "effectiveDate", "taxTypeId"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this filing calendar.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company to which this filing calendar belongs.",
					"type": "integer",
					"example": 12345
				},
				"returnName": {
					"description": "DEPRECATED - Date: 9/13/2018, Version: 18.10, Message: Please use `taxFormCode` instead.\r\nThe legacy return name of the tax form to file.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "CABOE401A2",
					"x-property-deprecation-info": {
						"date": "9/13/2018",
						"version": "18.10",
						"message": "Please use `taxFormCode` instead."
					}
				},
				"formCountry": {
					"description": "Name or ISO 3166 code identifying the country that issued the tax form for this filing calendar.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string"
				},
				"formRegion": {
					"description": "Name or ISO 3166 code identifying the region that issued the tax form for this filing calendar.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string"
				},
				"taxFormCode": {
					"description": "The Avalara standard tax form code of the tax form for this filing calendar.  The first two characters of the tax form code\r\nare the ISO 3166 country code of the country that issued this form.",
					"type": "string"
				},
				"fiscalYearStartMonth": {
					"format": "int32",
					"description": "The start period of a fiscal year for this form/company",
					"type": "integer"
				},
				"locationCode": {
					"description": "If this calendar is for a location-specific tax return, specify the location code here.  To file for all locations, leave this value NULL.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"outletTypeId": {
					"description": "If this calendar is for a location-specific tax return, specify the location-specific behavior here.",
					"enum": ["None", "Schedule", "Duplicate", "Consolidated"],
					"type": "string",
					"example": "None",
					"x-enum-metadata": {
						"name": "OutletTypeId",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "Schedule",
								"value": 1
							},
							{
								"name": "Duplicate",
								"value": 2
							},
							{
								"name": "Consolidated",
								"value": 3
							}
						]
					}
				},
				"paymentCurrency": {
					"description": "Specify the ISO 4217 currency code for the currency to remit for this tax return.  For all tax returns in the United States, specify \"USD\".",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"filingFrequencyId": {
					"description": "The frequency on which this tax form is filed.",
					"enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly", "Weekly"],
					"type": "string",
					"example": "Quarterly",
					"x-enum-metadata": {
						"name": "FilingFrequencyId",
						"values": [
							{
								"name": "Monthly",
								"value": 1
							},
							{
								"name": "Quarterly",
								"value": 2
							},
							{
								"name": "SemiAnnually",
								"value": 3
							},
							{
								"name": "Annually",
								"value": 4
							},
							{
								"name": "Bimonthly",
								"value": 5
							},
							{
								"name": "Occasional",
								"value": 6
							},
							{
								"name": "InverseQuarterly",
								"value": 7
							},
							{
								"name": "Weekly",
								"value": 8
							}
						]
					}
				},
				"months": {
					"format": "int16",
					"description": "A 16-bit bitmap containing a 1 for each month when the return should be filed.",
					"type": "integer",
					"example": 2340
				},
				"stateRegistrationId": {
					"description": "Tax Registration ID for this Region - in the U.S., this is for your state.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "101-123456"
				},
				"localRegistrationId": {
					"description": "Tax Registration ID for the local jurisdiction, if any.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"employerIdentificationNumber": {
					"description": "The Employer Identification Number or Taxpayer Identification Number that is to be used when filing this return.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "12-3456789"
				},
				"line1": {
					"description": "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field will be no longer be available after the 17.9 release.\r\nThe first line of the mailing address that will be used when filling out this tax return.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "2000 Main Street",
					"x-property-deprecation-info": {
						"date": "9/1/2017",
						"version": "17.9",
						"message": "Field will be no longer be available after the 17.9 release."
					}
				},
				"line2": {
					"description": "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field will be no longer be available after the 17.9 release.\r\nThe second line of the mailing address that will be used when filling out this tax return.\r\nPlease note that some tax forms do not support multiple address lines.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"x-property-deprecation-info": {
						"date": "9/1/2017",
						"version": "17.9",
						"message": "Field will be no longer be available after the 17.9 release."
					}
				},
				"city": {
					"description": "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field will be no longer be available after the 17.9 release.\r\nThe city name of the mailing address that will be used when filling out this tax return.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine",
					"x-property-deprecation-info": {
						"date": "9/1/2017",
						"version": "17.9",
						"message": "Field will be no longer be available after the 17.9 release."
					}
				},
				"region": {
					"description": "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field will be no longer be available after the 17.9 release.\r\nThe state, region, or province of the mailing address that will be used when filling out this tax return.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "CA",
					"x-property-deprecation-info": {
						"date": "9/1/2017",
						"version": "17.9",
						"message": "Field will be no longer be available after the 17.9 release."
					}
				},
				"postalCode": {
					"description": "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field will be no longer be available after the 17.9 release.\r\nThe postal code or zip code of the mailing address that will be used when filling out this tax return.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "92614",
					"x-property-deprecation-info": {
						"date": "9/1/2017",
						"version": "17.9",
						"message": "Field will be no longer be available after the 17.9 release."
					}
				},
				"country": {
					"description": "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field will be no longer be available after the 17.9 release.\r\nThe two character ISO-3166 country code of the mailing address that will be used when filling out this tax return.",
					"maxLength": 2,
					"minLength": 0,
					"type": "string",
					"example": "US",
					"x-property-deprecation-info": {
						"date": "9/1/2017",
						"version": "17.9",
						"message": "Field will be no longer be available after the 17.9 release."
					}
				},
				"mailingAddressLine1": {
					"description": "The first line of the mailing address that will be used when filling out this tax return.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"mailingAddressLine2": {
					"description": "The second line of the mailing address that will be used when filling out this tax return.\r\nPlease note that some tax forms do not support multiple address lines.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"mailingAddressCity": {
					"description": "The city name of the mailing address that will be used when filling out this tax return.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"mailingAddressRegion": {
					"description": "Name or ISO 3166 code identifying the region of the mailing address that will be used when filling out this tax return.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string"
				},
				"mailingAddressPostalCode": {
					"description": "The postal code or zip code of the mailing address that will be used when filling out this tax return.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"mailingAddressCountry": {
					"description": "Name or ISO 3166 code identifying the country of the mailing address that will be used when filling out this tax return.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string"
				},
				"phone": {
					"description": "The phone number to be used when filing this return.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "714 555-1212"
				},
				"customerFilingInstructions": {
					"description": "Special filing instructions to be used when filing this return.\r\nPlease note that requesting special filing instructions may incur additional costs.",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"legalEntityName": {
					"description": "The legal entity name to be used when filing this return.",
					"maxLength": 75,
					"minLength": 0,
					"type": "string",
					"example": "Bob's Artisan Pottery"
				},
				"effectiveDate": {
					"format": "date",
					"description": "The earliest date for the tax period when this return should be filed.\r\nThis date specifies the earliest date for tax transactions that should be reported on this filing calendar.\r\nPlease note that tax is usually filed one month in arrears: for example, tax for January transactions is typically filed during the month of February.",
					"type": "string",
					"example": "2015-01-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "The last date for the tax period when this return should be filed.\r\nThis date specifies the last date for tax transactions that should be reported on this filing calendar.\r\nPlease note that tax is usually filed one month in arrears: for example, tax for January transactions is typically filed during the month of February.",
					"type": "string"
				},
				"filingTypeId": {
					"description": "The method to be used when filing this return.",
					"enum": ["PaperReturn", "ElectronicReturn", "SER", "EFTPaper", "PhonePaper", "SignatureReady", "EfileCheck"],
					"type": "string",
					"example": "ElectronicReturn",
					"x-enum-metadata": {
						"name": "FilingTypeId",
						"values": [
							{
								"name": "PaperReturn",
								"value": 0
							},
							{
								"name": "ElectronicReturn",
								"value": 1
							},
							{
								"name": "SER",
								"value": 2
							},
							{
								"name": "EFTPaper",
								"value": 3
							},
							{
								"name": "PhonePaper",
								"value": 4
							},
							{
								"name": "SignatureReady",
								"value": 5
							},
							{
								"name": "EfileCheck",
								"value": 6
							}
						]
					}
				},
				"eFileUsername": {
					"description": "If you file electronically, this is the username you use to log in to the tax authority's website.",
					"maxLength": 254,
					"minLength": 0,
					"type": "string"
				},
				"eFilePassword": {
					"description": "If you file electronically, this is the password or pass code you use to log in to the tax authority's website.",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"prepayPercentage": {
					"format": "int32",
					"description": "If you are required to prepay a percentage of taxes for future periods, please specify the percentage in whole numbers;\r\nfor example, the value 90 would indicate 90%.",
					"type": "integer",
					"example": 90
				},
				"prePaymentRequired": {
					"description": "Determines if a prepayment is required for this filing calendar",
					"type": "boolean",
					"example": false
				},
				"fixedPrepaymentAmount": {
					"format": "double",
					"description": "If your company is required to make a prepayment that is designated by a fixed amount each period, please specify the amount here.",
					"type": "number"
				},
				"taxTypeId": {
					"description": "The type of tax to report on this return.",
					"enum": [
						"All",
						"BothSalesAndUseTax",
						"ConsumerUseTax",
						"SalesTax",
						"UseTax",
						"VATOutputTax",
						"VATInputTax",
						"VATNonrecoverableInputTax",
						"Fee",
						"Rental",
						"ConsumerUseAndSalesTax",
						"ConsumersUseAndSellersUseTax",
						"E",
						"Lodging",
						"Bottle",
						"RentToOwn",
						"EWaste",
						"Batteries",
						"LightBulbs"
					],
					"type": "string",
					"example": "All",
					"x-enum-metadata": {
						"name": "MatchingTaxType",
						"values": [
							{
								"name": "E",
								"value": 5
							},
							{
								"name": "Lodging",
								"value": 6
							},
							{
								"name": "Bottle",
								"value": 7
							},
							{
								"name": "RentToOwn",
								"value": 8
							},
							{
								"name": "All",
								"value": 65
							},
							{
								"name": "BothSalesAndUseTax",
								"value": 66
							},
							{
								"name": "ConsumerUseTax",
								"value": 67
							},
							{
								"name": "ConsumersUseAndSellersUseTax",
								"value": 68
							},
							{
								"name": "ConsumerUseAndSalesTax",
								"value": 69
							},
							{
								"name": "Fee",
								"value": 70
							},
							{
								"name": "VATInputTax",
								"value": 73
							},
							{
								"name": "LightBulbs",
								"value": 76
							},
							{
								"name": "VATNonrecoverableInputTax",
								"value": 78
							},
							{
								"name": "VATOutputTax",
								"value": 79
							},
							{
								"name": "Rental",
								"value": 82
							},
							{
								"name": "SalesTax",
								"value": 83
							},
							{
								"name": "UseTax",
								"value": 85
							},
							{
								"name": "EWaste",
								"value": 87
							},
							{
								"name": "Batteries",
								"value": 90
							}
						]
					}
				},
				"internalNotes": {
					"description": "Internal filing notes.",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"alSignOn": {
					"description": "Custom filing information field for Alabama.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"alAccessCode": {
					"description": "Custom filing information field for Alabama.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"meBusinessCode": {
					"description": "Custom filing information field for Maine.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"iaBen": {
					"description": "Custom filing information field for Iowa.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"ctReg": {
					"description": "Custom filing information field for Connecticut.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"other1Name": {
					"description": "Custom filing information field.  Leave blank.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"other1Value": {
					"description": "Custom filing information field.  Leave blank.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"other2Name": {
					"description": "Custom filing information field.  Leave blank.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"other2Value": {
					"description": "Custom filing information field.  Leave blank.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"other3Name": {
					"description": "Custom filing information field.  Leave blank.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"other3Value": {
					"description": "Custom filing information field.  Leave blank.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"taxAuthorityId": {
					"format": "int32",
					"description": "The unique ID of the tax authority of this return.",
					"type": "integer",
					"readOnly": true
				},
				"taxAuthorityName": {
					"description": "The name of the tax authority of this return.",
					"type": "string",
					"readOnly": true
				},
				"taxAuthorityType": {
					"description": "The type description of the tax authority of this return.",
					"type": "string",
					"readOnly": true
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"bulkAccountId": {
					"description": "User name of bulk account.",
					"type": "string",
					"readOnly": true
				},
				"siteCode": {
					"description": "The bulk account site code.",
					"type": "string",
					"readOnly": true
				},
				"bulkAccountValidationStatus": {
					"description": "The status of the bulk account's validation.",
					"enum": ["New", "Added", "Failed"],
					"type": "string",
					"readOnly": true,
					"x-enum-metadata": {
						"name": "BulkAccountValidationStatus",
						"values": [
							{
								"name": "New",
								"value": 0
							},
							{
								"name": "Added",
								"value": 1
							},
							{
								"name": "Failed",
								"value": 2
							}
						]
					}
				},
				"settings": {
					"description": "CompanyReturn settings for complext filing calendar",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyReturnSettingModel"
					},
					"example": [
						{
							"id": 0,
							"companyReturnId": 123,
							"filingQuestionId": 26,
							"filingQuestionCode": "EfileUsername",
							"value": "bobExample"
						}
					]
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"returnName": "CABOE401A2",
				"outletTypeId": "None",
				"filingFrequencyId": "Quarterly",
				"months": 2340,
				"stateRegistrationId": "101-123456",
				"employerIdentificationNumber": "12-3456789",
				"line1": "2000 Main Street",
				"city": "Irvine",
				"region": "CA",
				"postalCode": "92614",
				"country": "US",
				"phone": "714 555-1212",
				"legalEntityName": "Bob's Artisan Pottery",
				"effectiveDate": "2015-01-01",
				"filingTypeId": "ElectronicReturn",
				"prepayPercentage": 90,
				"prePaymentRequired": false,
				"taxTypeId": "All",
				"settings": [
					{
						"id": 0,
						"companyReturnId": 123,
						"filingQuestionId": 26,
						"filingQuestionCode": "EfileUsername",
						"value": "bobExample"
					}
				]
			}
		},
		"CompanyReturnSettingModel": {
			"description": "",
			"required": ["companyReturnId", "filingQuestionId"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID of this CompanyReturnsSetting",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"companyReturnId": {
					"format": "int64",
					"description": "The CompanyReturn Id",
					"type": "integer",
					"example": 123
				},
				"filingQuestionId": {
					"format": "int64",
					"description": "The TaxFormCatalog filingQuestionId.",
					"type": "integer",
					"example": 26
				},
				"filingQuestionCode": {
					"description": "Filing question code as defined in TaxFormCatalog.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "EfileUsername"
				},
				"value": {
					"description": "The value of this setting",
					"type": "string",
					"example": "bobExample"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 0,
				"companyReturnId": 123,
				"filingQuestionId": 26,
				"filingQuestionCode": "EfileUsername",
				"value": "bobExample"
			}
		},
		"FetchResult[FilingCalendarModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingCalendarModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"QueryRequestModel": {
			"description": "Represents a complex query request to parse using query filter guidelines from Microsoft REST standards",
			"type": "object",
			"properties": {
				"filter": {
					"description": "A list of conditions to filter objects.",
					"type": "string"
				},
				"include": {
					"description": "A list of included commands for this fetch operation.",
					"type": "string"
				},
				"maxResults": {
					"format": "int32",
					"description": "For pagination: This is the maximum number of results to return.",
					"type": "integer"
				},
				"startIndex": {
					"format": "int32",
					"description": "For pagination: This is the index of the first result.",
					"type": "integer"
				},
				"sortBy": {
					"description": "Sorts the resulting objects in a specific manner.",
					"type": "string"
				}
			},
			"example": {
				"filter": "id = 1",
				"maxResults": 10,
				"startIndex": 0,
				"sortBy": "id asc"
			}
		},
		"CycleAddOptionModel": {
			"description": "Model with options for adding a new filing calendar",
			"type": "object",
			"properties": {
				"available": {
					"description": "True if this form can be added and filed for the current cycle. \"Current cycle\" is considered one month before the month of today's date.",
					"type": "boolean",
					"example": true
				},
				"transactionalPeriodStart": {
					"format": "date",
					"description": "The period start date for the customer's first transaction in the jurisdiction being added",
					"type": "string",
					"example": "2018-04-01T00:00:00"
				},
				"transactionalPeriodEnd": {
					"format": "date",
					"description": "The period end date for the customer's last transaction in the jurisdiction being added",
					"type": "string",
					"example": "2018-04-30T00:00:00"
				},
				"filingDueDate": {
					"format": "date",
					"description": "The jurisdiction-assigned due date for the form",
					"type": "string",
					"example": "2018-05-20T00:00:00"
				},
				"cycleName": {
					"description": "A descriptive name of the cycle and due date of form.",
					"type": "string",
					"example": "Monthly filing for April 2018, due May 20 2018."
				},
				"frequencyName": {
					"description": "The filing frequency of the form",
					"type": "string",
					"example": "Monthly"
				},
				"filingFrequencyCode": {
					"description": "A code assigned to the filing frequency",
					"type": "string",
					"example": "M"
				},
				"filingFrequencyId": {
					"description": "The filing frequency of the request",
					"enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly", "Weekly"],
					"type": "string",
					"x-enum-metadata": {
						"name": "FilingFrequencyId",
						"values": [
							{
								"name": "Monthly",
								"value": 1
							},
							{
								"name": "Quarterly",
								"value": 2
							},
							{
								"name": "SemiAnnually",
								"value": 3
							},
							{
								"name": "Annually",
								"value": 4
							},
							{
								"name": "Bimonthly",
								"value": 5
							},
							{
								"name": "Occasional",
								"value": 6
							},
							{
								"name": "InverseQuarterly",
								"value": 7
							},
							{
								"name": "Weekly",
								"value": 8
							}
						]
					}
				},
				"cycleUnavailableReason": {
					"description": "An explanation for why this form cannot be added for the current cycle",
					"type": "string",
					"example": ""
				},
				"availableLocationCodes": {
					"description": "A list of outlet codes that can be assigned to this form for the current cycle",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": []
				}
			},
			"example": {
				"available": true,
				"transactionalPeriodStart": "2018-04-01",
				"transactionalPeriodEnd": "2018-04-30",
				"filingDueDate": "2018-05-20",
				"cycleName": "Monthly filing for April 2018, due May 20 2018.",
				"frequencyName": "Monthly",
				"filingFrequencyCode": "M",
				"cycleUnavailableReason": "",
				"availableLocationCodes": []
			}
		},
		"CycleExpireModel": {
			"description": "Cycle Safe Expiration results.",
			"type": "object",
			"properties": {
				"success": {
					"description": "Whether or not the filing calendar can be expired.\r\ne.g. if user makes end date of a calendar earlier than latest filing, this would be set to false.",
					"type": "boolean",
					"example": true
				},
				"message": {
					"description": "The message to present to the user if expiration is successful or unsuccessful.",
					"type": "string"
				},
				"cycleExpirationOptions": {
					"description": "A list of options for expiring the filing calendar.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CycleExpireOptionModel"
					},
					"example": [
						{
							"transactionalPeriodStart": "2016-12-01",
							"transactionalPeriodEnd": "2016-12-31",
							"filingDueDate": "2017-01-20",
							"cycleName": "Monthly filing for December 2016, due January 20 2017."
						}
					]
				}
			},
			"example": {
				"success": true,
				"cycleExpirationOptions": [
					{
						"transactionalPeriodStart": "2016-12-01",
						"transactionalPeriodEnd": "2016-12-31",
						"filingDueDate": "2017-01-20",
						"cycleName": "Monthly filing for December 2016, due January 20 2017."
					}
				]
			}
		},
		"CycleExpireOptionModel": {
			"description": "Options for expiring a filing calendar.",
			"type": "object",
			"properties": {
				"transactionalPeriodStart": {
					"format": "date",
					"description": "The period start date for the customer's first transaction in the jurisdiction being expired.",
					"type": "string",
					"example": "2016-12-01T00:00:00"
				},
				"transactionalPeriodEnd": {
					"format": "date",
					"description": "The period end date for the customer's last transaction in the jurisdiction being expired.",
					"type": "string",
					"example": "2016-12-31T00:00:00"
				},
				"filingDueDate": {
					"format": "date",
					"description": "The jurisdiction-assigned due date for the form.",
					"type": "string",
					"example": "2017-01-20T00:00:00"
				},
				"cycleName": {
					"description": "A descriptive name of the cycle and due date of the form.",
					"type": "string",
					"example": "Monthly filing for December 2016, due January 20 2017."
				}
			},
			"example": {
				"transactionalPeriodStart": "2016-12-01",
				"transactionalPeriodEnd": "2016-12-31",
				"filingDueDate": "2017-01-20",
				"cycleName": "Monthly filing for December 2016, due January 20 2017."
			}
		},
		"FilingCalendarEditModel": {
			"description": "An edit to be made on a filing calendar.",
			"required": ["fieldName", "questionId", "oldValue", "newValue"],
			"type": "object",
			"properties": {
				"fieldName": {
					"description": "The name of the field to be modified.",
					"type": "string",
					"example": "Ein"
				},
				"questionId": {
					"format": "int32",
					"description": "The unique ID of the filing calendar question. \"Filing calendar question\" is the wording displayed to users for a given field.",
					"type": "integer",
					"example": 36
				},
				"oldValue": {
					"description": "The current value of the field.",
					"type": "object",
					"example": "002094004"
				},
				"newValue": {
					"description": "The new/proposed value of the field.",
					"type": "object",
					"example": "002094005"
				}
			},
			"example": {
				"fieldName": "Ein",
				"questionId": 36,
				"oldValue": "002094004",
				"newValue": "002094005"
			}
		},
		"CycleEditOptionModel": {
			"description": "Model with options for actual filing calendar output based on user edits to filing calendar.",
			"type": "object",
			"properties": {
				"success": {
					"description": "Whether or not changes can be made to the filing calendar.",
					"type": "boolean",
					"example": true
				},
				"message": {
					"description": "The message to present to the user when calendar is successfully or unsuccessfully changed.",
					"type": "string",
					"example": "Clone unnecessary.  No approved instances of filing calendar"
				},
				"customerMustApprove": {
					"description": "Whether or not the user should be warned of a change, because some changes are risky and may be being done not in accordance with jurisdiction rules.\r\nFor example, user would be warned if user changes filing frequency to new frequency with a start date during an accrual month of the existing frequency.",
					"type": "boolean",
					"example": false
				},
				"mustCloneFilingCalendar": {
					"description": "True if the filing calendar must be cloned to allow this change; false if the existing filing calendar can be changed itself.",
					"type": "boolean",
					"example": false
				},
				"clonedCalendarEffDate": {
					"format": "date",
					"description": "The effective date of the filing calendar (only applies if cloning).",
					"type": "string"
				},
				"expiredCalendarEndDate": {
					"format": "date",
					"description": "The expired end date of the old filing calendar (only applies if cloning).",
					"type": "string"
				}
			},
			"example": {
				"success": true,
				"message": "Clone unnecessary.  No approved instances of filing calendar",
				"customerMustApprove": false,
				"mustCloneFilingCalendar": false
			}
		},
		"FetchResult[FilingRequestModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingRequestModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FilingRequestModel": {
			"description": "Represents a commitment to file a tax return on a recurring basis.\r\nOnly used if you subscribe to Avalara Returns.",
			"required": ["companyId", "data"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this filing request.",
					"type": "integer",
					"example": 12345
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company to which this filing request belongs.",
					"type": "integer",
					"example": 12345
				},
				"filingRequestStatusId": {
					"description": "The current status of this request",
					"enum": [
						"New",
						"Validated",
						"Pending",
						"Active",
						"PendingStop",
						"Inactive",
						"ChangeRequest",
						"RequestApproved",
						"RequestDenied"
					],
					"type": "string",
					"readOnly": true,
					"example": "New",
					"x-enum-metadata": {
						"name": "FilingRequestStatus",
						"values": [
							{
								"name": "New",
								"value": 1
							},
							{
								"name": "Validated",
								"value": 2
							},
							{
								"name": "Pending",
								"value": 3
							},
							{
								"name": "Active",
								"value": 4
							},
							{
								"name": "PendingStop",
								"value": 5
							},
							{
								"name": "Inactive",
								"value": 6
							},
							{
								"name": "ChangeRequest",
								"value": 7
							},
							{
								"name": "RequestApproved",
								"value": 8
							},
							{
								"name": "RequestDenied",
								"value": 9
							}
						]
					}
				},
				"data": {
					"$ref": "#/definitions/FilingRequestDataModel",
					"description": "The data model object of the request",
					"example": {
						"companyReturnId": 1,
						"returnName": "WIST12CT",
						"filingFrequencyId": "Monthly",
						"registrationId": "1234",
						"months": 2,
						"taxTypeId": "SalesTax",
						"locationCode": "LOC-1",
						"effDate": "2017-01-01",
						"endDate": "2017-01-01",
						"isClone": false,
						"region": "WI",
						"taxAuthorityId": 121,
						"taxAuthorityName": "WISCONSIN",
						"answers": [
							{
								"filingQuestionId": 1,
								"answer": "Answer to question 1"
							},
							{
								"filingQuestionId": 2,
								"answer": "Answer to question 2"
							}
						]
					}
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 12345,
				"companyId": 12345,
				"filingRequestStatusId": "New",
				"data": {
					"companyReturnId": 1,
					"returnName": "WIST12CT",
					"filingFrequencyId": "Monthly",
					"registrationId": "1234",
					"months": 2,
					"taxTypeId": "SalesTax",
					"locationCode": "LOC-1",
					"effDate": "2017-01-01",
					"endDate": "2017-01-01",
					"isClone": false,
					"region": "WI",
					"taxAuthorityId": 121,
					"taxAuthorityName": "WISCONSIN",
					"answers": [
						{
							"filingQuestionId": 1,
							"answer": "Answer to question 1"
						},
						{
							"filingQuestionId": 2,
							"answer": "Answer to question 2"
						}
					]
				}
			}
		},
		"FilingRequestDataModel": {
			"description": "Represents a commitment to file a tax return on a recurring basis.\r\nOnly used if you subscribe to Avalara Returns.",
			"required": ["filingFrequencyId", "months", "effDate"],
			"type": "object",
			"properties": {
				"companyReturnId": {
					"format": "int64",
					"description": "The company return ID if requesting an update.",
					"type": "integer",
					"example": 1
				},
				"returnName": {
					"description": "DEPRECATED - Date: 9/13/2018, Version: 18.10, Message: Please use `taxFormCode` instead.\r\nThe legacy return name of the requested calendar.",
					"type": "string",
					"example": "WIST12CT",
					"x-property-deprecation-info": {
						"date": "9/13/2018",
						"version": "18.10",
						"message": "Please use `taxFormCode` instead."
					}
				},
				"taxFormCode": {
					"description": "The Avalara standard tax form code of the tax form for this filing calendar.  The first two characters of the tax form code\r\nare the ISO 3166 country code of the country that issued this form.",
					"type": "string",
					"example": "US00194"
				},
				"filingFrequencyId": {
					"description": "The filing frequency of the request",
					"enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly", "Weekly"],
					"type": "string",
					"example": "Monthly",
					"x-enum-metadata": {
						"name": "FilingFrequencyId",
						"values": [
							{
								"name": "Monthly",
								"value": 1
							},
							{
								"name": "Quarterly",
								"value": 2
							},
							{
								"name": "SemiAnnually",
								"value": 3
							},
							{
								"name": "Annually",
								"value": 4
							},
							{
								"name": "Bimonthly",
								"value": 5
							},
							{
								"name": "Occasional",
								"value": 6
							},
							{
								"name": "InverseQuarterly",
								"value": 7
							},
							{
								"name": "Weekly",
								"value": 8
							}
						]
					}
				},
				"registrationId": {
					"description": "State registration ID of the company requesting the filing calendar.",
					"type": "string",
					"example": "1234"
				},
				"months": {
					"format": "int16",
					"description": "The months of the request",
					"type": "integer",
					"example": 2
				},
				"fiscalYearStartMonth": {
					"format": "int32",
					"description": "The start period of a fiscal year for this form/company",
					"type": "integer"
				},
				"taxTypeId": {
					"description": "The type of tax to report on this return.",
					"enum": [
						"All",
						"BothSalesAndUseTax",
						"ConsumerUseTax",
						"SalesTax",
						"UseTax",
						"VATOutputTax",
						"VATInputTax",
						"VATNonrecoverableInputTax",
						"Fee",
						"Rental",
						"ConsumerUseAndSalesTax",
						"ConsumersUseAndSellersUseTax",
						"E",
						"Lodging",
						"Bottle",
						"RentToOwn",
						"EWaste",
						"Batteries",
						"LightBulbs"
					],
					"type": "string",
					"example": "SalesTax",
					"x-enum-metadata": {
						"name": "MatchingTaxType",
						"values": [
							{
								"name": "E",
								"value": 5
							},
							{
								"name": "Lodging",
								"value": 6
							},
							{
								"name": "Bottle",
								"value": 7
							},
							{
								"name": "RentToOwn",
								"value": 8
							},
							{
								"name": "All",
								"value": 65
							},
							{
								"name": "BothSalesAndUseTax",
								"value": 66
							},
							{
								"name": "ConsumerUseTax",
								"value": 67
							},
							{
								"name": "ConsumersUseAndSellersUseTax",
								"value": 68
							},
							{
								"name": "ConsumerUseAndSalesTax",
								"value": 69
							},
							{
								"name": "Fee",
								"value": 70
							},
							{
								"name": "VATInputTax",
								"value": 73
							},
							{
								"name": "LightBulbs",
								"value": 76
							},
							{
								"name": "VATNonrecoverableInputTax",
								"value": 78
							},
							{
								"name": "VATOutputTax",
								"value": 79
							},
							{
								"name": "Rental",
								"value": 82
							},
							{
								"name": "SalesTax",
								"value": 83
							},
							{
								"name": "UseTax",
								"value": 85
							},
							{
								"name": "EWaste",
								"value": 87
							},
							{
								"name": "Batteries",
								"value": 90
							}
						]
					}
				},
				"locationCode": {
					"description": "Location code of the request",
					"type": "string",
					"example": "LOC-1"
				},
				"effDate": {
					"format": "date",
					"description": "Filing cycle effective date of the request",
					"type": "string",
					"example": "2017-01-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "Filing cycle end date of the request",
					"type": "string",
					"example": "2020-01-01T00:00:00"
				},
				"isClone": {
					"description": "Flag if the request is a clone of a current filing calendar",
					"type": "boolean",
					"example": false
				},
				"country": {
					"description": "The two character ISO 3166 country code of the country that issued the tax form for this filing calendar.",
					"type": "string",
					"readOnly": true,
					"example": "US"
				},
				"region": {
					"description": "The two or three character ISO 3166 code of the region / state / province that issued the tax form for this filing calendar.",
					"type": "string",
					"readOnly": true,
					"example": "WI"
				},
				"taxAuthorityId": {
					"format": "int32",
					"description": "The tax authority id of the return",
					"type": "integer",
					"readOnly": true,
					"example": 121
				},
				"taxAuthorityName": {
					"description": "The tax authority name on the return",
					"type": "string",
					"readOnly": true,
					"example": "WISCONSIN"
				},
				"answers": {
					"description": "Filing question answers",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingAnswerModel"
					},
					"example": [
						{
							"filingQuestionId": 1,
							"answer": "Answer to question 1"
						},
						{
							"filingQuestionId": 2,
							"answer": "Answer to question 2"
						}
					]
				}
			},
			"example": {
				"companyReturnId": 1,
				"returnName": "WIST12CT",
				"taxFormCode": "US00194",
				"filingFrequencyId": "Monthly",
				"registrationId": "1234",
				"months": 2,
				"taxTypeId": "SalesTax",
				"locationCode": "LOC-1",
				"effDate": "2017-01-01",
				"endDate": "2020-01-01",
				"isClone": false,
				"country": "US",
				"region": "WI",
				"taxAuthorityId": 121,
				"taxAuthorityName": "WISCONSIN",
				"answers": [
					{
						"filingQuestionId": 1,
						"answer": "Answer to question 1"
					},
					{
						"filingQuestionId": 2,
						"answer": "Answer to question 2"
					}
				]
			}
		},
		"FilingAnswerModel": {
			"description": "",
			"required": ["filingQuestionId"],
			"type": "object",
			"properties": {
				"filingQuestionId": {
					"format": "int64",
					"description": "The ID number for a filing question",
					"type": "integer",
					"example": 1
				},
				"answer": {
					"description": "The value of the answer for the filing question identified by filingQuestionId",
					"type": "object",
					"example": "Answer to question 1"
				}
			},
			"example": {
				"filingQuestionId": 1,
				"answer": "Answer to question 1"
			}
		},
		"LoginVerificationOutputModel": {
			"description": "This is the output model coming from skyscraper services",
			"required": ["jobId"],
			"type": "object",
			"properties": {
				"jobId": {
					"format": "int32",
					"description": "The job Id returned from skyscraper",
					"type": "integer",
					"example": 8366
				},
				"operationStatus": {
					"description": "The operation status of the job",
					"type": "string",
					"example": "Pending"
				},
				"message": {
					"description": "The message returned from the job",
					"type": "string",
					"example": ""
				},
				"loginSuccess": {
					"description": "Indicates if the login was successful",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"jobId": 8366,
				"operationStatus": "Pending",
				"message": "",
				"loginSuccess": true
			}
		},
		"LoginVerificationInputModel": {
			"description": "Represents a verification request using Skyscraper for a company",
			"required": ["companyId", "accountId", "region", "username", "password"],
			"type": "object",
			"properties": {
				"companyId": {
					"format": "int32",
					"description": "CompanyId that we are verifying the login information for",
					"type": "integer",
					"example": 12345
				},
				"accountId": {
					"format": "int32",
					"description": "AccountId of the login verification",
					"type": "integer",
					"example": 1987654323
				},
				"region": {
					"description": "Region of the verification request",
					"type": "string",
					"example": "AR"
				},
				"taxFormCode": {
					"description": "TaxFormCode for the verification request",
					"type": "string",
					"example": "USARET1"
				},
				"username": {
					"description": "Username that we are using for verification",
					"type": "string",
					"example": "Test"
				},
				"password": {
					"description": "Password we are using for verification",
					"type": "string",
					"example": "Test"
				},
				"additionalOptions": {
					"description": "Additional options of the verification",
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"example": {
						"key": "4133|AR-2131232-13"
					}
				},
				"bulkRequestId": {
					"format": "int32",
					"description": "Bulk Request Id of the verification",
					"type": "integer",
					"example": 1
				},
				"priority": {
					"format": "int32",
					"description": "Priority of the verification request",
					"type": "integer",
					"example": 2
				}
			},
			"example": {
				"companyId": 12345,
				"accountId": 1987654323,
				"region": "AR",
				"taxFormCode": "USARET1",
				"username": "Test",
				"password": "Test",
				"additionalOptions": {
					"key": "4133|AR-2131232-13"
				},
				"bulkRequestId": 1,
				"priority": 2
			}
		},
		"PowerOfAttorneyCheckModel": {
			"description": "Response when checking if a company has a POA on file with Avalara",
			"type": "object",
			"properties": {
				"companyId": {
					"format": "int32",
					"description": "companyId of the request",
					"type": "integer",
					"example": 12345
				},
				"country": {
					"description": "Country POA is for",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "Region POA is for",
					"type": "string",
					"example": "WI"
				},
				"activePoa": {
					"description": "Notes if there is an actice POA",
					"type": "boolean",
					"example": true
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "Effective Date of the POA",
					"type": "string"
				},
				"expirationDate": {
					"format": "date-time",
					"description": "End Date of POA",
					"type": "string"
				},
				"availablePoa": {
					"$ref": "#/definitions/ResourceFileDownloadResult",
					"description": "POA download"
				}
			},
			"example": {
				"companyId": 12345,
				"country": "US",
				"region": "WI",
				"activePoa": true
			}
		},
		"ResourceFileDownloadResult": {
			"description": "Represents everything downloaded from resource files",
			"type": "object",
			"properties": {
				"success": {
					"description": "True if this download succeeded",
					"type": "boolean"
				},
				"bytes": {
					"format": "byte",
					"description": "Bytes of the file",
					"type": "string"
				},
				"filename": {
					"description": "Original filename",
					"type": "string"
				},
				"contentType": {
					"description": "Mime content type",
					"type": "string"
				}
			}
		},
		"FetchResult[FilingReturnModelBasic]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingReturnModelBasic"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FilingReturnModelBasic": {
			"description": "Filing Returns Model",
			"type": "object",
			"properties": {
				"companyId": {
					"format": "int64",
					"description": "The unique ID number of the company filing return.",
					"type": "integer",
					"example": 0
				},
				"id": {
					"format": "int64",
					"description": "The unique ID number of this filing return.",
					"type": "integer",
					"example": 5233103
				},
				"filingId": {
					"format": "int64",
					"description": "The filing id that this return belongs too",
					"type": "integer",
					"example": 0
				},
				"resourceFileId": {
					"format": "int64",
					"description": "The resourceFileId of the return",
					"type": "integer",
					"example": 0
				},
				"filingRegionId": {
					"format": "int64",
					"description": "The region id that this return belongs too",
					"type": "integer",
					"example": 0
				},
				"filingCalendarId": {
					"format": "int64",
					"description": "The unique ID number of the filing calendar associated with this return.",
					"type": "integer",
					"example": 513256
				},
				"country": {
					"description": "The country of the form.",
					"type": "string"
				},
				"region": {
					"description": "The region of the form.",
					"type": "string"
				},
				"endPeriodMonth": {
					"format": "int32",
					"description": "The month of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.\r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
					"type": "integer",
					"example": 1
				},
				"endPeriodYear": {
					"format": "int16",
					"description": "The year of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.\r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
					"type": "integer",
					"example": 2017
				},
				"status": {
					"description": "The current status of the filing return.",
					"enum": [
						"PendingApproval",
						"Dirty",
						"ApprovedToFile",
						"PendingFiling",
						"PendingFilingOnBehalf",
						"Filed",
						"FiledOnBehalf",
						"ReturnAccepted",
						"ReturnAcceptedOnBehalf",
						"PaymentRemitted",
						"Voided",
						"PendingReturn",
						"PendingReturnOnBehalf",
						"DoNotFile",
						"ReturnRejected",
						"ReturnRejectedOnBehalf",
						"ApprovedToFileOnBehalf"
					],
					"type": "string",
					"example": "PendingApproval",
					"x-enum-metadata": {
						"name": "FilingStatusId",
						"values": [
							{
								"name": "PendingApproval",
								"value": 0
							},
							{
								"name": "Dirty",
								"value": 1
							},
							{
								"name": "ApprovedToFile",
								"value": 2
							},
							{
								"name": "PendingFiling",
								"value": 3
							},
							{
								"name": "PendingFilingOnBehalf",
								"value": 4
							},
							{
								"name": "Filed",
								"value": 5
							},
							{
								"name": "FiledOnBehalf",
								"value": 6
							},
							{
								"name": "ReturnAccepted",
								"value": 7
							},
							{
								"name": "ReturnAcceptedOnBehalf",
								"value": 8
							},
							{
								"name": "PaymentRemitted",
								"value": 9
							},
							{
								"name": "Voided",
								"value": 10
							},
							{
								"name": "PendingReturn",
								"value": 11
							},
							{
								"name": "PendingReturnOnBehalf",
								"value": 12
							},
							{
								"name": "DoNotFile",
								"value": 13
							},
							{
								"name": "ReturnRejected",
								"value": 14
							},
							{
								"name": "ReturnRejectedOnBehalf",
								"value": 15
							},
							{
								"name": "ApprovedToFileOnBehalf",
								"value": 16
							}
						]
					}
				},
				"filingFrequency": {
					"description": "The filing frequency of the return.",
					"enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly", "Weekly"],
					"type": "string",
					"example": "Monthly",
					"x-enum-metadata": {
						"name": "FilingFrequencyId",
						"values": [
							{
								"name": "Monthly",
								"value": 1
							},
							{
								"name": "Quarterly",
								"value": 2
							},
							{
								"name": "SemiAnnually",
								"value": 3
							},
							{
								"name": "Annually",
								"value": 4
							},
							{
								"name": "Bimonthly",
								"value": 5
							},
							{
								"name": "Occasional",
								"value": 6
							},
							{
								"name": "InverseQuarterly",
								"value": 7
							},
							{
								"name": "Weekly",
								"value": 8
							}
						]
					}
				},
				"filedDate": {
					"format": "date-time",
					"description": "The date the return was filed by Avalara.",
					"type": "string"
				},
				"salesAmount": {
					"format": "double",
					"description": "The sales amount.",
					"type": "number",
					"example": 0.0
				},
				"filingType": {
					"description": "The filing type of the return.",
					"enum": ["PaperReturn", "ElectronicReturn", "SER", "EFTPaper", "PhonePaper", "SignatureReady", "EfileCheck"],
					"type": "string",
					"example": "ElectronicReturn",
					"x-enum-metadata": {
						"name": "FilingTypeId",
						"values": [
							{
								"name": "PaperReturn",
								"value": 0
							},
							{
								"name": "ElectronicReturn",
								"value": 1
							},
							{
								"name": "SER",
								"value": 2
							},
							{
								"name": "EFTPaper",
								"value": 3
							},
							{
								"name": "PhonePaper",
								"value": 4
							},
							{
								"name": "SignatureReady",
								"value": 5
							},
							{
								"name": "EfileCheck",
								"value": 6
							}
						]
					}
				},
				"formName": {
					"description": "The name of the form.",
					"type": "string",
					"example": "AL 2100"
				},
				"remitAmount": {
					"format": "double",
					"description": "The remittance amount of the return.",
					"type": "number",
					"example": 0.0
				},
				"formCode": {
					"description": "The unique code of the form.",
					"type": "string",
					"example": "AL2100"
				},
				"description": {
					"description": "A description for the return.",
					"type": "string",
					"example": "Sales Tax Return"
				},
				"taxableAmount": {
					"format": "double",
					"description": "The taxable amount.",
					"type": "number",
					"example": 0.0
				},
				"taxAmount": {
					"format": "double",
					"description": "The tax amount.",
					"type": "number",
					"example": 0.0
				},
				"collectAmount": {
					"format": "double",
					"description": "The amount collected by avalara for this return",
					"type": "number",
					"example": 1.0
				},
				"taxDueAmount": {
					"format": "double",
					"description": "The tax due amount.",
					"type": "number",
					"example": 0.0
				},
				"nonTaxableAmount": {
					"format": "double",
					"description": "The non-taxable amount.",
					"type": "number",
					"example": 0.0
				},
				"nonTaxableDueAmount": {
					"format": "double",
					"description": "The non-taxable due amount.",
					"type": "number",
					"example": 0.0
				},
				"consumerUseTaxAmount": {
					"format": "double",
					"description": "Consumer use tax liability.",
					"type": "number",
					"example": 0.0
				},
				"consumerUseNonTaxableAmount": {
					"format": "double",
					"description": "Consumer use non-taxable amount.",
					"type": "number",
					"example": 0.0
				},
				"consumerUseTaxableAmount": {
					"format": "double",
					"description": "Consumer use taxable amount.",
					"type": "number",
					"example": 0.0
				},
				"excludedSalesAmount": {
					"format": "double",
					"description": "The amount of sales excluded from the liability calculation",
					"type": "number",
					"example": 0.0
				},
				"excludedNonTaxableAmount": {
					"format": "double",
					"description": "The amount of non-taxable sales excluded from the liability calculation",
					"type": "number",
					"example": 0.0
				},
				"excludedTaxAmount": {
					"format": "double",
					"description": "The amount of tax excluded from the liability calculation",
					"type": "number",
					"example": 0.0
				},
				"accrualType": {
					"description": "Accrual type of the return",
					"enum": ["Filing", "Accrual"],
					"type": "string",
					"example": 0,
					"x-enum-metadata": {
						"name": "AccrualType",
						"values": [
							{
								"name": "Filing",
								"value": 1
							},
							{
								"name": "Accrual",
								"value": 2
							}
						]
					}
				},
				"attachments": {
					"description": "The attachments for this return.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingAttachmentModel"
					}
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				}
			},
			"example": {
				"companyId": 0,
				"id": 5233103,
				"filingId": 0,
				"resourceFileId": 0,
				"filingRegionId": 0,
				"filingCalendarId": 513256,
				"endPeriodMonth": 1,
				"endPeriodYear": 2017,
				"status": "PendingApproval",
				"filingFrequency": "Monthly",
				"salesAmount": 0.0,
				"filingType": "ElectronicReturn",
				"formName": "AL 2100",
				"remitAmount": 0.0,
				"formCode": "AL2100",
				"description": "Sales Tax Return",
				"taxableAmount": 0.0,
				"taxAmount": 0.0,
				"collectAmount": 1.0,
				"taxDueAmount": 0.0,
				"nonTaxableAmount": 0.0,
				"nonTaxableDueAmount": 0.0,
				"consumerUseTaxAmount": 0.0,
				"consumerUseNonTaxableAmount": 0.0,
				"consumerUseTaxableAmount": 0.0,
				"excludedSalesAmount": 0.0,
				"excludedNonTaxableAmount": 0.0,
				"excludedTaxAmount": 0.0,
				"accrualType": 0
			}
		},
		"FilingAttachmentModel": {
			"description": "An attachment associated with a filing return",
			"type": "object",
			"properties": {
				"resourceFileId": {
					"format": "int32",
					"description": "The resourceFileId used to retrieve the attachment",
					"type": "integer",
					"example": 71
				},
				"description": {
					"description": "The description of the attachment",
					"type": "string",
					"example": "Form XYZ Confirmation"
				}
			},
			"example": {
				"resourceFileId": 71,
				"description": "Form XYZ Confirmation"
			}
		},
		"FetchResult[FiledReturnModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FiledReturnModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FiledReturnModel": {
			"description": "Filing Returns Model",
			"type": "object",
			"properties": {
				"companyId": {
					"format": "int64",
					"description": "The unique ID number of the company filing return.",
					"type": "integer",
					"example": 12345
				},
				"endPeriodMonth": {
					"format": "int32",
					"description": "The month of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.\r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
					"type": "integer",
					"example": 1
				},
				"endPeriodYear": {
					"format": "int16",
					"description": "The year of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.\r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
					"type": "integer",
					"example": 2017
				},
				"taxformCode": {
					"description": "The unique code of the form.",
					"type": "string",
					"example": "USAZTPT2"
				}
			},
			"example": {
				"companyId": 12345,
				"endPeriodMonth": 1,
				"endPeriodYear": 2017,
				"taxformCode": "USAZTPT2"
			}
		},
		"FetchResult[FilingModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FilingModel": {
			"description": "Represents a listing of all tax calculation data for filings and for accruing to future filings.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this filing.",
					"type": "integer",
					"example": 326529
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company for this filing.",
					"type": "integer",
					"example": 62593
				},
				"month": {
					"format": "int32",
					"description": "The month of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.\r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
					"type": "integer",
					"example": 10
				},
				"year": {
					"format": "int16",
					"description": "The year of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.\r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
					"type": "integer",
					"example": 2016
				},
				"type": {
					"description": "Indicates whether this is an original or an amended filing.",
					"enum": ["Original", "Amended", "Test"],
					"type": "string",
					"example": "Original",
					"x-enum-metadata": {
						"name": "WorksheetTypeId",
						"values": [
							{
								"name": "Original",
								"value": 0
							},
							{
								"name": "Amended",
								"value": 1
							},
							{
								"name": "Test",
								"value": 2
							}
						]
					}
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"filingRegions": {
					"description": "A listing of regional tax filings within this time period.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingRegionModel"
					},
					"example": [
						{
							"id": 2892824,
							"filingId": 0,
							"country": "US",
							"region": "AZ",
							"salesAmount": 80.48,
							"taxableAmount": 24.49,
							"taxAmount": 2.2,
							"taxDueAmount": 0.0,
							"collectAmount": 1.1,
							"totalRemittanceAmount": 0.0,
							"nonTaxableAmount": 55.99,
							"consumerUseTaxAmount": 0.0,
							"consumerUseNonTaxableAmount": 0.0,
							"consumerUseTaxableAmount": 0.0,
							"startDate": "2016-10-01T00:00:00",
							"endDate": "2016-10-31T00:00:00",
							"hasNexus": true,
							"status": "PendingApproval",
							"returns": [
								{
									"id": 5233103,
									"filingRegionId": 0,
									"filingCalendarId": 513256,
									"status": "PendingApproval",
									"filingFrequency": "Monthly",
									"salesAmount": 0.0,
									"filingType": "ElectronicReturn",
									"formName": "AL 2100",
									"remitAmount": 0.0,
									"formCode": "AL2100",
									"description": "Sales Tax Return",
									"taxableAmount": 0.0,
									"taxAmount": 0.0,
									"collectAmount": 1.0,
									"taxDueAmount": 0.0,
									"nonTaxableAmount": 0.0,
									"nonTaxableDueAmount": 0.0,
									"consumerUseTaxAmount": 0.0,
									"consumerUseTaxDueAmount": 0.0,
									"consumerUseNonTaxableAmount": 0.0,
									"consumerUseTaxableAmount": 0.0,
									"totalAdjustments": 0.0,
									"excludedSalesAmount": 0.0,
									"excludedNonTaxableAmount": 0.0,
									"excludedTaxAmount": 0.0,
									"carryOverSalesAmount": 0.0,
									"carryOverNonTaxableAmount": 0.0,
									"carryOverTaxAmount": 0.0,
									"carryOverConsumerUseTaxAmount": 0.0,
									"taxAccrualAmount": 0.0,
									"salesAccrualAmount": 0.0,
									"nonTaxableAccrualAmount": 0.0,
									"taxableAccrualAmount": 0.0,
									"salesTaxAccrualAmount": 0.0,
									"sellersUseTaxAccrualAmount": 0.0,
									"consumerUseTaxAccrualAmount": 0.0,
									"consumerUseTaxableAccrualAmount": 0.0,
									"consumerUseNonTaxableAccrualAmount": 0.0,
									"adjustments": [
										{
											"id": 15634,
											"amount": 100.0,
											"period": "CurrentPeriod",
											"type": "Discount",
											"isCalculated": false,
											"accountType": "AccountsReceivableAccountsPayable"
										}
									],
									"totalAugmentations": 0.0,
									"augmentations": [
										{
											"id": 103230,
											"fieldAmount": 10.0,
											"fieldName": "Credit from the State"
										}
									],
									"totalPayments": 0.0,
									"accrualType": 0
								}
							]
						}
					]
				}
			},
			"example": {
				"id": 326529,
				"companyId": 62593,
				"month": 10,
				"year": 2016,
				"type": "Original",
				"filingRegions": [
					{
						"id": 2892824,
						"filingId": 0,
						"country": "US",
						"region": "AZ",
						"salesAmount": 80.48,
						"taxableAmount": 24.49,
						"taxAmount": 2.2,
						"taxDueAmount": 0.0,
						"collectAmount": 1.1,
						"totalRemittanceAmount": 0.0,
						"nonTaxableAmount": 55.99,
						"consumerUseTaxAmount": 0.0,
						"consumerUseNonTaxableAmount": 0.0,
						"consumerUseTaxableAmount": 0.0,
						"startDate": "2016-10-01T00:00:00",
						"endDate": "2016-10-31T00:00:00",
						"hasNexus": true,
						"status": "PendingApproval",
						"returns": [
							{
								"id": 5233103,
								"filingRegionId": 0,
								"filingCalendarId": 513256,
								"status": "PendingApproval",
								"filingFrequency": "Monthly",
								"salesAmount": 0.0,
								"filingType": "ElectronicReturn",
								"formName": "AL 2100",
								"remitAmount": 0.0,
								"formCode": "AL2100",
								"description": "Sales Tax Return",
								"taxableAmount": 0.0,
								"taxAmount": 0.0,
								"collectAmount": 1.0,
								"taxDueAmount": 0.0,
								"nonTaxableAmount": 0.0,
								"nonTaxableDueAmount": 0.0,
								"consumerUseTaxAmount": 0.0,
								"consumerUseTaxDueAmount": 0.0,
								"consumerUseNonTaxableAmount": 0.0,
								"consumerUseTaxableAmount": 0.0,
								"totalAdjustments": 0.0,
								"excludedSalesAmount": 0.0,
								"excludedNonTaxableAmount": 0.0,
								"excludedTaxAmount": 0.0,
								"carryOverSalesAmount": 0.0,
								"carryOverNonTaxableAmount": 0.0,
								"carryOverTaxAmount": 0.0,
								"carryOverConsumerUseTaxAmount": 0.0,
								"taxAccrualAmount": 0.0,
								"salesAccrualAmount": 0.0,
								"nonTaxableAccrualAmount": 0.0,
								"taxableAccrualAmount": 0.0,
								"salesTaxAccrualAmount": 0.0,
								"sellersUseTaxAccrualAmount": 0.0,
								"consumerUseTaxAccrualAmount": 0.0,
								"consumerUseTaxableAccrualAmount": 0.0,
								"consumerUseNonTaxableAccrualAmount": 0.0,
								"adjustments": [
									{
										"id": 15634,
										"amount": 100.0,
										"period": "CurrentPeriod",
										"type": "Discount",
										"isCalculated": false,
										"accountType": "AccountsReceivableAccountsPayable"
									}
								],
								"totalAugmentations": 0.0,
								"augmentations": [
									{
										"id": 103230,
										"fieldAmount": 10.0,
										"fieldName": "Credit from the State"
									}
								],
								"totalPayments": 0.0,
								"accrualType": 0
							}
						]
					}
				]
			}
		},
		"FilingRegionModel": {
			"description": "Regions",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this filing region.",
					"type": "integer",
					"example": 2892824
				},
				"filingId": {
					"format": "int64",
					"description": "The filing id that this region belongs too",
					"type": "integer",
					"example": 0
				},
				"country": {
					"description": "The two-character ISO-3166 code for the country.",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "The two or three character region code for the region.",
					"type": "string",
					"example": "AZ"
				},
				"salesAmount": {
					"format": "double",
					"description": "The sales amount.",
					"type": "number",
					"example": 80.48
				},
				"taxableAmount": {
					"format": "double",
					"description": "The taxable amount.",
					"type": "number",
					"example": 24.49
				},
				"taxAmount": {
					"format": "double",
					"description": "The tax amount.",
					"type": "number",
					"example": 2.2
				},
				"taxDueAmount": {
					"format": "double",
					"description": "The tax amount due.",
					"type": "number",
					"example": 0.0
				},
				"collectAmount": {
					"format": "double",
					"description": "The amount collected by Avalara for this region",
					"type": "number",
					"example": 1.1
				},
				"totalRemittanceAmount": {
					"format": "double",
					"description": "Total remittance amount of all returns in region",
					"type": "number",
					"example": 0.0
				},
				"nonTaxableAmount": {
					"format": "double",
					"description": "The non-taxable amount.",
					"type": "number",
					"example": 55.99
				},
				"consumerUseTaxAmount": {
					"format": "double",
					"description": "Consumer use tax liability.",
					"type": "number",
					"example": 0.0
				},
				"consumerUseNonTaxableAmount": {
					"format": "double",
					"description": "Consumer use non-taxable amount.",
					"type": "number",
					"example": 0.0
				},
				"consumerUseTaxableAmount": {
					"format": "double",
					"description": "Consumer use taxable amount.",
					"type": "number",
					"example": 0.0
				},
				"approveDate": {
					"format": "date-time",
					"description": "The date the filing region was approved.",
					"type": "string"
				},
				"startDate": {
					"format": "date-time",
					"description": "The start date for the filing cycle.",
					"type": "string",
					"example": "2016-10-01T00:00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "The end date for the filing cycle.",
					"type": "string",
					"example": "2016-10-31T00:00:00"
				},
				"hasNexus": {
					"description": "Whether or not you have nexus in this region.",
					"type": "boolean",
					"example": true
				},
				"status": {
					"description": "The current status of the filing region.",
					"enum": [
						"PendingApproval",
						"Dirty",
						"ApprovedToFile",
						"PendingFiling",
						"PendingFilingOnBehalf",
						"Filed",
						"FiledOnBehalf",
						"ReturnAccepted",
						"ReturnAcceptedOnBehalf",
						"PaymentRemitted",
						"Voided",
						"PendingReturn",
						"PendingReturnOnBehalf",
						"DoNotFile",
						"ReturnRejected",
						"ReturnRejectedOnBehalf",
						"ApprovedToFileOnBehalf"
					],
					"type": "string",
					"example": "PendingApproval",
					"x-enum-metadata": {
						"name": "FilingStatusId",
						"values": [
							{
								"name": "PendingApproval",
								"value": 0
							},
							{
								"name": "Dirty",
								"value": 1
							},
							{
								"name": "ApprovedToFile",
								"value": 2
							},
							{
								"name": "PendingFiling",
								"value": 3
							},
							{
								"name": "PendingFilingOnBehalf",
								"value": 4
							},
							{
								"name": "Filed",
								"value": 5
							},
							{
								"name": "FiledOnBehalf",
								"value": 6
							},
							{
								"name": "ReturnAccepted",
								"value": 7
							},
							{
								"name": "ReturnAcceptedOnBehalf",
								"value": 8
							},
							{
								"name": "PaymentRemitted",
								"value": 9
							},
							{
								"name": "Voided",
								"value": 10
							},
							{
								"name": "PendingReturn",
								"value": 11
							},
							{
								"name": "PendingReturnOnBehalf",
								"value": 12
							},
							{
								"name": "DoNotFile",
								"value": 13
							},
							{
								"name": "ReturnRejected",
								"value": 14
							},
							{
								"name": "ReturnRejectedOnBehalf",
								"value": 15
							},
							{
								"name": "ApprovedToFileOnBehalf",
								"value": 16
							}
						]
					}
				},
				"returns": {
					"description": "A list of tax returns in this region.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingReturnModel"
					},
					"example": [
						{
							"id": 5233103,
							"filingRegionId": 0,
							"filingCalendarId": 513256,
							"status": "PendingApproval",
							"filingFrequency": "Monthly",
							"salesAmount": 0.0,
							"filingType": "ElectronicReturn",
							"formName": "AL 2100",
							"remitAmount": 0.0,
							"formCode": "AL2100",
							"description": "Sales Tax Return",
							"taxableAmount": 0.0,
							"taxAmount": 0.0,
							"collectAmount": 1.0,
							"taxDueAmount": 0.0,
							"nonTaxableAmount": 0.0,
							"nonTaxableDueAmount": 0.0,
							"consumerUseTaxAmount": 0.0,
							"consumerUseTaxDueAmount": 0.0,
							"consumerUseNonTaxableAmount": 0.0,
							"consumerUseTaxableAmount": 0.0,
							"totalAdjustments": 0.0,
							"excludedSalesAmount": 0.0,
							"excludedNonTaxableAmount": 0.0,
							"excludedTaxAmount": 0.0,
							"carryOverSalesAmount": 0.0,
							"carryOverNonTaxableAmount": 0.0,
							"carryOverTaxAmount": 0.0,
							"carryOverConsumerUseTaxAmount": 0.0,
							"taxAccrualAmount": 0.0,
							"salesAccrualAmount": 0.0,
							"nonTaxableAccrualAmount": 0.0,
							"taxableAccrualAmount": 0.0,
							"salesTaxAccrualAmount": 0.0,
							"sellersUseTaxAccrualAmount": 0.0,
							"consumerUseTaxAccrualAmount": 0.0,
							"consumerUseTaxableAccrualAmount": 0.0,
							"consumerUseNonTaxableAccrualAmount": 0.0,
							"adjustments": [
								{
									"id": 15634,
									"amount": 100.0,
									"period": "CurrentPeriod",
									"type": "Discount",
									"isCalculated": false,
									"accountType": "AccountsReceivableAccountsPayable"
								}
							],
							"totalAugmentations": 0.0,
							"augmentations": [
								{
									"id": 103230,
									"fieldAmount": 10.0,
									"fieldName": "Credit from the State"
								}
							],
							"totalPayments": 0.0,
							"accrualType": 0
						}
					]
				},
				"suggestReturns": {
					"description": "A list of tax returns in this region.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingsCheckupSuggestedFormModel"
					}
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 2892824,
				"filingId": 0,
				"country": "US",
				"region": "AZ",
				"salesAmount": 80.48,
				"taxableAmount": 24.49,
				"taxAmount": 2.2,
				"taxDueAmount": 0.0,
				"collectAmount": 1.1,
				"totalRemittanceAmount": 0.0,
				"nonTaxableAmount": 55.99,
				"consumerUseTaxAmount": 0.0,
				"consumerUseNonTaxableAmount": 0.0,
				"consumerUseTaxableAmount": 0.0,
				"startDate": "2016-10-01T00:00:00",
				"endDate": "2016-10-31T00:00:00",
				"hasNexus": true,
				"status": "PendingApproval",
				"returns": [
					{
						"id": 5233103,
						"filingRegionId": 0,
						"filingCalendarId": 513256,
						"status": "PendingApproval",
						"filingFrequency": "Monthly",
						"salesAmount": 0.0,
						"filingType": "ElectronicReturn",
						"formName": "AL 2100",
						"remitAmount": 0.0,
						"formCode": "AL2100",
						"description": "Sales Tax Return",
						"taxableAmount": 0.0,
						"taxAmount": 0.0,
						"collectAmount": 1.0,
						"taxDueAmount": 0.0,
						"nonTaxableAmount": 0.0,
						"nonTaxableDueAmount": 0.0,
						"consumerUseTaxAmount": 0.0,
						"consumerUseTaxDueAmount": 0.0,
						"consumerUseNonTaxableAmount": 0.0,
						"consumerUseTaxableAmount": 0.0,
						"totalAdjustments": 0.0,
						"excludedSalesAmount": 0.0,
						"excludedNonTaxableAmount": 0.0,
						"excludedTaxAmount": 0.0,
						"carryOverSalesAmount": 0.0,
						"carryOverNonTaxableAmount": 0.0,
						"carryOverTaxAmount": 0.0,
						"carryOverConsumerUseTaxAmount": 0.0,
						"taxAccrualAmount": 0.0,
						"salesAccrualAmount": 0.0,
						"nonTaxableAccrualAmount": 0.0,
						"taxableAccrualAmount": 0.0,
						"salesTaxAccrualAmount": 0.0,
						"sellersUseTaxAccrualAmount": 0.0,
						"consumerUseTaxAccrualAmount": 0.0,
						"consumerUseTaxableAccrualAmount": 0.0,
						"consumerUseNonTaxableAccrualAmount": 0.0,
						"adjustments": [
							{
								"id": 15634,
								"amount": 100.0,
								"period": "CurrentPeriod",
								"type": "Discount",
								"isCalculated": false,
								"accountType": "AccountsReceivableAccountsPayable"
							}
						],
						"totalAugmentations": 0.0,
						"augmentations": [
							{
								"id": 103230,
								"fieldAmount": 10.0,
								"fieldName": "Credit from the State"
							}
						],
						"totalPayments": 0.0,
						"accrualType": 0
					}
				]
			}
		},
		"FilingReturnModel": {
			"description": "Filing Returns Model",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this filing return.",
					"type": "integer",
					"example": 5233103
				},
				"filingRegionId": {
					"format": "int64",
					"description": "The region id that this return belongs too",
					"type": "integer",
					"example": 0
				},
				"filingCalendarId": {
					"format": "int64",
					"description": "The unique ID number of the filing calendar associated with this return.",
					"type": "integer",
					"example": 513256
				},
				"resourceFileId": {
					"format": "int64",
					"description": "The resourceFileId of the return.  Will be null if not available.",
					"type": "integer"
				},
				"taxAuthorityId": {
					"format": "int32",
					"description": "Tax Authority ID of this return",
					"type": "integer"
				},
				"status": {
					"description": "The current status of the filing return.",
					"enum": [
						"PendingApproval",
						"Dirty",
						"ApprovedToFile",
						"PendingFiling",
						"PendingFilingOnBehalf",
						"Filed",
						"FiledOnBehalf",
						"ReturnAccepted",
						"ReturnAcceptedOnBehalf",
						"PaymentRemitted",
						"Voided",
						"PendingReturn",
						"PendingReturnOnBehalf",
						"DoNotFile",
						"ReturnRejected",
						"ReturnRejectedOnBehalf",
						"ApprovedToFileOnBehalf"
					],
					"type": "string",
					"example": "PendingApproval",
					"x-enum-metadata": {
						"name": "FilingStatusId",
						"values": [
							{
								"name": "PendingApproval",
								"value": 0
							},
							{
								"name": "Dirty",
								"value": 1
							},
							{
								"name": "ApprovedToFile",
								"value": 2
							},
							{
								"name": "PendingFiling",
								"value": 3
							},
							{
								"name": "PendingFilingOnBehalf",
								"value": 4
							},
							{
								"name": "Filed",
								"value": 5
							},
							{
								"name": "FiledOnBehalf",
								"value": 6
							},
							{
								"name": "ReturnAccepted",
								"value": 7
							},
							{
								"name": "ReturnAcceptedOnBehalf",
								"value": 8
							},
							{
								"name": "PaymentRemitted",
								"value": 9
							},
							{
								"name": "Voided",
								"value": 10
							},
							{
								"name": "PendingReturn",
								"value": 11
							},
							{
								"name": "PendingReturnOnBehalf",
								"value": 12
							},
							{
								"name": "DoNotFile",
								"value": 13
							},
							{
								"name": "ReturnRejected",
								"value": 14
							},
							{
								"name": "ReturnRejectedOnBehalf",
								"value": 15
							},
							{
								"name": "ApprovedToFileOnBehalf",
								"value": 16
							}
						]
					}
				},
				"filingFrequency": {
					"description": "The filing frequency of the return.",
					"enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly", "Weekly"],
					"type": "string",
					"example": "Monthly",
					"x-enum-metadata": {
						"name": "FilingFrequencyId",
						"values": [
							{
								"name": "Monthly",
								"value": 1
							},
							{
								"name": "Quarterly",
								"value": 2
							},
							{
								"name": "SemiAnnually",
								"value": 3
							},
							{
								"name": "Annually",
								"value": 4
							},
							{
								"name": "Bimonthly",
								"value": 5
							},
							{
								"name": "Occasional",
								"value": 6
							},
							{
								"name": "InverseQuarterly",
								"value": 7
							},
							{
								"name": "Weekly",
								"value": 8
							}
						]
					}
				},
				"filedDate": {
					"format": "date-time",
					"description": "The date the return was filed by Avalara.",
					"type": "string"
				},
				"startPeriod": {
					"format": "date-time",
					"description": "The start date of this return",
					"type": "string"
				},
				"endPeriod": {
					"format": "date-time",
					"description": "The end date of this return",
					"type": "string"
				},
				"salesAmount": {
					"format": "double",
					"description": "The sales amount.",
					"type": "number",
					"example": 0.0
				},
				"filingType": {
					"description": "The filing type of the return.",
					"enum": ["PaperReturn", "ElectronicReturn", "SER", "EFTPaper", "PhonePaper", "SignatureReady", "EfileCheck"],
					"type": "string",
					"example": "ElectronicReturn",
					"x-enum-metadata": {
						"name": "FilingTypeId",
						"values": [
							{
								"name": "PaperReturn",
								"value": 0
							},
							{
								"name": "ElectronicReturn",
								"value": 1
							},
							{
								"name": "SER",
								"value": 2
							},
							{
								"name": "EFTPaper",
								"value": 3
							},
							{
								"name": "PhonePaper",
								"value": 4
							},
							{
								"name": "SignatureReady",
								"value": 5
							},
							{
								"name": "EfileCheck",
								"value": 6
							}
						]
					}
				},
				"formName": {
					"description": "The name of the form.",
					"type": "string",
					"example": "AL 2100"
				},
				"remitAmount": {
					"format": "double",
					"description": "The remittance amount of the return.",
					"type": "number",
					"example": 0.0
				},
				"formCode": {
					"description": "The unique code of the form.",
					"type": "string",
					"example": "AL2100"
				},
				"description": {
					"description": "A description for the return.",
					"type": "string",
					"example": "Sales Tax Return"
				},
				"taxableAmount": {
					"format": "double",
					"description": "The taxable amount.",
					"type": "number",
					"example": 0.0
				},
				"taxAmount": {
					"format": "double",
					"description": "The tax amount.",
					"type": "number",
					"example": 0.0
				},
				"collectAmount": {
					"format": "double",
					"description": "The amount collected by avalara for this return",
					"type": "number",
					"example": 1.0
				},
				"taxDueAmount": {
					"format": "double",
					"description": "The tax due amount.",
					"type": "number",
					"example": 0.0
				},
				"nonTaxableAmount": {
					"format": "double",
					"description": "The non-taxable amount.",
					"type": "number",
					"example": 0.0
				},
				"nonTaxableDueAmount": {
					"format": "double",
					"description": "The non-taxable due amount.",
					"type": "number",
					"example": 0.0
				},
				"consumerUseTaxAmount": {
					"format": "double",
					"description": "Consumer use tax liability during the period.",
					"type": "number",
					"example": 0.0
				},
				"consumerUseTaxDueAmount": {
					"format": "double",
					"description": "Consumer use tax liability accrued during the period.",
					"type": "number",
					"example": 0.0
				},
				"consumerUseNonTaxableAmount": {
					"format": "double",
					"description": "Consumer use non-taxable amount.",
					"type": "number",
					"example": 0.0
				},
				"consumerUseTaxableAmount": {
					"format": "double",
					"description": "Consumer use taxable amount.",
					"type": "number",
					"example": 0.0
				},
				"totalAdjustments": {
					"format": "double",
					"description": "Total amount of adjustments on this return",
					"type": "number",
					"example": 0.0
				},
				"excludedSalesAmount": {
					"format": "double",
					"description": "The amount of sales excluded from the liability calculation",
					"type": "number",
					"example": 0.0
				},
				"excludedNonTaxableAmount": {
					"format": "double",
					"description": "The amount of non-taxable sales excluded from the liability calculation",
					"type": "number",
					"example": 0.0
				},
				"excludedTaxAmount": {
					"format": "double",
					"description": "The amount of tax excluded from the liability calculation",
					"type": "number",
					"example": 0.0
				},
				"carryOverSalesAmount": {
					"format": "double",
					"description": "The amount of carry over sales applied to the liability calculation",
					"type": "number",
					"example": 0.0
				},
				"carryOverNonTaxableAmount": {
					"format": "double",
					"description": "The amount of carry over non taxable sales applied to the liability calculation",
					"type": "number",
					"example": 0.0
				},
				"carryOverTaxAmount": {
					"format": "double",
					"description": "The amount of carry over sales tax applied to the liability calculation",
					"type": "number",
					"example": 0.0
				},
				"carryOverConsumerUseTaxAmount": {
					"format": "double",
					"description": "The amount of carry over consumer use tax applied to the liability calculation",
					"type": "number",
					"example": 0.0
				},
				"taxAccrualAmount": {
					"format": "double",
					"description": "The total amount of total tax accrued in the current active period",
					"type": "number",
					"example": 0.0
				},
				"salesAccrualAmount": {
					"format": "double",
					"description": "The total amount of sales accrued in the current active period",
					"type": "number",
					"example": 0.0
				},
				"nonTaxableAccrualAmount": {
					"format": "double",
					"description": "The total amount of nontaxable sales accrued in the current active period",
					"type": "number",
					"example": 0.0
				},
				"taxableAccrualAmount": {
					"format": "double",
					"description": "The total amount of taxable sales accrued in the current active period",
					"type": "number",
					"example": 0.0
				},
				"salesTaxAccrualAmount": {
					"format": "double",
					"description": "The total amount of sales tax accrued in the current active period",
					"type": "number",
					"example": 0.0
				},
				"sellersUseTaxAccrualAmount": {
					"format": "double",
					"description": "The total amount of sellers use tax accrued in the current active period",
					"type": "number",
					"example": 0.0
				},
				"consumerUseTaxAccrualAmount": {
					"format": "double",
					"description": "The total amount of consumer use tax accrued in the current active period",
					"type": "number",
					"example": 0.0
				},
				"consumerUseTaxableAccrualAmount": {
					"format": "double",
					"description": "The total amount of consumer use taxable sales accrued in the current active period",
					"type": "number",
					"example": 0.0
				},
				"consumerUseNonTaxableAccrualAmount": {
					"format": "double",
					"description": "The total amount of consumer use non taxable sales accrued in the current active period",
					"type": "number",
					"example": 0.0
				},
				"adjustments": {
					"description": "The Adjustments for this return.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingAdjustmentModel"
					},
					"example": [
						{
							"id": 15634,
							"amount": 100.0,
							"period": "CurrentPeriod",
							"type": "Discount",
							"isCalculated": false,
							"accountType": "AccountsReceivableAccountsPayable"
						}
					]
				},
				"totalAugmentations": {
					"format": "double",
					"description": "Total amount of augmentations on this return",
					"type": "number",
					"example": 0.0
				},
				"augmentations": {
					"description": "The Augmentations for this return.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingAugmentationModel"
					},
					"example": [
						{
							"id": 103230,
							"fieldAmount": 10.0,
							"fieldName": "Credit from the State"
						}
					]
				},
				"totalPayments": {
					"format": "double",
					"description": "Total amount of payments on this return",
					"type": "number",
					"example": 0.0
				},
				"payments": {
					"description": "The payments for this return.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingPaymentModel"
					}
				},
				"accrualType": {
					"description": "Accrual type of the return",
					"enum": ["Filing", "Accrual"],
					"type": "string",
					"example": 0,
					"x-enum-metadata": {
						"name": "AccrualType",
						"values": [
							{
								"name": "Filing",
								"value": 1
							},
							{
								"name": "Accrual",
								"value": 2
							}
						]
					}
				},
				"month": {
					"format": "int32",
					"description": "The month of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.\r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
					"type": "integer"
				},
				"year": {
					"format": "int32",
					"description": "The year of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.\r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
					"type": "integer"
				},
				"attachments": {
					"description": "The attachments for this return.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingAttachmentModel"
					}
				},
				"excludedCarryOverCredits": {
					"$ref": "#/definitions/FilingReturnCreditModel",
					"description": "The excluded carry over credit documents"
				},
				"appliedCarryOverCredits": {
					"$ref": "#/definitions/FilingReturnCreditModel",
					"description": "The applied carry over credit documents"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				}
			},
			"example": {
				"id": 5233103,
				"filingRegionId": 0,
				"filingCalendarId": 513256,
				"status": "PendingApproval",
				"filingFrequency": "Monthly",
				"salesAmount": 0.0,
				"filingType": "ElectronicReturn",
				"formName": "AL 2100",
				"remitAmount": 0.0,
				"formCode": "AL2100",
				"description": "Sales Tax Return",
				"taxableAmount": 0.0,
				"taxAmount": 0.0,
				"collectAmount": 1.0,
				"taxDueAmount": 0.0,
				"nonTaxableAmount": 0.0,
				"nonTaxableDueAmount": 0.0,
				"consumerUseTaxAmount": 0.0,
				"consumerUseTaxDueAmount": 0.0,
				"consumerUseNonTaxableAmount": 0.0,
				"consumerUseTaxableAmount": 0.0,
				"totalAdjustments": 0.0,
				"excludedSalesAmount": 0.0,
				"excludedNonTaxableAmount": 0.0,
				"excludedTaxAmount": 0.0,
				"carryOverSalesAmount": 0.0,
				"carryOverNonTaxableAmount": 0.0,
				"carryOverTaxAmount": 0.0,
				"carryOverConsumerUseTaxAmount": 0.0,
				"taxAccrualAmount": 0.0,
				"salesAccrualAmount": 0.0,
				"nonTaxableAccrualAmount": 0.0,
				"taxableAccrualAmount": 0.0,
				"salesTaxAccrualAmount": 0.0,
				"sellersUseTaxAccrualAmount": 0.0,
				"consumerUseTaxAccrualAmount": 0.0,
				"consumerUseTaxableAccrualAmount": 0.0,
				"consumerUseNonTaxableAccrualAmount": 0.0,
				"adjustments": [
					{
						"id": 15634,
						"amount": 100.0,
						"period": "CurrentPeriod",
						"type": "Discount",
						"isCalculated": false,
						"accountType": "AccountsReceivableAccountsPayable"
					}
				],
				"totalAugmentations": 0.0,
				"augmentations": [
					{
						"id": 103230,
						"fieldAmount": 10.0,
						"fieldName": "Credit from the State"
					}
				],
				"totalPayments": 0.0,
				"accrualType": 0
			}
		},
		"FilingsCheckupSuggestedFormModel": {
			"description": "Worksheet Checkup Report Suggested Form Model",
			"type": "object",
			"properties": {
				"taxAuthorityId": {
					"format": "int32",
					"description": "Tax Authority ID of the suggested form returned",
					"type": "integer",
					"example": 71
				},
				"country": {
					"description": "Country of the suggested form returned",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "Region of the suggested form returned",
					"type": "string",
					"example": "NY"
				},
				"taxFormCode": {
					"description": "Name of the suggested form returned",
					"type": "string",
					"example": "NYAU11"
				},
				"returnName": {
					"description": "Legacy Name of the suggested form returned",
					"type": "string"
				}
			},
			"example": {
				"taxAuthorityId": 71,
				"country": "US",
				"region": "NY",
				"taxFormCode": "NYAU11"
			}
		},
		"FilingAdjustmentModel": {
			"description": "A model for return adjustments.",
			"required": ["amount", "period", "type", "accountType"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number for the adjustment.",
					"type": "integer",
					"readOnly": true,
					"example": 15634
				},
				"filingId": {
					"format": "int64",
					"description": "The filing return id that this applies too",
					"type": "integer",
					"readOnly": true
				},
				"amount": {
					"format": "double",
					"description": "The adjustment amount.",
					"type": "number",
					"example": 100.0
				},
				"period": {
					"description": "The filing period the adjustment is applied to.",
					"enum": ["None", "CurrentPeriod", "NextPeriod"],
					"type": "string",
					"example": "CurrentPeriod",
					"x-enum-metadata": {
						"name": "AdjustmentPeriodTypeId",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "CurrentPeriod",
								"value": 1
							},
							{
								"name": "NextPeriod",
								"value": 2
							}
						]
					}
				},
				"type": {
					"description": "The type of the adjustment.",
					"type": "string",
					"example": "Discount"
				},
				"isCalculated": {
					"description": "Whether or not the adjustment has been calculated.",
					"type": "boolean",
					"example": false
				},
				"accountType": {
					"description": "The account type of the adjustment.",
					"enum": ["None", "AccountsReceivableAccountsPayable", "AccountsReceivable", "AccountsPayable"],
					"type": "string",
					"example": "AccountsReceivableAccountsPayable",
					"x-enum-metadata": {
						"name": "PaymentAccountTypeId",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "AccountsReceivableAccountsPayable",
								"value": 1
							},
							{
								"name": "AccountsReceivable",
								"value": 2
							},
							{
								"name": "AccountsPayable",
								"value": 3
							}
						]
					}
				},
				"reason": {
					"description": "A descriptive reason for creating this adjustment.",
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 15634,
				"amount": 100.0,
				"period": "CurrentPeriod",
				"type": "Discount",
				"isCalculated": false,
				"accountType": "AccountsReceivableAccountsPayable"
			}
		},
		"FilingAugmentationModel": {
			"description": "A model for return augmentations.",
			"required": ["fieldAmount", "fieldName"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number for the augmentation.",
					"type": "integer",
					"readOnly": true,
					"example": 103230
				},
				"filingId": {
					"format": "int64",
					"description": "The filing return id that this applies too",
					"type": "integer",
					"readOnly": true
				},
				"fieldAmount": {
					"format": "double",
					"description": "The field amount.",
					"type": "number",
					"example": 10.0
				},
				"fieldName": {
					"description": "The field name.",
					"type": "string",
					"example": "Credit from the State"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 103230,
				"fieldAmount": 10.0,
				"fieldName": "Credit from the State"
			}
		},
		"FilingPaymentModel": {
			"description": "A model for return payments.",
			"required": ["filingId", "paymentAmount", "type"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number for the payment.",
					"type": "integer",
					"readOnly": true,
					"example": 15634
				},
				"filingId": {
					"format": "int64",
					"description": "The filing return id that this applies too",
					"type": "integer",
					"example": 1234
				},
				"paymentAmount": {
					"format": "double",
					"description": "The payment amount.",
					"type": "number",
					"example": 100.0
				},
				"type": {
					"description": "The type of the payment.",
					"enum": ["CurrentPeriod", "Prepayment", "PriorPayment", "PriorCspFee"],
					"type": "string",
					"example": "CurrentPeriod",
					"x-enum-metadata": {
						"name": "PaymentType",
						"values": [
							{
								"name": "CurrentPeriod",
								"value": 0
							},
							{
								"name": "Prepayment",
								"value": 1
							},
							{
								"name": "PriorPayment",
								"value": 2
							},
							{
								"name": "PriorCspFee",
								"value": 3
							}
						]
					}
				},
				"isCalculated": {
					"description": "Whether or not the payment has been calculated.",
					"type": "boolean",
					"example": false
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 15634,
				"filingId": 1234,
				"paymentAmount": 100.0,
				"type": "CurrentPeriod",
				"isCalculated": false
			}
		},
		"FilingReturnCreditModel": {
			"description": "An attachment associated with a filing return",
			"type": "object",
			"properties": {
				"totalSales": {
					"format": "double",
					"description": "The resourceFileId used to retrieve the attachment",
					"type": "number",
					"example": 0.0
				},
				"totalExempt": {
					"format": "double",
					"description": "The resourceFileId used to retrieve the attachment",
					"type": "number",
					"example": 0.0
				},
				"totalTaxable": {
					"format": "double",
					"description": "The resourceFileId used to retrieve the attachment",
					"type": "number",
					"example": 0.0
				},
				"totalTax": {
					"format": "double",
					"description": "The resourceFileId used to retrieve the attachment",
					"type": "number",
					"example": 0.0
				},
				"transactionDetails": {
					"description": "The excluded carry over credit documents",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/WorksheetDocument"
					}
				}
			},
			"example": {
				"totalSales": 0.0,
				"totalExempt": 0.0,
				"totalTaxable": 0.0,
				"totalTax": 0.0
			}
		},
		"WorksheetDocument": {
			"type": "object",
			"properties": {
				"docCode": {
					"type": "string"
				},
				"docDate": {
					"format": "date-time",
					"type": "string"
				},
				"totalExempt": {
					"format": "double",
					"type": "number"
				},
				"totalTaxable": {
					"format": "double",
					"type": "number"
				},
				"totalTax": {
					"format": "double",
					"type": "number"
				},
				"lines": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/WorksheetDocumentLine"
					}
				},
				"messages": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/Message"
					}
				},
				"resultCode": {
					"enum": ["Success", "Warning", "Error", "Exception"],
					"type": "string"
				},
				"transactionId": {
					"type": "string"
				}
			}
		},
		"WorksheetDocumentLine": {
			"type": "object",
			"properties": {
				"reportingDate": {
					"format": "date-time",
					"type": "string"
				},
				"lineNo": {
					"type": "string"
				},
				"lineAmount": {
					"format": "double",
					"type": "number"
				},
				"exemptAmount": {
					"format": "double",
					"type": "number"
				},
				"taxableAmount": {
					"format": "double",
					"type": "number"
				},
				"taxAmount": {
					"format": "double",
					"type": "number"
				},
				"messages": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/Message"
					}
				},
				"resultCode": {
					"enum": ["Success", "Warning", "Error", "Exception"],
					"type": "string"
				},
				"transactionId": {
					"type": "string"
				}
			}
		},
		"Message": {
			"type": "object",
			"properties": {
				"details": {
					"type": "string"
				},
				"helpLink": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"refersTo": {
					"type": "string"
				},
				"severity": {
					"enum": ["Success", "Warning", "Error", "Exception"],
					"type": "string"
				},
				"source": {
					"type": "string"
				},
				"summary": {
					"type": "string"
				}
			}
		},
		"FetchResult[MultiTaxFilingModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/MultiTaxFilingModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"MultiTaxFilingModel": {
			"description": "Represents a listing of all tax calculation data for filings and for accruing to future filings.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this filing.",
					"type": "integer",
					"example": 326529
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company for this filing.",
					"type": "integer",
					"example": 62593
				},
				"month": {
					"format": "int32",
					"description": "The month of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.\r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
					"type": "integer",
					"example": 10
				},
				"year": {
					"format": "int16",
					"description": "The year of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.\r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
					"type": "integer",
					"example": 2016
				},
				"type": {
					"description": "Indicates whether this is an original or an amended filing.",
					"enum": ["Original", "Amended", "Test"],
					"type": "string",
					"example": "Original",
					"x-enum-metadata": {
						"name": "WorksheetTypeId",
						"values": [
							{
								"name": "Original",
								"value": 0
							},
							{
								"name": "Amended",
								"value": 1
							},
							{
								"name": "Test",
								"value": 2
							}
						]
					}
				},
				"taxSummary": {
					"$ref": "#/definitions/FilingsTaxSummaryModel",
					"description": "A summary of all taxes combined for this period"
				},
				"taxDetails": {
					"description": "A detailed breakdown of the taxes in this filing",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingsTaxDetailsModel"
					}
				},
				"filingRegions": {
					"description": "A listing of regional tax filings within this time period.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/MultiTaxFilingRegionModel"
					},
					"example": [
						{
							"country": "US",
							"region": "AZ",
							"hasNexus": true,
							"status": "PendingApproval",
							"regionTaxSummary": {
								"salesAmount": 200.0,
								"taxableAmount": 0.0,
								"nonTaxableAmount": 100.0,
								"taxAmount": 10.0,
								"remittanceAmount": 10.0,
								"collectAmount": 10.0,
								"salesAccrualAmount": 100.0,
								"taxableAccrualAmount": 0.0,
								"nonTaxableAccrualAmount": 100.0,
								"taxAccrualAmount": 10.0,
								"reportableSalesAmount": 100.0,
								"reportableNonTaxableAmount": 50.0,
								"reportableTaxableAmount": 5.0,
								"reportableTaxAmount": 5.0
							},
							"returns": [
								{
									"id": 5233103,
									"filingCalendarId": 513256,
									"status": "PendingApproval",
									"filingFrequency": "Monthly",
									"filingType": "ElectronicReturn",
									"formName": "AL 2100",
									"formCode": "AL2100",
									"description": "Sales Tax Return",
									"accrualType": 0,
									"returnTaxSummary": {
										"salesAmount": 200.0,
										"taxableAmount": 0.0,
										"nonTaxableAmount": 100.0,
										"taxAmount": 10.0,
										"remittanceAmount": 10.0,
										"collectAmount": 10.0,
										"salesAccrualAmount": 100.0,
										"taxableAccrualAmount": 0.0,
										"nonTaxableAccrualAmount": 100.0,
										"taxAccrualAmount": 10.0,
										"reportableSalesAmount": 100.0,
										"reportableNonTaxableAmount": 50.0,
										"reportableTaxableAmount": 5.0,
										"reportableTaxAmount": 5.0
									},
									"returnTaxDetails": [
										{
											"taxType": "S",
											"salesAmount": 200.0,
											"nonTaxableAmount": 100.0,
											"taxAmount": 10.0,
											"numberOfNights": 1
										}
									],
									"totalAdjustments": 0.0,
									"adjustments": [
										{
											"id": 15634,
											"amount": 100.0,
											"period": "CurrentPeriod",
											"type": "Discount",
											"isCalculated": false,
											"accountType": "AccountsReceivableAccountsPayable"
										}
									],
									"totalAugmentations": 0.0,
									"totalPayments": 0.0
								}
							]
						}
					]
				}
			},
			"example": {
				"id": 326529,
				"companyId": 62593,
				"month": 10,
				"year": 2016,
				"type": "Original",
				"filingRegions": [
					{
						"country": "US",
						"region": "AZ",
						"hasNexus": true,
						"status": "PendingApproval",
						"regionTaxSummary": {
							"salesAmount": 200.0,
							"taxableAmount": 0.0,
							"nonTaxableAmount": 100.0,
							"taxAmount": 10.0,
							"remittanceAmount": 10.0,
							"collectAmount": 10.0,
							"salesAccrualAmount": 100.0,
							"taxableAccrualAmount": 0.0,
							"nonTaxableAccrualAmount": 100.0,
							"taxAccrualAmount": 10.0,
							"reportableSalesAmount": 100.0,
							"reportableNonTaxableAmount": 50.0,
							"reportableTaxableAmount": 5.0,
							"reportableTaxAmount": 5.0
						},
						"returns": [
							{
								"id": 5233103,
								"filingCalendarId": 513256,
								"status": "PendingApproval",
								"filingFrequency": "Monthly",
								"filingType": "ElectronicReturn",
								"formName": "AL 2100",
								"formCode": "AL2100",
								"description": "Sales Tax Return",
								"accrualType": 0,
								"returnTaxSummary": {
									"salesAmount": 200.0,
									"taxableAmount": 0.0,
									"nonTaxableAmount": 100.0,
									"taxAmount": 10.0,
									"remittanceAmount": 10.0,
									"collectAmount": 10.0,
									"salesAccrualAmount": 100.0,
									"taxableAccrualAmount": 0.0,
									"nonTaxableAccrualAmount": 100.0,
									"taxAccrualAmount": 10.0,
									"reportableSalesAmount": 100.0,
									"reportableNonTaxableAmount": 50.0,
									"reportableTaxableAmount": 5.0,
									"reportableTaxAmount": 5.0
								},
								"returnTaxDetails": [
									{
										"taxType": "S",
										"salesAmount": 200.0,
										"nonTaxableAmount": 100.0,
										"taxAmount": 10.0,
										"numberOfNights": 1
									}
								],
								"totalAdjustments": 0.0,
								"adjustments": [
									{
										"id": 15634,
										"amount": 100.0,
										"period": "CurrentPeriod",
										"type": "Discount",
										"isCalculated": false,
										"accountType": "AccountsReceivableAccountsPayable"
									}
								],
								"totalAugmentations": 0.0,
								"totalPayments": 0.0
							}
						]
					}
				]
			}
		},
		"FilingsTaxSummaryModel": {
			"description": "Represents a listing of all tax calculation data for filings and for accruing to future filings.",
			"type": "object",
			"properties": {
				"salesAmount": {
					"format": "double",
					"description": "The total sales amount",
					"type": "number",
					"example": 200.0
				},
				"taxableAmount": {
					"format": "double",
					"description": "The taxable amount",
					"type": "number",
					"example": 0.0
				},
				"nonTaxableAmount": {
					"format": "double",
					"description": "The nontaxable amount",
					"type": "number",
					"example": 100.0
				},
				"taxAmount": {
					"format": "double",
					"description": "The tax amount",
					"type": "number",
					"example": 10.0
				},
				"remittanceAmount": {
					"format": "double",
					"description": "The remittance amount",
					"type": "number",
					"example": 10.0
				},
				"collectAmount": {
					"format": "double",
					"description": "The collect amount",
					"type": "number",
					"example": 10.0
				},
				"salesAccrualAmount": {
					"format": "double",
					"description": "The sales accrual amount",
					"type": "number",
					"example": 100.0
				},
				"taxableAccrualAmount": {
					"format": "double",
					"description": "The taxable sales accrual amount",
					"type": "number",
					"example": 0.0
				},
				"nonTaxableAccrualAmount": {
					"format": "double",
					"description": "The nontaxable accrual amount",
					"type": "number",
					"example": 100.0
				},
				"taxAccrualAmount": {
					"format": "double",
					"description": "The tax accrual amount",
					"type": "number",
					"example": 10.0
				},
				"reportableSalesAmount": {
					"format": "double",
					"description": "reportableSalesAmount",
					"type": "number",
					"example": 100.0
				},
				"reportableNonTaxableAmount": {
					"format": "double",
					"description": "reportableNonTaxableAmount",
					"type": "number",
					"example": 50.0
				},
				"reportableTaxableAmount": {
					"format": "double",
					"description": "reportableTaxableAmount",
					"type": "number",
					"example": 5.0
				},
				"reportableTaxAmount": {
					"format": "double",
					"description": "reportableTaxAmount",
					"type": "number",
					"example": 5.0
				}
			},
			"example": {
				"salesAmount": 200.0,
				"taxableAmount": 0.0,
				"nonTaxableAmount": 100.0,
				"taxAmount": 10.0,
				"remittanceAmount": 10.0,
				"collectAmount": 10.0,
				"salesAccrualAmount": 100.0,
				"taxableAccrualAmount": 0.0,
				"nonTaxableAccrualAmount": 100.0,
				"taxAccrualAmount": 10.0,
				"reportableSalesAmount": 100.0,
				"reportableNonTaxableAmount": 50.0,
				"reportableTaxableAmount": 5.0,
				"reportableTaxAmount": 5.0
			}
		},
		"FilingsTaxDetailsModel": {
			"description": "Represents a listing of all tax calculation data for filings and for accruing to future filings.",
			"type": "object",
			"properties": {
				"taxType": {
					"description": "The tax type associated with the summary",
					"type": "string",
					"example": "S"
				},
				"salesAmount": {
					"format": "double",
					"description": "The total sales amount",
					"type": "number",
					"example": 200.0
				},
				"nonTaxableAmount": {
					"format": "double",
					"description": "The nontaxable amount",
					"type": "number",
					"example": 100.0
				},
				"taxAmount": {
					"format": "double",
					"description": "The tax amount",
					"type": "number",
					"example": 10.0
				},
				"numberOfNights": {
					"format": "int64",
					"description": "The number of nights",
					"type": "integer",
					"example": 1
				}
			},
			"example": {
				"taxType": "S",
				"salesAmount": 200.0,
				"nonTaxableAmount": 100.0,
				"taxAmount": 10.0,
				"numberOfNights": 1
			}
		},
		"MultiTaxFilingRegionModel": {
			"description": "Regions",
			"type": "object",
			"properties": {
				"country": {
					"description": "The two-character ISO-3166 code for the country.",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "The two or three character region code for the region.",
					"type": "string",
					"example": "AZ"
				},
				"hasNexus": {
					"description": "Whether or not you have nexus in this region.",
					"type": "boolean",
					"example": true
				},
				"status": {
					"description": "The current status of the filing region.",
					"enum": [
						"PendingApproval",
						"Dirty",
						"ApprovedToFile",
						"PendingFiling",
						"PendingFilingOnBehalf",
						"Filed",
						"FiledOnBehalf",
						"ReturnAccepted",
						"ReturnAcceptedOnBehalf",
						"PaymentRemitted",
						"Voided",
						"PendingReturn",
						"PendingReturnOnBehalf",
						"DoNotFile",
						"ReturnRejected",
						"ReturnRejectedOnBehalf",
						"ApprovedToFileOnBehalf"
					],
					"type": "string",
					"example": "PendingApproval",
					"x-enum-metadata": {
						"name": "FilingStatusId",
						"values": [
							{
								"name": "PendingApproval",
								"value": 0
							},
							{
								"name": "Dirty",
								"value": 1
							},
							{
								"name": "ApprovedToFile",
								"value": 2
							},
							{
								"name": "PendingFiling",
								"value": 3
							},
							{
								"name": "PendingFilingOnBehalf",
								"value": 4
							},
							{
								"name": "Filed",
								"value": 5
							},
							{
								"name": "FiledOnBehalf",
								"value": 6
							},
							{
								"name": "ReturnAccepted",
								"value": 7
							},
							{
								"name": "ReturnAcceptedOnBehalf",
								"value": 8
							},
							{
								"name": "PaymentRemitted",
								"value": 9
							},
							{
								"name": "Voided",
								"value": 10
							},
							{
								"name": "PendingReturn",
								"value": 11
							},
							{
								"name": "PendingReturnOnBehalf",
								"value": 12
							},
							{
								"name": "DoNotFile",
								"value": 13
							},
							{
								"name": "ReturnRejected",
								"value": 14
							},
							{
								"name": "ReturnRejectedOnBehalf",
								"value": 15
							},
							{
								"name": "ApprovedToFileOnBehalf",
								"value": 16
							}
						]
					}
				},
				"regionTaxSummary": {
					"$ref": "#/definitions/FilingsTaxSummaryModel",
					"description": "A summary of all taxes compbined for this period",
					"example": {
						"salesAmount": 200.0,
						"taxableAmount": 0.0,
						"nonTaxableAmount": 100.0,
						"taxAmount": 10.0,
						"remittanceAmount": 10.0,
						"collectAmount": 10.0,
						"salesAccrualAmount": 100.0,
						"taxableAccrualAmount": 0.0,
						"nonTaxableAccrualAmount": 100.0,
						"taxAccrualAmount": 10.0,
						"reportableSalesAmount": 100.0,
						"reportableNonTaxableAmount": 50.0,
						"reportableTaxableAmount": 5.0,
						"reportableTaxAmount": 5.0
					}
				},
				"regionTaxDetails": {
					"description": "A detailed breakdown of the taxes in this filing",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingsTaxDetailsModel"
					}
				},
				"suggestReturns": {
					"description": "A list of tax returns in this region.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingsCheckupSuggestedFormModel"
					}
				},
				"returns": {
					"description": "A list of tax returns in this region.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/MultiTaxFilingReturnModel"
					},
					"example": [
						{
							"id": 5233103,
							"filingCalendarId": 513256,
							"status": "PendingApproval",
							"filingFrequency": "Monthly",
							"filingType": "ElectronicReturn",
							"formName": "AL 2100",
							"formCode": "AL2100",
							"description": "Sales Tax Return",
							"accrualType": 0,
							"returnTaxSummary": {
								"salesAmount": 200.0,
								"taxableAmount": 0.0,
								"nonTaxableAmount": 100.0,
								"taxAmount": 10.0,
								"remittanceAmount": 10.0,
								"collectAmount": 10.0,
								"salesAccrualAmount": 100.0,
								"taxableAccrualAmount": 0.0,
								"nonTaxableAccrualAmount": 100.0,
								"taxAccrualAmount": 10.0,
								"reportableSalesAmount": 100.0,
								"reportableNonTaxableAmount": 50.0,
								"reportableTaxableAmount": 5.0,
								"reportableTaxAmount": 5.0
							},
							"returnTaxDetails": [
								{
									"taxType": "S",
									"salesAmount": 200.0,
									"nonTaxableAmount": 100.0,
									"taxAmount": 10.0,
									"numberOfNights": 1
								}
							],
							"totalAdjustments": 0.0,
							"adjustments": [
								{
									"id": 15634,
									"amount": 100.0,
									"period": "CurrentPeriod",
									"type": "Discount",
									"isCalculated": false,
									"accountType": "AccountsReceivableAccountsPayable"
								}
							],
							"totalAugmentations": 0.0,
							"totalPayments": 0.0
						}
					]
				}
			},
			"example": {
				"country": "US",
				"region": "AZ",
				"hasNexus": true,
				"status": "PendingApproval",
				"regionTaxSummary": {
					"salesAmount": 200.0,
					"taxableAmount": 0.0,
					"nonTaxableAmount": 100.0,
					"taxAmount": 10.0,
					"remittanceAmount": 10.0,
					"collectAmount": 10.0,
					"salesAccrualAmount": 100.0,
					"taxableAccrualAmount": 0.0,
					"nonTaxableAccrualAmount": 100.0,
					"taxAccrualAmount": 10.0,
					"reportableSalesAmount": 100.0,
					"reportableNonTaxableAmount": 50.0,
					"reportableTaxableAmount": 5.0,
					"reportableTaxAmount": 5.0
				},
				"returns": [
					{
						"id": 5233103,
						"filingCalendarId": 513256,
						"status": "PendingApproval",
						"filingFrequency": "Monthly",
						"filingType": "ElectronicReturn",
						"formName": "AL 2100",
						"formCode": "AL2100",
						"description": "Sales Tax Return",
						"accrualType": 0,
						"returnTaxSummary": {
							"salesAmount": 200.0,
							"taxableAmount": 0.0,
							"nonTaxableAmount": 100.0,
							"taxAmount": 10.0,
							"remittanceAmount": 10.0,
							"collectAmount": 10.0,
							"salesAccrualAmount": 100.0,
							"taxableAccrualAmount": 0.0,
							"nonTaxableAccrualAmount": 100.0,
							"taxAccrualAmount": 10.0,
							"reportableSalesAmount": 100.0,
							"reportableNonTaxableAmount": 50.0,
							"reportableTaxableAmount": 5.0,
							"reportableTaxAmount": 5.0
						},
						"returnTaxDetails": [
							{
								"taxType": "S",
								"salesAmount": 200.0,
								"nonTaxableAmount": 100.0,
								"taxAmount": 10.0,
								"numberOfNights": 1
							}
						],
						"totalAdjustments": 0.0,
						"adjustments": [
							{
								"id": 15634,
								"amount": 100.0,
								"period": "CurrentPeriod",
								"type": "Discount",
								"isCalculated": false,
								"accountType": "AccountsReceivableAccountsPayable"
							}
						],
						"totalAugmentations": 0.0,
						"totalPayments": 0.0
					}
				]
			}
		},
		"MultiTaxFilingReturnModel": {
			"description": "Filing Returns Model",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this filing return.",
					"type": "integer",
					"example": 5233103
				},
				"filingCalendarId": {
					"format": "int64",
					"description": "The unique ID number of the filing calendar associated with this return.",
					"type": "integer",
					"example": 513256
				},
				"status": {
					"description": "The current status of the filing return.",
					"enum": [
						"PendingApproval",
						"Dirty",
						"ApprovedToFile",
						"PendingFiling",
						"PendingFilingOnBehalf",
						"Filed",
						"FiledOnBehalf",
						"ReturnAccepted",
						"ReturnAcceptedOnBehalf",
						"PaymentRemitted",
						"Voided",
						"PendingReturn",
						"PendingReturnOnBehalf",
						"DoNotFile",
						"ReturnRejected",
						"ReturnRejectedOnBehalf",
						"ApprovedToFileOnBehalf"
					],
					"type": "string",
					"example": "PendingApproval",
					"x-enum-metadata": {
						"name": "FilingStatusId",
						"values": [
							{
								"name": "PendingApproval",
								"value": 0
							},
							{
								"name": "Dirty",
								"value": 1
							},
							{
								"name": "ApprovedToFile",
								"value": 2
							},
							{
								"name": "PendingFiling",
								"value": 3
							},
							{
								"name": "PendingFilingOnBehalf",
								"value": 4
							},
							{
								"name": "Filed",
								"value": 5
							},
							{
								"name": "FiledOnBehalf",
								"value": 6
							},
							{
								"name": "ReturnAccepted",
								"value": 7
							},
							{
								"name": "ReturnAcceptedOnBehalf",
								"value": 8
							},
							{
								"name": "PaymentRemitted",
								"value": 9
							},
							{
								"name": "Voided",
								"value": 10
							},
							{
								"name": "PendingReturn",
								"value": 11
							},
							{
								"name": "PendingReturnOnBehalf",
								"value": 12
							},
							{
								"name": "DoNotFile",
								"value": 13
							},
							{
								"name": "ReturnRejected",
								"value": 14
							},
							{
								"name": "ReturnRejectedOnBehalf",
								"value": 15
							},
							{
								"name": "ApprovedToFileOnBehalf",
								"value": 16
							}
						]
					}
				},
				"filingFrequency": {
					"description": "The filing frequency of the return.",
					"enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly", "Weekly"],
					"type": "string",
					"example": "Monthly",
					"x-enum-metadata": {
						"name": "FilingFrequencyId",
						"values": [
							{
								"name": "Monthly",
								"value": 1
							},
							{
								"name": "Quarterly",
								"value": 2
							},
							{
								"name": "SemiAnnually",
								"value": 3
							},
							{
								"name": "Annually",
								"value": 4
							},
							{
								"name": "Bimonthly",
								"value": 5
							},
							{
								"name": "Occasional",
								"value": 6
							},
							{
								"name": "InverseQuarterly",
								"value": 7
							},
							{
								"name": "Weekly",
								"value": 8
							}
						]
					}
				},
				"filingType": {
					"description": "The filing type of the return.",
					"enum": ["PaperReturn", "ElectronicReturn", "SER", "EFTPaper", "PhonePaper", "SignatureReady", "EfileCheck"],
					"type": "string",
					"example": "ElectronicReturn",
					"x-enum-metadata": {
						"name": "FilingTypeId",
						"values": [
							{
								"name": "PaperReturn",
								"value": 0
							},
							{
								"name": "ElectronicReturn",
								"value": 1
							},
							{
								"name": "SER",
								"value": 2
							},
							{
								"name": "EFTPaper",
								"value": 3
							},
							{
								"name": "PhonePaper",
								"value": 4
							},
							{
								"name": "SignatureReady",
								"value": 5
							},
							{
								"name": "EfileCheck",
								"value": 6
							}
						]
					}
				},
				"formName": {
					"description": "The name of the form.",
					"type": "string",
					"example": "AL 2100"
				},
				"formCode": {
					"description": "The unique code of the form.",
					"type": "string",
					"example": "AL2100"
				},
				"description": {
					"description": "A description for the return.",
					"type": "string",
					"example": "Sales Tax Return"
				},
				"taxAuthorityId": {
					"format": "int32",
					"description": "Tax Authority ID of this return",
					"type": "integer"
				},
				"filedDate": {
					"format": "date-time",
					"description": "The date the return was filed by Avalara.",
					"type": "string"
				},
				"accrualType": {
					"description": "Accrual type of the return",
					"enum": ["Filing", "Accrual"],
					"type": "string",
					"example": 0,
					"x-enum-metadata": {
						"name": "AccrualType",
						"values": [
							{
								"name": "Filing",
								"value": 1
							},
							{
								"name": "Accrual",
								"value": 2
							}
						]
					}
				},
				"startPeriod": {
					"format": "date-time",
					"description": "The start date of this return",
					"type": "string"
				},
				"endPeriod": {
					"format": "date-time",
					"description": "The end date of this return",
					"type": "string"
				},
				"returnTaxSummary": {
					"$ref": "#/definitions/FilingsTaxSummaryModel",
					"description": "A summary of all taxes compbined for this period",
					"example": {
						"salesAmount": 200.0,
						"taxableAmount": 0.0,
						"nonTaxableAmount": 100.0,
						"taxAmount": 10.0,
						"remittanceAmount": 10.0,
						"collectAmount": 10.0,
						"salesAccrualAmount": 100.0,
						"taxableAccrualAmount": 0.0,
						"nonTaxableAccrualAmount": 100.0,
						"taxAccrualAmount": 10.0,
						"reportableSalesAmount": 100.0,
						"reportableNonTaxableAmount": 50.0,
						"reportableTaxableAmount": 5.0,
						"reportableTaxAmount": 5.0
					}
				},
				"returnTaxDetails": {
					"description": "A detailed breakdown of the taxes in this filing",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingsTaxDetailsModel"
					},
					"example": [
						{
							"taxType": "S",
							"salesAmount": 200.0,
							"nonTaxableAmount": 100.0,
							"taxAmount": 10.0,
							"numberOfNights": 1
						}
					]
				},
				"excludedCarryOverCredits": {
					"$ref": "#/definitions/FilingReturnCreditModel",
					"description": "The excluded carry over credit documents"
				},
				"appliedCarryOverCredits": {
					"$ref": "#/definitions/FilingReturnCreditModel",
					"description": "The applied carry over credit documents"
				},
				"totalAdjustments": {
					"format": "double",
					"description": "Total amount of adjustments on this return",
					"type": "number",
					"example": 0.0
				},
				"adjustments": {
					"description": "The Adjustments for this return.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingAdjustmentModel"
					},
					"example": [
						{
							"id": 15634,
							"amount": 100.0,
							"period": "CurrentPeriod",
							"type": "Discount",
							"isCalculated": false,
							"accountType": "AccountsReceivableAccountsPayable"
						}
					]
				},
				"totalAugmentations": {
					"format": "double",
					"description": "Total amount of augmentations on this return",
					"type": "number",
					"example": 0.0
				},
				"augmentations": {
					"description": "The Augmentations for this return.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingAugmentationModel"
					}
				},
				"totalPayments": {
					"format": "double",
					"description": "Total amount of payments on this return",
					"type": "number",
					"example": 0.0
				},
				"payments": {
					"description": "The payments for this return.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingPaymentModel"
					}
				},
				"attachments": {
					"description": "The attachments for this return.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingAttachmentModel"
					}
				}
			},
			"example": {
				"id": 5233103,
				"filingCalendarId": 513256,
				"status": "PendingApproval",
				"filingFrequency": "Monthly",
				"filingType": "ElectronicReturn",
				"formName": "AL 2100",
				"formCode": "AL2100",
				"description": "Sales Tax Return",
				"accrualType": 0,
				"returnTaxSummary": {
					"salesAmount": 200.0,
					"taxableAmount": 0.0,
					"nonTaxableAmount": 100.0,
					"taxAmount": 10.0,
					"remittanceAmount": 10.0,
					"collectAmount": 10.0,
					"salesAccrualAmount": 100.0,
					"taxableAccrualAmount": 0.0,
					"nonTaxableAccrualAmount": 100.0,
					"taxAccrualAmount": 10.0,
					"reportableSalesAmount": 100.0,
					"reportableNonTaxableAmount": 50.0,
					"reportableTaxableAmount": 5.0,
					"reportableTaxAmount": 5.0
				},
				"returnTaxDetails": [
					{
						"taxType": "S",
						"salesAmount": 200.0,
						"nonTaxableAmount": 100.0,
						"taxAmount": 10.0,
						"numberOfNights": 1
					}
				],
				"totalAdjustments": 0.0,
				"adjustments": [
					{
						"id": 15634,
						"amount": 100.0,
						"period": "CurrentPeriod",
						"type": "Discount",
						"isCalculated": false,
						"accountType": "AccountsReceivableAccountsPayable"
					}
				],
				"totalAugmentations": 0.0,
				"totalPayments": 0.0
			}
		},
		"FetchResult[FilingReturnModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingReturnModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"RebuildFilingsModel": {
			"description": "Rebuild a set of filings.",
			"required": ["rebuild"],
			"type": "object",
			"properties": {
				"rebuild": {
					"description": "Set this value to true in order to rebuild the filings.",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"rebuild": true
			}
		},
		"ApproveFilingsModel": {
			"description": "Approve a set of filings.",
			"required": ["approve"],
			"type": "object",
			"properties": {
				"approve": {
					"description": "Set this value to true in order to approve the filings.",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"approve": true
			}
		},
		"FilingsCheckupModel": {
			"description": "Results of the Worksheet Checkup report",
			"type": "object",
			"properties": {
				"authorities": {
					"description": "A collection of authorities in the report",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingsCheckupAuthorityModel"
					}
				}
			},
			"example": {
				"authorities": [
					{
						"taxAuthorityId": 71,
						"taxAuthorityName": "NEW YORK",
						"taxAuthorityTypeId": 45,
						"jurisdictionId": 42,
						"tax": 0.0,
						"taxTypeId": "U",
						"suggestedForms": [
							{
								"taxAuthorityId": 71,
								"country": "US",
								"region": "NY",
								"taxFormCode": "NYAU11"
							}
						]
					}
				]
			}
		},
		"FilingsCheckupAuthorityModel": {
			"description": "Cycle Safe Expiration results.",
			"type": "object",
			"properties": {
				"taxAuthorityId": {
					"format": "int32",
					"description": "Unique ID of the tax authority",
					"type": "integer"
				},
				"locationCode": {
					"description": "Location Code of the tax authority",
					"type": "string"
				},
				"taxAuthorityName": {
					"description": "Name of the tax authority",
					"type": "string"
				},
				"taxAuthorityTypeId": {
					"format": "int32",
					"description": "Type Id of the tax authority",
					"type": "integer"
				},
				"jurisdictionId": {
					"format": "int32",
					"description": "Jurisdiction Id of the tax authority",
					"type": "integer"
				},
				"tax": {
					"format": "double",
					"description": "Amount of tax collected in this tax authority",
					"type": "number"
				},
				"taxTypeId": {
					"description": "Tax Type collected in the tax authority",
					"type": "string"
				},
				"suggestedForms": {
					"description": "Suggested forms to file due to tax collected",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilingsCheckupSuggestedFormModel"
					}
				}
			},
			"example": {
				"taxAuthorityId": 71,
				"taxAuthorityName": "NEW YORK",
				"taxAuthorityTypeId": 45,
				"jurisdictionId": 42,
				"tax": 0.0,
				"taxTypeId": "U",
				"suggestedForms": [
					{
						"taxAuthorityId": 71,
						"country": "US",
						"region": "NY",
						"taxFormCode": "NYAU11"
					}
				]
			}
		},
		"FirmClientLinkageOutputModel": {
			"description": "Account Linkage output model",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of firm-client linkage.",
					"type": "integer",
					"readOnly": true,
					"example": 123456
				},
				"firmAccountId": {
					"format": "int32",
					"description": "Firm Account to be linked with the firm",
					"type": "integer",
					"example": 23982571
				},
				"firmAccountName": {
					"description": "FIrm Account name",
					"type": "string",
					"example": "Firm Account"
				},
				"clientAccountId": {
					"format": "int32",
					"description": "Client Account to be linked with the firm",
					"type": "integer",
					"example": 24958289
				},
				"clientAccountName": {
					"description": "Client Account name",
					"type": "string",
					"example": "Client Account"
				},
				"createdDate": {
					"format": "date-time",
					"description": "Created date of the linkage",
					"type": "string",
					"example": "2020-07-30T22:11:32.0932798+00:00"
				},
				"createdUserId": {
					"format": "int32",
					"description": "User who created the linkage",
					"type": "integer",
					"example": 213
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "Modified date of the linkage",
					"type": "string",
					"example": "2020-07-30T22:11:32.0932814+00:00"
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "User who modified the linkage",
					"type": "integer",
					"example": 213
				},
				"status": {
					"description": "The status of the account linkage. The following are the available statuses\r\n* Requested - When a linkage is requested\r\n* Approved - When the linkage is approved\r\n* Rejected - When the linkage is rejected\r\n* Revoked - When the linkage is revoked.",
					"enum": ["Requested", "Approved", "Rejected", "Revoked"],
					"type": "string",
					"example": "Requested",
					"x-enum-metadata": {
						"name": "FirmClientLinkageStatus",
						"values": [
							{
								"name": "Requested",
								"value": 1
							},
							{
								"name": "Approved",
								"value": 2
							},
							{
								"name": "Rejected",
								"value": 3
							},
							{
								"name": "Revoked",
								"value": 4
							}
						]
					}
				},
				"isDeleted": {
					"description": "This is set to 1 if the linkage is deleted.",
					"type": "boolean",
					"example": false
				},
				"firmContactName": {
					"description": "Name of the firm's point of contact person for the client",
					"type": "string"
				},
				"firmContactEmail": {
					"description": "Email of the firm's point of contact person for the client",
					"type": "string"
				}
			},
			"example": {
				"id": 123456,
				"firmAccountId": 23982571,
				"firmAccountName": "Firm Account",
				"clientAccountId": 24958289,
				"clientAccountName": "Client Account",
				"createdDate": "2020-07-30T22:11:32.0932798+00:00",
				"createdUserId": 213,
				"modifiedDate": "2020-07-30T22:11:32.0932814+00:00",
				"modifiedUserId": 213,
				"status": "Requested",
				"isDeleted": false
			}
		},
		"FetchResult[FirmClientLinkageOutputModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/FirmClientLinkageOutputModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FirmClientLinkageInputModel": {
			"description": "Account Linkage Input model",
			"required": ["clientAccountId", "clientAccountName"],
			"type": "object",
			"properties": {
				"clientAccountId": {
					"format": "int32",
					"description": "Client AccountId that needs to be linked to the firm",
					"type": "integer",
					"example": 24958289
				},
				"clientAccountName": {
					"description": "Client AccountName that needs to be linked to the firm",
					"type": "string",
					"example": "client account"
				}
			},
			"example": {
				"clientAccountId": 24958289,
				"clientAccountName": "client account"
			}
		},
		"NewFirmClientAccountRequestModel": {
			"description": "Represents a request for a new account with Avalara for a new Firm client.",
			"required": ["accountName", "firstName", "lastName", "email", "companyAddress"],
			"type": "object",
			"properties": {
				"accountName": {
					"description": "The name of the account to create",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "BizTech Company Inc."
				},
				"firstName": {
					"description": "First name of the primary contact person for this account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob"
				},
				"lastName": {
					"description": "Last name of the primary contact person for this account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Example"
				},
				"title": {
					"description": "Title of the primary contact person for this account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"phoneNumber": {
					"description": "Phone number of the primary contact person for this account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"email": {
					"description": "Email of the primary contact person for this account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "bob@example.org"
				},
				"companyCode": {
					"description": "Company code to be assigned to the company created for this account.\r\n            \r\nIf no company code is provided, this will be defaulted to \"DEFAULT\" company code.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "DEFAULT"
				},
				"companyAddress": {
					"$ref": "#/definitions/CompanyAddress",
					"description": "Address information of the account being created.",
					"example": {
						"line": "100 Ravine Ln",
						"region": "WA",
						"country": "US",
						"postalCode": "98010"
					}
				},
				"taxPayerIdNumber": {
					"description": "United States Taxpayer ID number, usually your Employer Identification Number if you are a business or your\r\nSocial Security Number if you are an individual.\r\nThis value is required if the address provided is inside the US. Otherwise it is optional.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string"
				},
				"properties": {
					"description": "Properties of the primary contact person for this account",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"example": {
				"accountName": "BizTech Company Inc.",
				"firstName": "Bob",
				"lastName": "Example",
				"email": "bob@example.org",
				"companyCode": "DEFAULT",
				"companyAddress": {
					"line": "100 Ravine Ln",
					"region": "WA",
					"country": "US",
					"postalCode": "98010"
				}
			}
		},
		"ItemClassificationInputModel": {
			"description": "Product classification input model.",
			"required": ["productCode"],
			"type": "object",
			"properties": {
				"productCode": {
					"description": "The product code of an item in a given system.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "9011900000"
				},
				"systemCode": {
					"description": "The system code in which the product belongs.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "TARIC"
				}
			},
			"example": {
				"productCode": "9011900000",
				"systemCode": "TARIC"
			}
		},
		"ItemClassificationOutputModel": {
			"description": "Product classification output model.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this product.",
					"type": "integer",
					"example": 791
				},
				"itemId": {
					"format": "int64",
					"description": "The unique ID number of the item this product belongs to.",
					"type": "integer",
					"example": 891267
				},
				"systemId": {
					"format": "int32",
					"description": "The system id which the product belongs.",
					"type": "integer",
					"example": 1
				},
				"productCode": {
					"description": "A unique code representing this item.",
					"type": "string",
					"example": "001048015838"
				},
				"systemCode": {
					"description": "A unique code representing this item.",
					"type": "string",
					"example": "HTS"
				}
			},
			"example": {
				"id": 791,
				"itemId": 891267,
				"systemId": 1,
				"productCode": "001048015838",
				"systemCode": "HTS"
			}
		},
		"FetchResult[ItemClassificationOutputModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ItemClassificationOutputModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[ItemParameterModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ItemParameterModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[ItemModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ItemModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"SyncItemsRequestModel": {
			"description": "Represents a request to sync items.",
			"required": ["items"],
			"type": "object",
			"properties": {
				"items": {
					"description": "A list of items to sync with AvaTax.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ItemSyncModel"
					},
					"example": [
						{
							"itemCode": "CHIP1041",
							"description": "Potato Chips",
							"itemGroup": "Packaged Food",
							"taxCode": "PF051578"
						}
					]
				}
			},
			"example": {
				"items": [
					{
						"itemCode": "CHIP1041",
						"description": "Potato Chips",
						"itemGroup": "Packaged Food",
						"taxCode": "PF051578"
					}
				]
			}
		},
		"ItemSyncModel": {
			"description": "An abridged item model used for syncing product catalogs with AvaTax.",
			"required": ["itemCode", "description"],
			"type": "object",
			"properties": {
				"itemCode": {
					"description": "A unique code representing this item.",
					"type": "string",
					"example": "CHIP1041"
				},
				"description": {
					"description": "A friendly description of the item. If your company has enrolled in Streamlined Sales Tax, this description must be auditable.",
					"type": "string",
					"example": "Potato Chips"
				},
				"itemGroup": {
					"description": "A group to which the item belongs.",
					"type": "string",
					"example": "Packaged Food"
				},
				"taxCode": {
					"description": "The tax code of the item (optional)",
					"type": "string",
					"example": "PF051578"
				}
			},
			"example": {
				"itemCode": "CHIP1041",
				"description": "Potato Chips",
				"itemGroup": "Packaged Food",
				"taxCode": "PF051578"
			}
		},
		"SyncItemsResponseModel": {
			"description": "The response returned after an item sync was requested.",
			"type": "object",
			"properties": {
				"status": {
					"description": "The status of the request",
					"type": "string",
					"example": "Accepted"
				}
			},
			"example": {
				"status": "Accepted"
			}
		},
		"FetchResult[LocationParameterModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationParameterModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[LocationModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"LocationValidationModel": {
			"description": "Tells you whether this location object has been correctly set up to the local jurisdiction's standards",
			"type": "object",
			"properties": {
				"settingsValidated": {
					"description": "True if the location has a value for each jurisdiction-required setting.\r\nThe user is required to ensure that the values are correct according to the jurisdiction; this flag\r\ndoes not indicate whether the taxing jurisdiction has accepted the data you have provided.",
					"type": "boolean",
					"example": true
				},
				"requiredSettings": {
					"description": "A list of settings that must be defined for this location",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationQuestionModel"
					},
					"example": [
						{
							"id": 1,
							"question": "State Assigned Code",
							"description": "",
							"jurisdictionType": "Country"
						}
					]
				}
			},
			"example": {
				"settingsValidated": true,
				"requiredSettings": [
					{
						"id": 1,
						"question": "State Assigned Code",
						"description": "",
						"jurisdictionType": "Country"
					}
				]
			}
		},
		"UpdateCompanyLocationRemittanceModel": {
			"description": "Expire a location without restriction then update with new remittance and dates.",
			"required": ["addressCategoryId", "effectiveDate"],
			"type": "object",
			"properties": {
				"addressCategoryId": {
					"description": "Indicates whether this location is a physical place of business or a temporary salesperson location.",
					"enum": [
						"Storefront",
						"MainOffice",
						"Warehouse",
						"Salesperson",
						"Other",
						"SellerRemitsTax",
						"MarketplaceRemitsTax",
						"NonPhysical"
					],
					"type": "string",
					"example": "MarketplaceRemitsTax",
					"x-enum-metadata": {
						"name": "AddressCategoryId",
						"values": [
							{
								"name": "Storefront",
								"value": 1
							},
							{
								"name": "MainOffice",
								"value": 2
							},
							{
								"name": "Warehouse",
								"value": 3
							},
							{
								"name": "Salesperson",
								"value": 4
							},
							{
								"name": "Other",
								"value": 5
							},
							{
								"name": "SellerRemitsTax",
								"value": 6
							},
							{
								"name": "MarketplaceRemitsTax",
								"value": 7
							},
							{
								"name": "NonPhysical",
								"value": 8
							}
						]
					}
				},
				"effectiveDate": {
					"format": "date",
					"description": "The date when this location was opened for business.",
					"type": "string",
					"example": "2020-01-01T00:00:00"
				},
				"endDate": {
					"format": "date",
					"description": "If this place of business has closed, the date when this location closed business. If null it'll be set to the date of 9998-12-31.",
					"type": "string",
					"example": "2021-01-01T00:00:00"
				}
			},
			"example": {
				"addressCategoryId": "MarketplaceRemitsTax",
				"effectiveDate": "2020-01-01",
				"endDate": "2021-01-01"
			}
		},
		"CommitMultiDocumentModel": {
			"description": "Commit this MultiDocument object so that all transactions within it can be reported on a tax filing.",
			"required": ["code", "commit"],
			"type": "object",
			"properties": {
				"code": {
					"description": "Represents the unique code of this MultiDocument transaction.\r\n            \r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.        ///",
					"type": "string",
					"example": "04b02a51-de9c-46ca-9698-a97182b4bcf0"
				},
				"type": {
					"description": "Represents the document type of this MultiDocument transaction.  For more information about\r\ndocument types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/).\r\n            \r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesInvoice",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"commit": {
					"description": "Set this value to be `true` to commit this transaction.\r\n            \r\nCommitting a transaction allows it to be reported on a tax filing.  Uncommitted transactions will not be reported.",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"code": "04b02a51-de9c-46ca-9698-a97182b4bcf0",
				"type": "SalesInvoice",
				"commit": true
			}
		},
		"MultiDocumentModel": {
			"description": "A MultiDocument transaction represents a sale or purchase that occurred between more than two companies.\r\n            \r\nA traditional transaction requires exactly two parties: a seller and a buyer.  MultiDocument transactions can\r\ninvolve a marketplace of vendors, each of which contributes some portion of the final transaction.  Within\r\na MultiDocument transaction, each individual buyer and seller pair are matched up and converted to a separate\r\ndocument.  This separation of documents allows each seller to file their taxes separately.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this MultiDocument object.",
					"type": "integer",
					"readOnly": true,
					"example": 12
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the AvaTax customer account that created this MultiDocument object.",
					"type": "integer",
					"example": 123456
				},
				"code": {
					"description": "The transaction code of the MultiDocument transaction.\r\n            \r\nAll individual transactions within this MultiDocument object will have this code as a prefix.",
					"type": "string",
					"example": "51e89be3-f729-44aa-b593-b0aff1ba8135"
				},
				"type": {
					"description": "Indicates the type of MultiDocument transaction.  Common values are:\r\n            \r\n* SalesOrder - An estimate that is not permanently recorded\r\n* SalesInvoice - An invoice that can be reported on a tax return\r\n            \r\nFor more information about document types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/)",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesInvoice",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"createdUserId": {
					"format": "int32",
					"description": "The user ID of the user who created this record.",
					"type": "integer",
					"readOnly": true,
					"example": 87954
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date/time when this record was created.",
					"type": "string",
					"readOnly": true,
					"example": "2020-07-30T00:00:00+00:00"
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true,
					"example": "2020-07-30T00:00:00+00:00"
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true,
					"example": 66783
				},
				"documents": {
					"description": "A separate document will exist for each unique combination of buyer and seller in this MultiDocument transaction.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionModel"
					},
					"readOnly": true,
					"example": [
						{
							"id": 123456789,
							"code": "cbe656d6-0400-4d05-9d38-c1facfa7f1a3",
							"companyId": 12345,
							"date": "2020-07-30",
							"status": "Committed",
							"type": "SalesInvoice",
							"currencyCode": "USD",
							"entityUseCode": "",
							"customerVendorCode": "ABC",
							"customerCode": "ABC",
							"exemptNo": "",
							"reconciled": true,
							"locationCode": "DEFAULT",
							"salespersonCode": "DEF",
							"taxOverrideType": "None",
							"taxOverrideAmount": 0.0,
							"taxOverrideReason": "",
							"totalAmount": 1000.0,
							"totalExempt": 0.0,
							"totalDiscount": 0.0,
							"totalTax": 62.5,
							"totalTaxable": 1000.0,
							"totalTaxCalculated": 62.5,
							"adjustmentReason": "NotAdjusted",
							"adjustmentDescription": "",
							"locked": false,
							"region": "CA",
							"country": "US",
							"version": 0,
							"originAddressId": 123456789,
							"destinationAddressId": 123456789,
							"isSellerImporterOfRecord": false,
							"description": "Yarn",
							"taxDate": "2020-07-30T00:00:00+00:00",
							"lines": [
								{
									"id": 123456789,
									"transactionId": 123456789,
									"lineNumber": "1",
									"boundaryOverrideId": 0,
									"entityUseCode": "",
									"description": "Yarn",
									"destinationAddressId": 12345,
									"originAddressId": 123456789,
									"discountAmount": 100.0,
									"discountTypeId": 0,
									"exemptAmount": 0.0,
									"exemptCertId": 0,
									"exemptNo": "",
									"isItemTaxable": true,
									"isSSTP": false,
									"itemCode": "116292",
									"lineAmount": 1000.0,
									"quantity": 1.0,
									"ref1": "Note: Deliver to Bob",
									"reportingDate": "2020-07-30",
									"revAccount": "",
									"sourcing": "Destination",
									"tax": 62.5,
									"taxableAmount": 1000.0,
									"taxCalculated": 62.5,
									"taxCode": "PS081282",
									"taxDate": "2020-07-30",
									"taxEngine": "",
									"taxOverrideType": "None",
									"taxOverrideAmount": 0.0,
									"taxOverrideReason": "",
									"taxIncluded": false,
									"details": [
										{
											"id": 123456789,
											"transactionLineId": 123456789,
											"transactionId": 123456789,
											"addressId": 12345,
											"country": "US",
											"region": "CA",
											"stateFIPS": "06",
											"exemptAmount": 0.0,
											"exemptReasonId": 4,
											"inState": false,
											"jurisCode": "06",
											"jurisName": "CALIFORNIA",
											"jurisdictionId": 5000531,
											"signatureCode": "AGAM",
											"stateAssignedNo": "",
											"jurisType": "STA",
											"nonTaxableAmount": 0.0,
											"nonTaxableRuleId": 0,
											"nonTaxableType": "BaseRule",
											"rate": 0.0625,
											"rateRuleId": 1321915,
											"rateSourceId": 3,
											"serCode": "",
											"sourcing": "Destination",
											"tax": 62.5,
											"taxableAmount": 1000.0,
											"taxType": "Sales",
											"taxName": "CA STATE TAX",
											"taxAuthorityTypeId": 45,
											"taxRegionId": 2127184,
											"taxCalculated": 62.5,
											"taxOverride": 0.0,
											"rateType": "General"
										}
									],
									"vatNumberTypeId": 0
								}
							],
							"addresses": [
								{
									"id": 0,
									"transactionId": 0,
									"boundaryLevel": "Address",
									"line1": "100 Ravine Lane Northeast #220",
									"city": "Bainbridge Island",
									"region": "WA",
									"postalCode": "98110",
									"country": "US",
									"taxRegionId": 0
								}
							],
							"taxDetailsByTaxType": [
								{
									"taxType": "SalesAndUse",
									"totalTaxable": 100.0,
									"totalExempt": 0.05,
									"totalNonTaxable": 0.0,
									"totalTax": 0.625
								}
							]
						}
					]
				}
			},
			"example": {
				"id": 12,
				"accountId": 123456,
				"code": "51e89be3-f729-44aa-b593-b0aff1ba8135",
				"type": "SalesInvoice",
				"createdUserId": 87954,
				"createdDate": "2020-07-30T00:00:00+00:00",
				"modifiedDate": "2020-07-30T00:00:00+00:00",
				"modifiedUserId": 66783,
				"documents": [
					{
						"id": 123456789,
						"code": "cbe656d6-0400-4d05-9d38-c1facfa7f1a3",
						"companyId": 12345,
						"date": "2020-07-30",
						"status": "Committed",
						"type": "SalesInvoice",
						"currencyCode": "USD",
						"entityUseCode": "",
						"customerVendorCode": "ABC",
						"customerCode": "ABC",
						"exemptNo": "",
						"reconciled": true,
						"locationCode": "DEFAULT",
						"salespersonCode": "DEF",
						"taxOverrideType": "None",
						"taxOverrideAmount": 0.0,
						"taxOverrideReason": "",
						"totalAmount": 1000.0,
						"totalExempt": 0.0,
						"totalDiscount": 0.0,
						"totalTax": 62.5,
						"totalTaxable": 1000.0,
						"totalTaxCalculated": 62.5,
						"adjustmentReason": "NotAdjusted",
						"adjustmentDescription": "",
						"locked": false,
						"region": "CA",
						"country": "US",
						"version": 0,
						"originAddressId": 123456789,
						"destinationAddressId": 123456789,
						"isSellerImporterOfRecord": false,
						"description": "Yarn",
						"taxDate": "2020-07-30T00:00:00+00:00",
						"lines": [
							{
								"id": 123456789,
								"transactionId": 123456789,
								"lineNumber": "1",
								"boundaryOverrideId": 0,
								"entityUseCode": "",
								"description": "Yarn",
								"destinationAddressId": 12345,
								"originAddressId": 123456789,
								"discountAmount": 100.0,
								"discountTypeId": 0,
								"exemptAmount": 0.0,
								"exemptCertId": 0,
								"exemptNo": "",
								"isItemTaxable": true,
								"isSSTP": false,
								"itemCode": "116292",
								"lineAmount": 1000.0,
								"quantity": 1.0,
								"ref1": "Note: Deliver to Bob",
								"reportingDate": "2020-07-30",
								"revAccount": "",
								"sourcing": "Destination",
								"tax": 62.5,
								"taxableAmount": 1000.0,
								"taxCalculated": 62.5,
								"taxCode": "PS081282",
								"taxDate": "2020-07-30",
								"taxEngine": "",
								"taxOverrideType": "None",
								"taxOverrideAmount": 0.0,
								"taxOverrideReason": "",
								"taxIncluded": false,
								"details": [
									{
										"id": 123456789,
										"transactionLineId": 123456789,
										"transactionId": 123456789,
										"addressId": 12345,
										"country": "US",
										"region": "CA",
										"stateFIPS": "06",
										"exemptAmount": 0.0,
										"exemptReasonId": 4,
										"inState": false,
										"jurisCode": "06",
										"jurisName": "CALIFORNIA",
										"jurisdictionId": 5000531,
										"signatureCode": "AGAM",
										"stateAssignedNo": "",
										"jurisType": "STA",
										"nonTaxableAmount": 0.0,
										"nonTaxableRuleId": 0,
										"nonTaxableType": "BaseRule",
										"rate": 0.0625,
										"rateRuleId": 1321915,
										"rateSourceId": 3,
										"serCode": "",
										"sourcing": "Destination",
										"tax": 62.5,
										"taxableAmount": 1000.0,
										"taxType": "Sales",
										"taxName": "CA STATE TAX",
										"taxAuthorityTypeId": 45,
										"taxRegionId": 2127184,
										"taxCalculated": 62.5,
										"taxOverride": 0.0,
										"rateType": "General"
									}
								],
								"vatNumberTypeId": 0
							}
						],
						"addresses": [
							{
								"id": 0,
								"transactionId": 0,
								"boundaryLevel": "Address",
								"line1": "100 Ravine Lane Northeast #220",
								"city": "Bainbridge Island",
								"region": "WA",
								"postalCode": "98110",
								"country": "US",
								"taxRegionId": 0
							}
						],
						"taxDetailsByTaxType": [
							{
								"taxType": "SalesAndUse",
								"totalTaxable": 100.0,
								"totalExempt": 0.05,
								"totalNonTaxable": 0.0,
								"totalTax": 0.625
							}
						]
					}
				]
			}
		},
		"RefundTransactionModel": {
			"description": "Refund a committed transaction",
			"required": ["refundDate"],
			"type": "object",
			"properties": {
				"refundTransactionCode": {
					"description": "The transaction code for the refund.  This code will be saved to the `ReturnInvoice` transaction, and does not need to match the code of the original sale.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "47c04147-da94-4695-a8ed-e0a6587a0d57"
				},
				"refundDate": {
					"format": "date",
					"description": "The date of the refund.  For customers using Avalara's Managed Returns Service, this date controls the month in which the refund\r\ntransaction will be reported on a tax filing.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"refundType": {
					"description": "Type of this refund.\r\n            \r\nTo submit a full refund, specify `Full`.\r\n            \r\nTo refund only specific lines from the transaction, specify `Partial` and indicate the lines you wish to apply in the `refundLines` field.\r\n            \r\nTo refund the tax that was paid in the previous transaction, specify `TaxOnly`.\r\n            \r\nTo issue a percentage-based discount, specify `Percentage`.",
					"enum": ["Full", "Partial", "TaxOnly", "Percentage"],
					"type": "string",
					"example": "Full",
					"x-enum-metadata": {
						"name": "RefundType",
						"values": [
							{
								"name": "Full",
								"value": 0
							},
							{
								"name": "Partial",
								"value": 1
							},
							{
								"name": "TaxOnly",
								"value": 2
							},
							{
								"name": "Percentage",
								"value": 3
							}
						]
					}
				},
				"refundPercentage": {
					"format": "double",
					"description": "The percentage for refund.\r\n            \r\nThis value only applies if you choose `refundType = Percentage` or `refundType = Partial`.",
					"type": "number"
				},
				"refundLines": {
					"description": "If you chose a refund of type `Partial`, this indicates which lines from the original transaction are being refunded.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"referenceCode": {
					"description": "A user-defined reference field containing information about this refund.",
					"type": "string",
					"example": "Refund for a committed transaction"
				}
			},
			"example": {
				"refundTransactionCode": "47c04147-da94-4695-a8ed-e0a6587a0d57",
				"refundDate": "2020-07-30",
				"refundType": "Full",
				"referenceCode": "Refund for a committed transaction"
			}
		},
		"CreateMultiDocumentModel": {
			"description": "A MultiDocument transaction represents a sale or purchase that occurred between more than two companies.\r\n            \r\nA traditional transaction requires exactly two parties: a seller and a buyer.  MultiDocument transactions can\r\ninvolve a marketplace of vendors, each of which contributes some portion of the final transaction.  Within\r\na MultiDocument transaction, each individual buyer and seller pair are matched up and converted to a separate\r\ndocument.  This separation of documents allows each seller to file their taxes separately.",
			"required": ["lines", "date", "customerCode"],
			"type": "object",
			"properties": {
				"code": {
					"description": "The transaction code of the MultiDocument transaction.\r\n            \r\nAll individual transactions within this MultiDocument object will have this code as a prefix.\r\n            \r\nIf you leave the `code` field blank, a GUID will be assigned.",
					"maxLength": 45,
					"minLength": 0,
					"type": "string"
				},
				"lines": {
					"description": "Lines that will appear on the invoice.\r\n            \r\nFor a MultiDocument transaction, each line may represent a different company or reporting location code.  AvaTax\r\nwill separate this MultiDocument transaction object into many different transactions, one for each pair of legal\r\nentities, so that each legal entity can file their transactional taxes correctly.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/MultiDocumentLineItemModel"
					},
					"example": [
						{
							"companyCode": "DEFAULT",
							"reportingLocationCode": "ReportLocation111",
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					]
				},
				"allowAdjust": {
					"description": "Set this value to true to allow this API call to adjust the MultiDocument model if one already exists.\r\n            \r\nIf you omit this field, or if the value is `null`, you will receive an error if you try to create two MultiDocument\r\nobjects with the same `code`.",
					"type": "boolean"
				},
				"type": {
					"description": "Specifies the type of document to create.  A document type ending with `Invoice` is a permanent transaction\r\nthat will be recorded in AvaTax.  A document type ending with `Order` is a temporary estimate that will not\r\nbe preserved.\r\n            \r\nIf you omit this value, the API will assume you want to create a `SalesOrder`.",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesInvoice",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"companyCode": {
					"description": "Company Code - Specify the code of the company creating this transaction here.  If you leave this value null,\r\nyour account's default company will be used instead.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "DEFAULT"
				},
				"date": {
					"format": "date",
					"description": "Transaction Date - The date on the invoice, purchase order, etc.\r\n            \r\nBy default, this date will be used to calculate the tax rates for the transaction.  If you wish to use a\r\ndifferent date to calculate tax rates, please specify a `taxOverride` of type `taxDate`.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"salespersonCode": {
					"description": "Salesperson Code - The client application salesperson reference code.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"customerCode": {
					"description": "Customer Code - The client application customer reference code.\r\nNote: This field is case sensitive. To have exemption certificates apply, this value should\r\nbe the same as the one passed to create a customer.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "ABC"
				},
				"customerUsageType": {
					"description": "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please use entityUseCode instead.\r\nCustomer Usage Type - The client application customer or usage type.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"x-property-deprecation-info": {
						"date": "10/16/2017",
						"version": "17.11",
						"message": "Please use entityUseCode instead."
					}
				},
				"entityUseCode": {
					"description": "Entity Use Code - The client application customer or usage type.  For a list of\r\navailable usage types, use [ListEntityUseCodes](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListEntityUseCodes/) API.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"discount": {
					"format": "double",
					"description": "Discount - The discount amount to apply to the document.  This value will be applied only to lines\r\nthat have the `discounted` flag set to true.  If no lines have `discounted` set to true, this discount\r\ncannot be applied.",
					"type": "number"
				},
				"purchaseOrderNo": {
					"description": "Purchase Order Number for this document.\r\n            \r\nThis is required for single use exemption certificates to match the order and invoice with the certificate.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "2020-07-30-001"
				},
				"exemptionNo": {
					"description": "Exemption Number for this document.\r\n            \r\nIf you specify an exemption number for this document, this document will be considered exempt, and you\r\nmay be asked to provide proof of this exemption certificate in the event that you are asked by an auditor\r\nto verify your exemptions.\r\nNote: This is same as 'exemptNo' in TransactionModel.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"addresses": {
					"$ref": "#/definitions/AddressesModel",
					"description": "Default addresses for all lines in this document.\r\n            \r\nThese addresses are the default values that will be used for any lines that do not have their own\r\naddress information.  If you specify addresses for a line, then no default addresses will be loaded\r\nfor that line.",
					"example": {
						"singleLocation": {
							"line1": "2000 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92614"
						}
					}
				},
				"parameters": {
					"description": "Special parameters for this transaction.\r\n            \r\nTo get a full list of available parameters, please use the [ListParameters](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListParameters/) endpoint.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionParameterModel"
					}
				},
				"referenceCode": {
					"description": "Customer-provided Reference Code with information about this transaction.\r\n            \r\nThis field could be used to reference the original document for a return invoice, or for any other\r\nreference purpose.",
					"maxLength": 1024,
					"minLength": 0,
					"type": "string"
				},
				"reportingLocationCode": {
					"description": "Sets the sale location code (Outlet ID) for reporting this document to the tax authority.\r\n            \r\nThis value is used by Avalara Managed Returns to group documents together by reporting locations\r\nfor tax authorities that require location-based reporting.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"commit": {
					"description": "Causes the document to be committed if true.  This option is only applicable for invoice document\r\ntypes, not orders.",
					"type": "boolean",
					"example": true
				},
				"batchCode": {
					"description": "BatchCode for batch operations.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"taxOverride": {
					"$ref": "#/definitions/TaxOverrideModel",
					"description": "Specifies a tax override for the entire document"
				},
				"currencyCode": {
					"description": "The three-character ISO 4217 currency code for this transaction.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "USD"
				},
				"serviceMode": {
					"description": "Specifies whether the tax calculation is handled Local, Remote, or Automatic (default).  This only\r\napplies when using an AvaLocal server.",
					"enum": ["Automatic", "Local", "Remote"],
					"type": "string",
					"x-enum-metadata": {
						"name": "ServiceMode",
						"values": [
							{
								"name": "Automatic",
								"value": 0
							},
							{
								"name": "Local",
								"value": 1
							},
							{
								"name": "Remote",
								"value": 2
							}
						]
					}
				},
				"exchangeRate": {
					"format": "double",
					"description": "Currency exchange rate from this transaction to the company base currency.\r\n            \r\nThis only needs to be set if the transaction currency is different than the company base currency.\r\nIt defaults to 1.0.",
					"type": "number"
				},
				"exchangeRateEffectiveDate": {
					"format": "date",
					"description": "Effective date of the exchange rate.",
					"type": "string"
				},
				"posLaneCode": {
					"description": "Sets the Point of Sale Lane Code sent by the User for this document.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"businessIdentificationNo": {
					"description": "VAT business identification number for the customer for this transaction.  This number will be used for all lines\r\nin the transaction, except for those lines where you have defined a different business identification number.\r\n            \r\nIf you specify a VAT business identification number for the customer in this transaction and you have also set up\r\na business identification number for your company during company setup, this transaction will be treated as a\r\nbusiness-to-business transaction for VAT purposes and it will be calculated according to VAT tax rules.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"isSellerImporterOfRecord": {
					"description": "Specifies if the transaction should have value-added and cross-border taxes calculated with the seller as the importer of record.\r\n            \r\nSome taxes only apply if the seller is the importer of record for a product.  In cases where companies are working together to\r\nship products, there may be mutual agreement as to which company is the entity designated as importer of record.  The importer\r\nof record will then be the company designated to pay taxes marked as being obligated to the importer of record.\r\n            \r\nSet this value to `true` to consider your company as the importer of record and collect these taxes.\r\n            \r\nThis value may also be set at the Nexus level.  See `NexusModel` for more information.",
					"type": "boolean"
				},
				"description": {
					"description": "User-supplied description for this transaction.",
					"maxLength": 2048,
					"minLength": 0,
					"type": "string",
					"example": "Yarn"
				},
				"email": {
					"description": "User-supplied email address relevant for this transaction.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"debugLevel": {
					"description": "If the user wishes to request additional debug information from this transaction, specify a level higher than `normal`.",
					"enum": ["Normal", "Diagnostic"],
					"type": "string",
					"x-enum-metadata": {
						"name": "TaxDebugLevel",
						"values": [
							{
								"name": "Normal",
								"value": 0
							},
							{
								"name": "Diagnostic",
								"value": 1
							}
						]
					}
				}
			},
			"example": {
				"lines": [
					{
						"companyCode": "DEFAULT",
						"reportingLocationCode": "ReportLocation111",
						"number": "1",
						"quantity": 1.0,
						"amount": 100.0,
						"taxCode": "PS081282",
						"itemCode": "Y0001",
						"description": "Yarn"
					}
				],
				"type": "SalesInvoice",
				"companyCode": "DEFAULT",
				"date": "2020-07-30",
				"customerCode": "ABC",
				"purchaseOrderNo": "2020-07-30-001",
				"addresses": {
					"singleLocation": {
						"line1": "2000 Main Street",
						"city": "Irvine",
						"region": "CA",
						"country": "US",
						"postalCode": "92614"
					}
				},
				"commit": true,
				"currencyCode": "USD",
				"description": "Yarn"
			}
		},
		"MultiDocumentLineItemModel": {
			"description": "Represents one line item in a MultiDocument transaction",
			"required": ["amount"],
			"type": "object",
			"properties": {
				"companyCode": {
					"description": "Specify the code of the company for this line of transaction.\r\n            \r\nIf you leave this value null, the `companyCode` at the root level will be used instead.",
					"type": "string",
					"example": "DEFAULT"
				},
				"reportingLocationCode": {
					"description": "Sets the sale location code (Outlet ID) for reporting this document to the tax authority.\r\n            \r\nIf you leave this value `null`, the `reportingLocationCode` at the root level will be used instead.",
					"type": "string",
					"example": "ReportLocation111"
				},
				"number": {
					"description": "The line number of this line within the document.  This can be any text that is useful to you, such as numeric line numbers, alphabetic line numbers, or other text.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "1"
				},
				"quantity": {
					"format": "double",
					"description": "Quantity of items in this line.  This quantity value should always be a positive value representing the quantity of product that changed hands, even when handling returns or refunds.\r\n            \r\nIf not provided, or if set to zero, the quantity value is assumed to be one (1).",
					"type": "number",
					"example": 1.0
				},
				"amount": {
					"format": "double",
					"description": "Total amount for this line.  The amount represents the net currency value that changed hands from the customer (represented by the `customerCode` field) to the company (represented by the `companyCode`) field.\r\n            \r\nFor sale transactions, this value must be positive.  It indicates the amount of money paid by the customer to the company.\r\n            \r\nFor refund or return transactions, this value must be negative.",
					"type": "number",
					"example": 100.0
				},
				"addresses": {
					"$ref": "#/definitions/AddressesModel",
					"description": "The addresses to use for this transaction line.\r\n            \r\nIf you set this value to `null`, or if you omit this element from your API call, then instead the transaction\r\nwill use the `addresses` from the document level.\r\n            \r\nIf you specify any other value besides `null`, only addresses specified for this line will be used for this line."
				},
				"taxCode": {
					"description": "Tax Code - System or Custom Tax Code.\r\n            \r\nYou can use your own tax code mapping or standard Avalara tax codes.  For a full list of tax codes, see `ListTaxCodes`.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "PS081282"
				},
				"customerUsageType": {
					"description": "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please use `entityUseCode` instead.\r\n",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"x-property-deprecation-info": {
						"date": "10/16/2017",
						"version": "17.11",
						"message": "Please use `entityUseCode` instead."
					}
				},
				"entityUseCode": {
					"description": "Entity Use Code - The client application customer or usage type.  This field allows you to designate a type of usage that\r\nmay make this transaction considered exempt by reason of exempt usage.\r\n            \r\nFor a list of entity use codes, see the Definitions API `ListEntityUseCodes`.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"itemCode": {
					"description": "Item Code (SKU).  If you provide an `itemCode` field, the AvaTax API will look up the item you created with the `CreateItems` API call\r\nand use all the information available about that item for this transaction.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Y0001"
				},
				"exemptionCode": {
					"description": "The customer Tax Id Number (tax_number) associated with a certificate - Sales tax calculation requests first determine if there is an applicable\r\nECMS entry available, and will utilize it for exemption processing. If no applicable ECMS entry is available, the AvaTax service\r\nwill determine if an Exemption Number field is populated or an Entity/Use Code is included in the sales tax calculation request,\r\nand will perform exemption processing using either of those two options.\r\nNote: This is same as 'exemptNo' in TransactionModel.",
					"type": "string"
				},
				"discounted": {
					"description": "True if the document discount should be applied to this line.  If this value is false, or not provided, discounts will not be\r\napplied to this line even if they are specified on the root `discount` element.",
					"type": "boolean"
				},
				"taxIncluded": {
					"description": "Indicates whether the `amount` for this line already includes tax.\r\n            \r\nIf this value is `true`, the final price of this line including tax will equal the value in `amount`.\r\n            \r\nIf this value is `null` or `false`, the final price will equal `amount` plus whatever taxes apply to this line.",
					"type": "boolean"
				},
				"revenueAccount": {
					"description": "Revenue Account (Customer Defined Field).\r\n            \r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"ref1": {
					"description": "Ref1 (Customer Defined Field)\r\n            \r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
					"maxLength": 250,
					"minLength": 0,
					"type": "string"
				},
				"ref2": {
					"description": "Ref2 (Customer Defined Field)\r\n            \r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
					"maxLength": 250,
					"minLength": 0,
					"type": "string"
				},
				"description": {
					"description": "Item description.\r\n            \r\nFor Streamlined Sales Tax (SST) customers, this field is required if an unmapped `itemCode` is used.",
					"maxLength": 2096,
					"minLength": 0,
					"type": "string",
					"example": "Yarn"
				},
				"businessIdentificationNo": {
					"description": "VAT business identification number for the customer for this line item.  If you leave this field empty,\r\nthis line item will use whatever business identification number you provided at the transaction level.\r\n            \r\nIf you specify a VAT business identification number for the customer in this transaction and you have also set up\r\na business identification number for your company during company setup, this transaction will be treated as a\r\nbusiness-to-business transaction for VAT purposes and it will be calculated according to VAT tax rules.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"taxOverride": {
					"$ref": "#/definitions/TaxOverrideModel",
					"description": "Specifies a tax override for this line."
				},
				"parameters": {
					"description": "Special parameters that apply to this line within this transaction.\r\n            \r\nTo get a full list of available parameters, please use the `ListParameters` API.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionLineParameterModel"
					}
				},
				"hsCode": {
					"description": "The Item code for Custom Duty / Global Import tax determination\r\nHarmonized Tariff System code for this transaction.\r\n            \r\nFor a list of harmonized tariff codes, see the Definitions API for harmonized tariff codes.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				}
			},
			"example": {
				"companyCode": "DEFAULT",
				"reportingLocationCode": "ReportLocation111",
				"number": "1",
				"quantity": 1.0,
				"amount": 100.0,
				"taxCode": "PS081282",
				"itemCode": "Y0001",
				"description": "Yarn"
			}
		},
		"FetchResult[MultiDocumentModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/MultiDocumentModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"AdjustMultiDocumentModel": {
			"description": "Replace an existing MultiDocument transaction recorded in AvaTax with a new one.",
			"required": ["adjustmentReason", "newTransaction"],
			"type": "object",
			"properties": {
				"adjustmentReason": {
					"description": "A reason code indicating why this adjustment was made",
					"enum": [
						"NotAdjusted",
						"SourcingIssue",
						"ReconciledWithGeneralLedger",
						"ExemptCertApplied",
						"PriceAdjusted",
						"ProductReturned",
						"ProductExchanged",
						"BadDebt",
						"Other",
						"Offline"
					],
					"type": "string",
					"example": "PriceAdjusted",
					"x-enum-metadata": {
						"name": "AdjustmentReason",
						"values": [
							{
								"name": "NotAdjusted",
								"value": 0
							},
							{
								"name": "SourcingIssue",
								"value": 1
							},
							{
								"name": "ReconciledWithGeneralLedger",
								"value": 2
							},
							{
								"name": "ExemptCertApplied",
								"value": 3
							},
							{
								"name": "PriceAdjusted",
								"value": 4
							},
							{
								"name": "ProductReturned",
								"value": 5
							},
							{
								"name": "ProductExchanged",
								"value": 6
							},
							{
								"name": "BadDebt",
								"value": 7
							},
							{
								"name": "Other",
								"value": 8
							},
							{
								"name": "Offline",
								"value": 9
							}
						]
					}
				},
				"adjustDescription": {
					"description": "If the AdjustmentReason is \"Other\", specify the reason here.\r\n            \r\nThis is required when the AdjustmentReason is 8 (Other).",
					"type": "string",
					"example": "Price was dropped."
				},
				"newTransaction": {
					"$ref": "#/definitions/CreateMultiDocumentModel",
					"description": "Replace the current MultiDocument transaction with tax data calculated for this new MultiDocument transaction",
					"example": {
						"lines": [
							{
								"companyCode": "DEFAULT",
								"reportingLocationCode": "ReportLocation111",
								"number": "1",
								"quantity": 1.0,
								"amount": 100.0,
								"taxCode": "PS081282",
								"itemCode": "Y0001",
								"description": "Yarn"
							}
						],
						"type": "SalesInvoice",
						"companyCode": "DEFAULT",
						"date": "2020-07-30",
						"customerCode": "ABC",
						"purchaseOrderNo": "2020-07-30-001",
						"addresses": {
							"singleLocation": {
								"line1": "2000 Main Street",
								"city": "Irvine",
								"region": "CA",
								"country": "US",
								"postalCode": "92614"
							}
						},
						"commit": true,
						"currencyCode": "USD",
						"description": "Yarn"
					}
				}
			},
			"example": {
				"adjustmentReason": "PriceAdjusted",
				"adjustDescription": "Price was dropped.",
				"newTransaction": {
					"lines": [
						{
							"companyCode": "DEFAULT",
							"reportingLocationCode": "ReportLocation111",
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					],
					"type": "SalesInvoice",
					"companyCode": "DEFAULT",
					"date": "2020-07-30",
					"customerCode": "ABC",
					"purchaseOrderNo": "2020-07-30-001",
					"addresses": {
						"singleLocation": {
							"line1": "2000 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92614"
						}
					},
					"commit": true,
					"currencyCode": "USD",
					"description": "Yarn"
				}
			}
		},
		"VoidTransactionModel": {
			"description": "A request to void a previously created transaction",
			"required": ["code"],
			"type": "object",
			"properties": {
				"code": {
					"description": "Please specify the reason for voiding or cancelling this transaction.\r\nTo void the transaction, please specify the reason 'DocVoided'.\r\nIf you do not provide a reason, the void command will fail.",
					"enum": ["Unspecified", "PostFailed", "DocDeleted", "DocVoided", "AdjustmentCancelled"],
					"type": "string",
					"example": "DocVoided",
					"x-enum-metadata": {
						"name": "VoidReasonCode",
						"values": [
							{
								"name": "Unspecified",
								"value": 0
							},
							{
								"name": "PostFailed",
								"value": 1
							},
							{
								"name": "DocDeleted",
								"value": 2
							},
							{
								"name": "DocVoided",
								"value": 3
							},
							{
								"name": "AdjustmentCancelled",
								"value": 4
							}
						]
					}
				}
			},
			"example": {
				"code": "DocVoided"
			}
		},
		"AuditMultiDocumentModel": {
			"description": "Information about a previously created MultiDocument transaction",
			"type": "object",
			"properties": {
				"reconstructed": {
					"$ref": "#/definitions/ReconstructedMultiDocumentModel",
					"description": "Reconstructed API request/response pair that can be used to adjust or re-create this MultiDocument transaction.",
					"example": {
						"request": {
							"lines": [
								{
									"companyCode": "DEFAULT",
									"reportingLocationCode": "ReportLocation111",
									"number": "1",
									"quantity": 1.0,
									"amount": 100.0,
									"taxCode": "PS081282",
									"itemCode": "Y0001",
									"description": "Yarn"
								}
							],
							"type": "SalesInvoice",
							"companyCode": "DEFAULT",
							"date": "2020-07-30",
							"customerCode": "ABC",
							"purchaseOrderNo": "2020-07-30-001",
							"addresses": {
								"singleLocation": {
									"line1": "2000 Main Street",
									"city": "Irvine",
									"region": "CA",
									"country": "US",
									"postalCode": "92614"
								}
							},
							"commit": true,
							"currencyCode": "USD",
							"description": "Yarn"
						}
					}
				},
				"code": {
					"description": "Represents the unique code of this MultiDocument transaction.\r\n            \r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.",
					"type": "string"
				},
				"type": {
					"description": "Represents the document type of this MultiDocument transaction.  For more information about\r\ndocument types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/).\r\n            \r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesOrder",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"serverTimestamp": {
					"format": "date-time",
					"description": "Server timestamp, in UTC, of the date/time when the original transaction was created",
					"type": "string",
					"example": "2020-07-30T22:11:32.3445903Z"
				},
				"serverDuration": {
					"format": "date-time",
					"description": "Length of time the original API call took",
					"type": "string"
				},
				"apiCallStatus": {
					"description": "api call status",
					"enum": ["OriginalApiCallAvailable", "ReconstructedApiCallAvailable", "Any"],
					"type": "string",
					"example": "ReconstructedApiCallAvailable",
					"x-enum-metadata": {
						"name": "ApiCallStatus",
						"values": [
							{
								"name": "OriginalApiCallAvailable",
								"value": 0
							},
							{
								"name": "ReconstructedApiCallAvailable",
								"value": 1
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"original": {
					"$ref": "#/definitions/OriginalApiRequestResponseModel",
					"description": "Original API request/response"
				}
			},
			"example": {
				"reconstructed": {
					"request": {
						"lines": [
							{
								"companyCode": "DEFAULT",
								"reportingLocationCode": "ReportLocation111",
								"number": "1",
								"quantity": 1.0,
								"amount": 100.0,
								"taxCode": "PS081282",
								"itemCode": "Y0001",
								"description": "Yarn"
							}
						],
						"type": "SalesInvoice",
						"companyCode": "DEFAULT",
						"date": "2020-07-30",
						"customerCode": "ABC",
						"purchaseOrderNo": "2020-07-30-001",
						"addresses": {
							"singleLocation": {
								"line1": "2000 Main Street",
								"city": "Irvine",
								"region": "CA",
								"country": "US",
								"postalCode": "92614"
							}
						},
						"commit": true,
						"currencyCode": "USD",
						"description": "Yarn"
					}
				},
				"type": "SalesOrder",
				"serverTimestamp": "2020-07-30T22:11:32.3445903Z",
				"apiCallStatus": "ReconstructedApiCallAvailable"
			}
		},
		"ReconstructedMultiDocumentModel": {
			"description": "Contains information about the original API request and response that created\r\na MultiDocument object.",
			"type": "object",
			"properties": {
				"request": {
					"$ref": "#/definitions/CreateMultiDocumentModel",
					"description": "The original request that was used to create a MultiDocument object.",
					"example": {
						"lines": [
							{
								"companyCode": "DEFAULT",
								"reportingLocationCode": "ReportLocation111",
								"number": "1",
								"quantity": 1.0,
								"amount": 100.0,
								"taxCode": "PS081282",
								"itemCode": "Y0001",
								"description": "Yarn"
							}
						],
						"type": "SalesInvoice",
						"companyCode": "DEFAULT",
						"date": "2020-07-30",
						"customerCode": "ABC",
						"purchaseOrderNo": "2020-07-30-001",
						"addresses": {
							"singleLocation": {
								"line1": "2000 Main Street",
								"city": "Irvine",
								"region": "CA",
								"country": "US",
								"postalCode": "92614"
							}
						},
						"commit": true,
						"currencyCode": "USD",
						"description": "Yarn"
					}
				}
			},
			"example": {
				"request": {
					"lines": [
						{
							"companyCode": "DEFAULT",
							"reportingLocationCode": "ReportLocation111",
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					],
					"type": "SalesInvoice",
					"companyCode": "DEFAULT",
					"date": "2020-07-30",
					"customerCode": "ABC",
					"purchaseOrderNo": "2020-07-30-001",
					"addresses": {
						"singleLocation": {
							"line1": "2000 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92614"
						}
					},
					"commit": true,
					"currencyCode": "USD",
					"description": "Yarn"
				}
			}
		},
		"OriginalApiRequestResponseModel": {
			"description": "Represents the exact API request and response from the original transaction API call, if available",
			"type": "object",
			"properties": {
				"request": {
					"$ref": "#/definitions/CreateTransactionModel",
					"description": "API request",
					"example": {
						"lines": [
							{
								"number": "1",
								"quantity": 1.0,
								"amount": 100.0,
								"taxCode": "PS081282",
								"itemCode": "Y0001",
								"description": "Yarn"
							}
						],
						"type": "SalesInvoice",
						"companyCode": "DEFAULT",
						"date": "2020-07-30",
						"customerCode": "ABC",
						"purchaseOrderNo": "2020-07-30-001",
						"addresses": {
							"singleLocation": {
								"line1": "2000 Main Street",
								"city": "Irvine",
								"region": "CA",
								"country": "US",
								"postalCode": "92614"
							}
						},
						"commit": true,
						"currencyCode": "USD",
						"description": "Yarn"
					}
				},
				"response": {
					"$ref": "#/definitions/TransactionModel",
					"description": "API response",
					"example": {
						"id": 123456789,
						"code": "3ff4cb96-9c13-4632-be0a-b95a0b9b1a4d",
						"companyId": 12345,
						"date": "2020-07-30",
						"status": "Committed",
						"type": "SalesInvoice",
						"currencyCode": "USD",
						"entityUseCode": "",
						"customerVendorCode": "ABC",
						"customerCode": "ABC",
						"exemptNo": "",
						"reconciled": true,
						"locationCode": "DEFAULT",
						"salespersonCode": "DEF",
						"taxOverrideType": "None",
						"taxOverrideAmount": 0.0,
						"taxOverrideReason": "",
						"totalAmount": 1000.0,
						"totalExempt": 0.0,
						"totalDiscount": 0.0,
						"totalTax": 62.5,
						"totalTaxable": 1000.0,
						"totalTaxCalculated": 62.5,
						"adjustmentReason": "NotAdjusted",
						"adjustmentDescription": "",
						"locked": false,
						"region": "CA",
						"country": "US",
						"version": 0,
						"originAddressId": 123456789,
						"destinationAddressId": 123456789,
						"isSellerImporterOfRecord": false,
						"description": "Yarn",
						"taxDate": "2020-07-30T00:00:00+00:00",
						"lines": [
							{
								"id": 123456789,
								"transactionId": 123456789,
								"lineNumber": "1",
								"boundaryOverrideId": 0,
								"entityUseCode": "",
								"description": "Yarn",
								"destinationAddressId": 12345,
								"originAddressId": 123456789,
								"discountAmount": 100.0,
								"discountTypeId": 0,
								"exemptAmount": 0.0,
								"exemptCertId": 0,
								"exemptNo": "",
								"isItemTaxable": true,
								"isSSTP": false,
								"itemCode": "116292",
								"lineAmount": 1000.0,
								"quantity": 1.0,
								"ref1": "Note: Deliver to Bob",
								"reportingDate": "2020-07-30",
								"revAccount": "",
								"sourcing": "Destination",
								"tax": 62.5,
								"taxableAmount": 1000.0,
								"taxCalculated": 62.5,
								"taxCode": "PS081282",
								"taxDate": "2020-07-30",
								"taxEngine": "",
								"taxOverrideType": "None",
								"taxOverrideAmount": 0.0,
								"taxOverrideReason": "",
								"taxIncluded": false,
								"details": [
									{
										"id": 123456789,
										"transactionLineId": 123456789,
										"transactionId": 123456789,
										"addressId": 12345,
										"country": "US",
										"region": "CA",
										"stateFIPS": "06",
										"exemptAmount": 0.0,
										"exemptReasonId": 4,
										"inState": false,
										"jurisCode": "06",
										"jurisName": "CALIFORNIA",
										"jurisdictionId": 5000531,
										"signatureCode": "AGAM",
										"stateAssignedNo": "",
										"jurisType": "STA",
										"nonTaxableAmount": 0.0,
										"nonTaxableRuleId": 0,
										"nonTaxableType": "BaseRule",
										"rate": 0.0625,
										"rateRuleId": 1321915,
										"rateSourceId": 3,
										"serCode": "",
										"sourcing": "Destination",
										"tax": 62.5,
										"taxableAmount": 1000.0,
										"taxType": "Sales",
										"taxName": "CA STATE TAX",
										"taxAuthorityTypeId": 45,
										"taxRegionId": 2127184,
										"taxCalculated": 62.5,
										"taxOverride": 0.0,
										"rateType": "General"
									}
								],
								"vatNumberTypeId": 0
							}
						],
						"addresses": [
							{
								"id": 0,
								"transactionId": 0,
								"boundaryLevel": "Address",
								"line1": "100 Ravine Lane Northeast #220",
								"city": "Bainbridge Island",
								"region": "WA",
								"postalCode": "98110",
								"country": "US",
								"taxRegionId": 0
							}
						],
						"taxDetailsByTaxType": [
							{
								"taxType": "SalesAndUse",
								"totalTaxable": 100.0,
								"totalExempt": 0.05,
								"totalNonTaxable": 0.0,
								"totalTax": 0.625
							}
						]
					}
				}
			},
			"example": {
				"request": {
					"lines": [
						{
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					],
					"type": "SalesInvoice",
					"companyCode": "DEFAULT",
					"date": "2020-07-30",
					"customerCode": "ABC",
					"purchaseOrderNo": "2020-07-30-001",
					"addresses": {
						"singleLocation": {
							"line1": "2000 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92614"
						}
					},
					"commit": true,
					"currencyCode": "USD",
					"description": "Yarn"
				},
				"response": {
					"id": 123456789,
					"code": "3ff4cb96-9c13-4632-be0a-b95a0b9b1a4d",
					"companyId": 12345,
					"date": "2020-07-30",
					"status": "Committed",
					"type": "SalesInvoice",
					"currencyCode": "USD",
					"entityUseCode": "",
					"customerVendorCode": "ABC",
					"customerCode": "ABC",
					"exemptNo": "",
					"reconciled": true,
					"locationCode": "DEFAULT",
					"salespersonCode": "DEF",
					"taxOverrideType": "None",
					"taxOverrideAmount": 0.0,
					"taxOverrideReason": "",
					"totalAmount": 1000.0,
					"totalExempt": 0.0,
					"totalDiscount": 0.0,
					"totalTax": 62.5,
					"totalTaxable": 1000.0,
					"totalTaxCalculated": 62.5,
					"adjustmentReason": "NotAdjusted",
					"adjustmentDescription": "",
					"locked": false,
					"region": "CA",
					"country": "US",
					"version": 0,
					"originAddressId": 123456789,
					"destinationAddressId": 123456789,
					"isSellerImporterOfRecord": false,
					"description": "Yarn",
					"taxDate": "2020-07-30T00:00:00+00:00",
					"lines": [
						{
							"id": 123456789,
							"transactionId": 123456789,
							"lineNumber": "1",
							"boundaryOverrideId": 0,
							"entityUseCode": "",
							"description": "Yarn",
							"destinationAddressId": 12345,
							"originAddressId": 123456789,
							"discountAmount": 100.0,
							"discountTypeId": 0,
							"exemptAmount": 0.0,
							"exemptCertId": 0,
							"exemptNo": "",
							"isItemTaxable": true,
							"isSSTP": false,
							"itemCode": "116292",
							"lineAmount": 1000.0,
							"quantity": 1.0,
							"ref1": "Note: Deliver to Bob",
							"reportingDate": "2020-07-30",
							"revAccount": "",
							"sourcing": "Destination",
							"tax": 62.5,
							"taxableAmount": 1000.0,
							"taxCalculated": 62.5,
							"taxCode": "PS081282",
							"taxDate": "2020-07-30",
							"taxEngine": "",
							"taxOverrideType": "None",
							"taxOverrideAmount": 0.0,
							"taxOverrideReason": "",
							"taxIncluded": false,
							"details": [
								{
									"id": 123456789,
									"transactionLineId": 123456789,
									"transactionId": 123456789,
									"addressId": 12345,
									"country": "US",
									"region": "CA",
									"stateFIPS": "06",
									"exemptAmount": 0.0,
									"exemptReasonId": 4,
									"inState": false,
									"jurisCode": "06",
									"jurisName": "CALIFORNIA",
									"jurisdictionId": 5000531,
									"signatureCode": "AGAM",
									"stateAssignedNo": "",
									"jurisType": "STA",
									"nonTaxableAmount": 0.0,
									"nonTaxableRuleId": 0,
									"nonTaxableType": "BaseRule",
									"rate": 0.0625,
									"rateRuleId": 1321915,
									"rateSourceId": 3,
									"serCode": "",
									"sourcing": "Destination",
									"tax": 62.5,
									"taxableAmount": 1000.0,
									"taxType": "Sales",
									"taxName": "CA STATE TAX",
									"taxAuthorityTypeId": 45,
									"taxRegionId": 2127184,
									"taxCalculated": 62.5,
									"taxOverride": 0.0,
									"rateType": "General"
								}
							],
							"vatNumberTypeId": 0
						}
					],
					"addresses": [
						{
							"id": 0,
							"transactionId": 0,
							"boundaryLevel": "Address",
							"line1": "100 Ravine Lane Northeast #220",
							"city": "Bainbridge Island",
							"region": "WA",
							"postalCode": "98110",
							"country": "US",
							"taxRegionId": 0
						}
					],
					"taxDetailsByTaxType": [
						{
							"taxType": "SalesAndUse",
							"totalTaxable": 100.0,
							"totalExempt": 0.05,
							"totalNonTaxable": 0.0,
							"totalTax": 0.625
						}
					]
				}
			}
		},
		"VerifyMultiDocumentModel": {
			"description": "Verify that a MultiDocument object matches the information in your accounting system.\r\n            \r\nIf all attributes of the MultiDocument object match the values in your request, the\r\nMultiDocument object will be moved to the document status `Posted`.\r\n            \r\nFor more information on document status, see [DocumentStatus](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentStatus/).",
			"required": ["code", "type"],
			"type": "object",
			"properties": {
				"code": {
					"description": "Represents the unique code of this MultiDocument transaction.\r\n            \r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.",
					"maxLength": 45,
					"minLength": 0,
					"type": "string",
					"example": "ABC"
				},
				"type": {
					"description": "Represents the document type of this MultiDocument transaction.  For more information about\r\ndocument types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/).\r\n            \r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesInvoice",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"verifyTransactionDate": {
					"format": "date-time",
					"description": "Set this value if you wish to verify a match between `verifyTransactionDate` and\r\nthe `documentDate` value on the transaction recorded in AvaTax.\r\n            \r\nIf you leave this field empty, we will skip verification for this field.",
					"type": "string"
				},
				"verifyTotalAmount": {
					"format": "double",
					"description": "Set this value if you wish to verify a match between `verifyTotalAmount` and\r\nthe `totalAmount` value on the transaction recorded in AvaTax.\r\n            \r\nIf you leave this field empty, we will skip verification for this field.",
					"type": "number"
				},
				"verifyTotalTax": {
					"format": "double",
					"description": "Set this value if you wish to verify a match between `verifyTotalTax` and\r\nthe `totalTax` value on the transaction recorded in AvaTax.\r\n            \r\nIf you leave this field empty, we will skip verification for this field.",
					"type": "number"
				}
			},
			"example": {
				"code": "ABC",
				"type": "SalesInvoice"
			}
		},
		"NexusSummaryModel": {
			"description": "Nexus summary model",
			"type": "object",
			"properties": {
				"companyId": {
					"format": "int32",
					"description": "Company Id",
					"type": "integer",
					"example": 1234
				},
				"nexusSummary": {
					"description": "Nexus summary for this company",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusTaxTypeGroupCountModel"
					},
					"example": [
						{
							"nexusTaxTypeGroup": "SalesAndUse",
							"count": 8
						},
						{
							"nexusTaxTypeGroup": "InputOutput",
							"count": 5
						}
					]
				}
			},
			"example": {
				"companyId": 1234,
				"nexusSummary": [
					{
						"nexusTaxTypeGroup": "SalesAndUse",
						"count": 8
					},
					{
						"nexusTaxTypeGroup": "InputOutput",
						"count": 5
					}
				]
			}
		},
		"NexusTaxTypeGroupCountModel": {
			"description": "Nexus tax type groupe with count",
			"type": "object",
			"properties": {
				"nexusTaxTypeGroup": {
					"description": "Which nexus tax type group",
					"type": "string"
				},
				"count": {
					"format": "int32",
					"description": "How many nexus in the group",
					"type": "integer"
				}
			}
		},
		"DeclareNexusByAddressModel": {
			"description": "Use this object to provide an address and date range where your company does business.\r\nThis address will be used to determine what jurisdictions you should declare nexus and\r\ncalculate tax.",
			"type": "object",
			"properties": {
				"effectiveDate": {
					"format": "date-time",
					"description": "The earliest date on which your company does business at this address.  If you omit\r\na value in this field, nexus will be declared at the earliest possible date for this\r\njurisdiction.",
					"type": "string",
					"example": "2018-01-01T00:00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "The date on which your company stopped doing business at this address, or empty if\r\nyour company has no plans to stop doing business at this address.",
					"type": "string",
					"example": "2020-12-31T00:00:00"
				},
				"textCase": {
					"description": "Specify the text case for the validated address result.  If not specified, will return uppercase.",
					"enum": ["Upper", "Mixed"],
					"type": "string",
					"x-enum-metadata": {
						"name": "TextCase",
						"values": [
							{
								"name": "Upper",
								"value": 0
							},
							{
								"name": "Mixed",
								"value": 1
							}
						]
					}
				},
				"line1": {
					"description": "First line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "2000 Main Street"
				},
				"line2": {
					"description": "Second line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "Third line of the street address",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "City component of the address",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"postalCode": {
					"description": "Postal Code / Zip Code component of the address.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string",
					"example": "92614"
				},
				"latitude": {
					"format": "double",
					"description": "Geospatial latitude measurement, in Decimal Degrees floating point format.",
					"type": "number"
				},
				"longitude": {
					"format": "double",
					"description": "Geospatial longitude measurement, in Decimal Degrees floating point format.",
					"type": "number"
				}
			},
			"example": {
				"effectiveDate": "2018-01-01T00:00:00",
				"endDate": "2020-12-31T00:00:00",
				"line1": "2000 Main Street",
				"city": "Irvine",
				"region": "CA",
				"country": "US",
				"postalCode": "92614"
			}
		},
		"NexusByAddressModel": {
			"description": "Contains information about nexus jurisdictions that were declared\r\nas a result of a call to `DeclareNexusByAddress`.  For each address,\r\nthis object model contains a list of the nexus objects that were declared\r\naccording to the geocoding that corresponds to this address.",
			"type": "object",
			"properties": {
				"address": {
					"$ref": "#/definitions/DeclareNexusByAddressModel",
					"description": "The address that was provided by the user in the call to `DeclareNexusByAddress`",
					"example": {
						"effectiveDate": "2018-01-01T00:00:00",
						"endDate": "2020-12-31T00:00:00",
						"line1": "2000 Main Street",
						"city": "Irvine",
						"region": "CA",
						"country": "US",
						"postalCode": "92614"
					}
				},
				"declaredNexus": {
					"description": "List of all nexus objects that were affected by declaring nexus at the address specified\r\nby `address`.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusModel"
					},
					"example": [
						{
							"id": 0,
							"companyId": 0,
							"country": "US",
							"region": "CA",
							"jurisTypeId": "STA",
							"jurisdictionTypeId": "State",
							"jurisCode": "06",
							"jurisName": "CALIFORNIA",
							"effectiveDate": "2017-04-01",
							"shortName": "CALIFORNIA",
							"signatureCode": "",
							"stateAssignedNo": "",
							"nexusTypeId": "SalesOrSellersUseTax",
							"sourcing": "Destination",
							"hasLocalNexus": false,
							"hasPermanentEstablishment": true,
							"streamlinedSalesTax": false,
							"isSSTActive": false,
							"createdDate": "2017-06-30T05:14:06.003",
							"createdUserId": 0,
							"modifiedDate": "2018-05-23T20:12:37.07",
							"modifiedUserId": 0,
							"nexusTaxTypeGroup": "SalesAndUse",
							"isSellerImporterOfRecord": false
						}
					]
				}
			},
			"example": {
				"address": {
					"effectiveDate": "2018-01-01T00:00:00",
					"endDate": "2020-12-31T00:00:00",
					"line1": "2000 Main Street",
					"city": "Irvine",
					"region": "CA",
					"country": "US",
					"postalCode": "92614"
				},
				"declaredNexus": [
					{
						"id": 0,
						"companyId": 0,
						"country": "US",
						"region": "CA",
						"jurisTypeId": "STA",
						"jurisdictionTypeId": "State",
						"jurisCode": "06",
						"jurisName": "CALIFORNIA",
						"effectiveDate": "2017-04-01",
						"shortName": "CALIFORNIA",
						"signatureCode": "",
						"stateAssignedNo": "",
						"nexusTypeId": "SalesOrSellersUseTax",
						"sourcing": "Destination",
						"hasLocalNexus": false,
						"hasPermanentEstablishment": true,
						"streamlinedSalesTax": false,
						"isSSTActive": false,
						"createdDate": "2017-06-30T05:14:06.003",
						"createdUserId": 0,
						"modifiedDate": "2018-05-23T20:12:37.07",
						"modifiedUserId": 0,
						"nexusTaxTypeGroup": "SalesAndUse",
						"isSellerImporterOfRecord": false
					}
				]
			}
		},
		"FetchResult[NexusParameterDetailModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusParameterDetailModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"NoticeModel": {
			"description": "Represents a letter received from a tax authority regarding tax filing.\r\nThese letters often have the warning \"Notice\" printed at the top, which is why\r\nthey are called \"Notices\".",
			"required": [
				"id",
				"companyId",
				"statusId",
				"receivedDate",
				"customerTypeId",
				"reasonId",
				"priorityId",
				"hideFromCustomer",
				"showResolutionDateToCustomer"
			],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this notice.",
					"type": "integer",
					"readOnly": true,
					"example": 3878
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company to which this notice belongs.",
					"type": "integer",
					"example": 5714
				},
				"statusId": {
					"format": "int32",
					"description": "The status id of the notice",
					"type": "integer",
					"example": 4
				},
				"status": {
					"description": "The status of the notice",
					"type": "string",
					"readOnly": true,
					"example": "Closed - Paid"
				},
				"receivedDate": {
					"format": "date-time",
					"description": "The received date of the notice",
					"type": "string",
					"example": "2020-07-30T22:11:32.4810851Z"
				},
				"closedDate": {
					"format": "date-time",
					"description": "The closed date of the notice",
					"type": "string",
					"example": "2020-08-19T22:11:32.4810852Z"
				},
				"totalRemit": {
					"format": "double",
					"description": "The total remmitance amount for the notice",
					"type": "number",
					"readOnly": true,
					"example": 0.0
				},
				"customerTypeId": {
					"description": "NoticeCustomerTypeID can be retrieved from the definitions API",
					"enum": ["AvaTaxReturns", "StandAlone", "Strategic", "SST", "TrustFile", "PWC", "HudsonGroup"],
					"type": "string",
					"example": "AvaTaxReturns",
					"x-enum-metadata": {
						"name": "NoticeCustomerType",
						"values": [
							{
								"name": "AvaTaxReturns",
								"value": 1
							},
							{
								"name": "StandAlone",
								"value": 2
							},
							{
								"name": "Strategic",
								"value": 3
							},
							{
								"name": "SST",
								"value": 4
							},
							{
								"name": "TrustFile",
								"value": 5
							},
							{
								"name": "PWC",
								"value": 6
							},
							{
								"name": "HudsonGroup",
								"value": 7
							}
						]
					}
				},
				"country": {
					"description": "Name or ISO 3166 code identifying the country that sent this notice.\r\n            \r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "Name or ISO 3166 code identifying the region within the country that sent this notice.\r\n            \r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n            \r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
					"type": "string",
					"example": "AZ"
				},
				"taxAuthorityId": {
					"format": "int32",
					"description": "The tax authority id of the notice",
					"type": "integer",
					"example": 208
				},
				"filingFrequency": {
					"description": "The filing frequency of the notice",
					"enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly", "Weekly"],
					"type": "string",
					"example": "Quarterly",
					"x-enum-metadata": {
						"name": "FilingFrequencyId",
						"values": [
							{
								"name": "Monthly",
								"value": 1
							},
							{
								"name": "Quarterly",
								"value": 2
							},
							{
								"name": "SemiAnnually",
								"value": 3
							},
							{
								"name": "Annually",
								"value": 4
							},
							{
								"name": "Bimonthly",
								"value": 5
							},
							{
								"name": "Occasional",
								"value": 6
							},
							{
								"name": "InverseQuarterly",
								"value": 7
							},
							{
								"name": "Weekly",
								"value": 8
							}
						]
					}
				},
				"filingTypeId": {
					"description": "The filing type of the notice",
					"enum": [
						"ElectronicReturn",
						"PaperReturn",
						"ReturnNotFiled",
						"EFTPaper",
						"SER",
						"TrustfileEdi",
						"UploadFile",
						"PaperManual",
						"CertCapture",
						"SignatureReady"
					],
					"type": "string",
					"example": "ElectronicReturn",
					"x-enum-metadata": {
						"name": "TaxNoticeFilingTypeId",
						"values": [
							{
								"name": "ElectronicReturn",
								"value": 1
							},
							{
								"name": "PaperReturn",
								"value": 2
							},
							{
								"name": "ReturnNotFiled",
								"value": 3
							},
							{
								"name": "EFTPaper",
								"value": 4
							},
							{
								"name": "SER",
								"value": 5
							},
							{
								"name": "TrustfileEdi",
								"value": 6
							},
							{
								"name": "UploadFile",
								"value": 7
							},
							{
								"name": "PaperManual",
								"value": 8
							},
							{
								"name": "CertCapture",
								"value": 9
							},
							{
								"name": "SignatureReady",
								"value": 10
							}
						]
					}
				},
				"ticketReferenceNo": {
					"description": "The ticket reference number of the notice",
					"type": "string",
					"example": "1235"
				},
				"ticketReferenceUrl": {
					"description": "The ticket reference url of the notice",
					"type": "string",
					"example": "http://www.ticketurl.com"
				},
				"salesForceCase": {
					"description": "The sales force case of the notice",
					"type": "string",
					"example": "3333"
				},
				"salesForceCaseUrl": {
					"description": "The URL to the sales force case",
					"type": "string",
					"example": "http://www.salesforcecaseurl.com"
				},
				"taxPeriod": {
					"description": "The tax period of the notice",
					"type": "string",
					"example": "200710"
				},
				"reasonId": {
					"format": "int32",
					"description": "The notice reason id",
					"type": "integer",
					"example": 10
				},
				"reason": {
					"description": "The notice reason",
					"type": "string",
					"readOnly": true,
					"example": "Unsupported Credit"
				},
				"typeId": {
					"format": "int32",
					"description": "The tax notice type id",
					"type": "integer",
					"example": 3
				},
				"type": {
					"description": "The tax notice type description",
					"type": "string"
				},
				"customerFundingOptionId": {
					"description": "The notice customer funding options",
					"enum": ["Pull", "Wire"],
					"type": "string",
					"example": "Pull",
					"x-enum-metadata": {
						"name": "FundingOption",
						"values": [
							{
								"name": "Pull",
								"value": 1
							},
							{
								"name": "Wire",
								"value": 2
							}
						]
					}
				},
				"priorityId": {
					"description": "The priority of the notice",
					"enum": ["ImmediateAttentionRequired", "High", "Normal", "Low"],
					"type": "string",
					"example": "ImmediateAttentionRequired",
					"x-enum-metadata": {
						"name": "NoticePriorityId",
						"values": [
							{
								"name": "ImmediateAttentionRequired",
								"value": 1
							},
							{
								"name": "High",
								"value": 2
							},
							{
								"name": "Normal",
								"value": 3
							},
							{
								"name": "Low",
								"value": 4
							}
						]
					}
				},
				"customerComment": {
					"description": "Comments from the customer on this notice",
					"type": "string",
					"example": "comments"
				},
				"hideFromCustomer": {
					"description": "Indicator to hide from customer",
					"type": "boolean",
					"example": false
				},
				"expectedResolutionDate": {
					"format": "date-time",
					"description": "Expected resolution date of the notice",
					"type": "string",
					"example": "2020-08-14T22:11:32.4810855Z"
				},
				"showResolutionDateToCustomer": {
					"description": "Indicator to show customer this resolution date",
					"type": "boolean",
					"example": false
				},
				"closedByUserId": {
					"format": "int32",
					"description": "The unique ID number of the user that closed the notice",
					"type": "integer",
					"example": 1
				},
				"createdByUserName": {
					"description": "The user who created the notice",
					"type": "string",
					"readOnly": true,
					"example": "user@compliance.com"
				},
				"ownedByUserId": {
					"format": "int32",
					"description": "The unique ID number of the user that owns the notice",
					"type": "integer",
					"example": 23
				},
				"description": {
					"description": "The description of the notice",
					"type": "string",
					"example": "description"
				},
				"avaFileFormId": {
					"format": "int32",
					"description": "The ava file form id of the notice",
					"type": "integer",
					"example": 333
				},
				"revenueContactId": {
					"format": "int32",
					"description": "The id of the revenue contact",
					"type": "integer",
					"example": 444
				},
				"complianceContactId": {
					"format": "int32",
					"description": "The id of the compliance contact",
					"type": "integer",
					"example": 555
				},
				"taxFormCode": {
					"description": "The tax form code of the notice",
					"type": "string"
				},
				"documentReference": {
					"description": "The document reference of the notice",
					"type": "string"
				},
				"jurisdictionName": {
					"description": "The jurisdiction name of the notice",
					"type": "string",
					"readOnly": true,
					"example": "CHANDLER"
				},
				"jurisdictionType": {
					"description": "The jurisdiction type of the notice",
					"type": "string",
					"readOnly": true,
					"example": "City"
				},
				"comments": {
					"description": "Additional comments on the notice",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeCommentModel"
					},
					"example": [
						{
							"id": 3,
							"noticeId": 3878,
							"date": "2020-07-30T22:11:32.4810822Z",
							"comment": "spoke to Chris payment not received need copy of check.VW",
							"commentUserId": 1,
							"commentUserName": "user@compliance.com",
							"commentTypeId": 0,
							"commentType": "Internal"
						}
					]
				},
				"finances": {
					"description": "Finance details of the notice",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeFinanceModel"
					},
					"example": [
						{
							"id": 3,
							"noticeId": 0,
							"noticeDate": "2020-07-30T22:11:32.481084Z",
							"taxDue": 6.66,
							"penalty": 0.67,
							"interest": 0.19,
							"credits": 0.06,
							"taxAbated": 0.0
						}
					]
				},
				"responsibility": {
					"description": "Notice Responsibility Details",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeResponsibilityDetailModel"
					}
				},
				"rootCause": {
					"description": "Notice Root Cause Details",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeRootCauseDetailModel"
					}
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true,
					"example": "2020-07-25T22:11:32.4810856Z"
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true,
					"example": 1
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true,
					"example": "2020-07-30T22:11:32.4810856Z"
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true,
					"example": 222
				}
			},
			"example": {
				"id": 3878,
				"companyId": 5714,
				"statusId": 4,
				"status": "Closed - Paid",
				"receivedDate": "2020-07-30T22:11:32.4810851Z",
				"closedDate": "2020-08-19T22:11:32.4810852Z",
				"totalRemit": 0.0,
				"customerTypeId": "AvaTaxReturns",
				"country": "US",
				"region": "AZ",
				"taxAuthorityId": 208,
				"filingFrequency": "Quarterly",
				"filingTypeId": "ElectronicReturn",
				"ticketReferenceNo": "1235",
				"ticketReferenceUrl": "http://www.ticketurl.com",
				"salesForceCase": "3333",
				"salesForceCaseUrl": "http://www.salesforcecaseurl.com",
				"taxPeriod": "200710",
				"reasonId": 10,
				"reason": "Unsupported Credit",
				"typeId": 3,
				"customerFundingOptionId": "Pull",
				"priorityId": "ImmediateAttentionRequired",
				"customerComment": "comments",
				"hideFromCustomer": false,
				"expectedResolutionDate": "2020-08-14T22:11:32.4810855Z",
				"showResolutionDateToCustomer": false,
				"closedByUserId": 1,
				"createdByUserName": "user@compliance.com",
				"ownedByUserId": 23,
				"description": "description",
				"avaFileFormId": 333,
				"revenueContactId": 444,
				"complianceContactId": 555,
				"jurisdictionName": "CHANDLER",
				"jurisdictionType": "City",
				"comments": [
					{
						"id": 3,
						"noticeId": 3878,
						"date": "2020-07-30T22:11:32.4810822Z",
						"comment": "spoke to Chris payment not received need copy of check.VW",
						"commentUserId": 1,
						"commentUserName": "user@compliance.com",
						"commentTypeId": 0,
						"commentType": "Internal"
					}
				],
				"finances": [
					{
						"id": 3,
						"noticeId": 0,
						"noticeDate": "2020-07-30T22:11:32.481084Z",
						"taxDue": 6.66,
						"penalty": 0.67,
						"interest": 0.19,
						"credits": 0.06,
						"taxAbated": 0.0
					}
				],
				"createdDate": "2020-07-25T22:11:32.4810856Z",
				"createdUserId": 1,
				"modifiedDate": "2020-07-30T22:11:32.4810856Z",
				"modifiedUserId": 222
			}
		},
		"NoticeCommentModel": {
			"description": "Represents communication between Avalara and the company regarding the processing of a tax notice.",
			"required": ["noticeId", "commentType"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this notice.",
					"type": "integer",
					"readOnly": true,
					"example": 1123
				},
				"noticeId": {
					"format": "int32",
					"description": "The ID of the notice this comment is attached too",
					"type": "integer",
					"example": 12345
				},
				"date": {
					"format": "date-time",
					"description": "The date this comment was entered",
					"type": "string",
					"example": "2020-07-30T22:11:32.5012624Z"
				},
				"comment": {
					"description": "TaxNoticeComment",
					"type": "string",
					"example": "comment"
				},
				"commentUserId": {
					"format": "int32",
					"description": "TaxNoticeCommentUserId",
					"type": "integer",
					"example": 0
				},
				"commentUserName": {
					"description": "TaxNoticeCommentUserName",
					"type": "string",
					"readOnly": true,
					"example": "complianceUser"
				},
				"commentTypeId": {
					"format": "int32",
					"description": "taxNoticeCommentTypeId",
					"type": "integer",
					"example": 0
				},
				"commentType": {
					"description": "taxNoticeCommentType",
					"enum": ["Internal", "Customer", "POAAttachment", "NoticeVoucher"],
					"type": "string",
					"example": "Internal",
					"x-enum-metadata": {
						"name": "CommentType",
						"values": [
							{
								"name": "Internal",
								"value": 1
							},
							{
								"name": "Customer",
								"value": 2
							},
							{
								"name": "POAAttachment",
								"value": 3
							},
							{
								"name": "NoticeVoucher",
								"value": 4
							}
						]
					}
				},
				"commentLink": {
					"description": "TaxNoticeCommentLink",
					"type": "string",
					"example": "www.avalara.com"
				},
				"taxNoticeFileName": {
					"description": "TaxNoticeFileName",
					"maxLength": 300,
					"minLength": 0,
					"type": "string",
					"example": "xyz.txt"
				},
				"resourceFileId": {
					"format": "int64",
					"description": "resourceFileId",
					"type": "integer"
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"attachmentUploadRequest": {
					"$ref": "#/definitions/ResourceFileUploadRequestModel",
					"description": "An attachment to the detail",
					"example": {
						"content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
						"username": "test.user",
						"accountId": 5555,
						"companyId": 66666,
						"name": "nameoffile.txt",
						"resourceFileTypeId": 0,
						"length": 333
					}
				}
			},
			"example": {
				"id": 1123,
				"noticeId": 12345,
				"date": "2020-07-30T22:11:32.5012624Z",
				"comment": "comment",
				"commentUserId": 0,
				"commentUserName": "complianceUser",
				"commentTypeId": 0,
				"commentType": "Internal",
				"commentLink": "www.avalara.com",
				"taxNoticeFileName": "xyz.txt",
				"attachmentUploadRequest": {
					"content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
					"username": "test.user",
					"accountId": 5555,
					"companyId": 66666,
					"name": "nameoffile.txt",
					"resourceFileTypeId": 0,
					"length": 333
				}
			}
		},
		"NoticeFinanceModel": {
			"description": "Represents estimated financial results from responding to a tax notice.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The Unique Id of the Finance Model",
					"type": "integer",
					"example": 0
				},
				"noticeId": {
					"format": "int32",
					"description": "The unique ID of the the tax notice associated with the the finance detail",
					"type": "integer",
					"example": 12345
				},
				"noticeDate": {
					"format": "date-time",
					"description": "The date of the notice",
					"type": "string",
					"example": "2020-07-30T22:11:32.5261626Z"
				},
				"dueDate": {
					"format": "date-time",
					"description": "The due date of the notice",
					"type": "string",
					"example": "2020-08-13T22:11:32.5261626Z"
				},
				"noticeNumber": {
					"description": "The sequential number of the notice",
					"type": "string",
					"example": "3x3215"
				},
				"taxDue": {
					"format": "double",
					"description": "The amount of tax due on the notice",
					"type": "number",
					"example": 99.98
				},
				"penalty": {
					"format": "double",
					"description": "The amound of penalty listed on the notice",
					"type": "number",
					"example": 56.98
				},
				"interest": {
					"format": "double",
					"description": "The amount of interest listed on the notice",
					"type": "number",
					"example": 88.98
				},
				"credits": {
					"format": "double",
					"description": "The amount of credits listed on the notice",
					"type": "number",
					"example": 85.98
				},
				"taxAbated": {
					"format": "double",
					"description": "The amount of tax abated on the notice",
					"type": "number",
					"example": 45.98
				},
				"customerPenalty": {
					"format": "double",
					"description": "The amount of customer penalty on the notice",
					"type": "number",
					"example": 23.98
				},
				"customerInterest": {
					"format": "double",
					"description": "The amount of customer interest on the notice",
					"type": "number",
					"example": 13.98
				},
				"cspFeeRefund": {
					"format": "double",
					"description": "The amount of CSP Fee Refund on the notice",
					"type": "number",
					"example": 10.98
				},
				"fileName": {
					"description": "The name of the file attached to the finance detail",
					"type": "string"
				},
				"resourceFileId": {
					"format": "int64",
					"description": "The ResourceFileId of the finance detail attachment",
					"type": "integer"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"attachmentUploadRequest": {
					"$ref": "#/definitions/ResourceFileUploadRequestModel",
					"description": "An attachment to the finance detail",
					"example": {
						"content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
						"username": "test.user",
						"accountId": 5555,
						"companyId": 66666,
						"name": "nameoffile.txt",
						"resourceFileTypeId": 0,
						"length": 333
					}
				}
			},
			"example": {
				"id": 0,
				"noticeId": 12345,
				"noticeDate": "2020-07-30T22:11:32.5261626Z",
				"dueDate": "2020-08-13T22:11:32.5261626Z",
				"noticeNumber": "3x3215",
				"taxDue": 99.98,
				"penalty": 56.98,
				"interest": 88.98,
				"credits": 85.98,
				"taxAbated": 45.98,
				"customerPenalty": 23.98,
				"customerInterest": 13.98,
				"cspFeeRefund": 10.98,
				"attachmentUploadRequest": {
					"content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
					"username": "test.user",
					"accountId": 5555,
					"companyId": 66666,
					"name": "nameoffile.txt",
					"resourceFileTypeId": 0,
					"length": 333
				}
			}
		},
		"NoticeResponsibilityDetailModel": {
			"description": "NoticeResponsibility Model",
			"required": ["noticeId", "taxNoticeResponsibilityId"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this filing frequency.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"noticeId": {
					"format": "int32",
					"description": "TaxNoticeId",
					"type": "integer",
					"example": 4
				},
				"taxNoticeResponsibilityId": {
					"format": "int32",
					"description": "TaxNoticeResponsibilityId",
					"type": "integer",
					"example": 4
				},
				"description": {
					"description": "The description name of this filing frequency",
					"type": "string",
					"readOnly": true,
					"example": "Avalara-Compliance"
				}
			},
			"example": {
				"id": 0,
				"noticeId": 4,
				"taxNoticeResponsibilityId": 4,
				"description": "Avalara-Compliance"
			}
		},
		"NoticeRootCauseDetailModel": {
			"description": "NoticeRootCause Model",
			"required": ["id", "noticeId", "taxNoticeRootCauseId"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this filing frequency.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"noticeId": {
					"format": "int32",
					"description": "TaxNoticeId",
					"type": "integer",
					"example": 4
				},
				"taxNoticeRootCauseId": {
					"format": "int32",
					"description": "TaxNoticeRootCauseId",
					"type": "integer",
					"example": 4
				},
				"description": {
					"description": "The description name of this root cause",
					"type": "string",
					"readOnly": true,
					"example": "Processor error-Return not submitted"
				}
			},
			"example": {
				"id": 0,
				"noticeId": 4,
				"taxNoticeRootCauseId": 4,
				"description": "Processor error-Return not submitted"
			}
		},
		"ResourceFileUploadRequestModel": {
			"description": "A request to upload a file to Resource Files",
			"required": ["content"],
			"type": "object",
			"properties": {
				"content": {
					"format": "byte",
					"description": "This stream contains the bytes of the file being uploaded.",
					"type": "string",
					"example": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg=="
				},
				"username": {
					"description": "The username adding the file",
					"type": "string",
					"example": "test.user"
				},
				"accountId": {
					"format": "int32",
					"description": "The account ID to which this file will be attached.",
					"type": "integer",
					"example": 5555
				},
				"companyId": {
					"format": "int32",
					"description": "The company ID to which this file will be attached.",
					"type": "integer",
					"example": 66666
				},
				"name": {
					"description": "The original name of this file.",
					"type": "string",
					"example": "nameoffile.txt"
				},
				"resourceFileTypeId": {
					"format": "int32",
					"description": "The resource type ID of this file.",
					"type": "integer",
					"example": 0
				},
				"length": {
					"format": "int64",
					"description": "Length of the file in bytes.",
					"type": "integer",
					"example": 333
				}
			},
			"example": {
				"content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
				"username": "test.user",
				"accountId": 5555,
				"companyId": 66666,
				"name": "nameoffile.txt",
				"resourceFileTypeId": 0,
				"length": 333
			}
		},
		"FetchResult[NoticeModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[NoticeCommentModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeCommentModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[NoticeFinanceModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeFinanceModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[NoticeResponsibilityDetailModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeResponsibilityDetailModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[NoticeRootCauseDetailModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NoticeRootCauseDetailModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"ResourceFileUploadResultModel": {
			"description": "Encapsulates the result of uploading a file to the resource system",
			"type": "object",
			"properties": {
				"message": {
					"description": "If the request failed, this contains a description of the error.",
					"type": "string",
					"example": "return message"
				},
				"resourceFileId": {
					"format": "int64",
					"description": "If the request succeeded, this is the ID number of the file.",
					"type": "integer",
					"example": 333
				},
				"aaa_success": {
					"description": "True if the upload request succeeded.",
					"type": "boolean"
				}
			},
			"example": {
				"message": "return message",
				"resourceFileId": 333,
				"aaa_success": true
			}
		},
		"NotificationModel": {
			"description": "Represents a single notification.\r\n            \r\nA notification is a message from Avalara that may have relevance to your business.  You may want\r\nto regularly review notifications and then dismiss them when you are certain that you have addressed\r\nany relevant concerns raised by this notification.\r\n            \r\nAn example of a notification would be a message about new software, or a change to AvaTax that may\r\naffect you, or a potential issue with your company's tax profile.",
			"required": ["severityLevelId", "message", "expireDate"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique id of the notification.",
					"type": "integer",
					"example": 123
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the account that received this notification.",
					"type": "integer",
					"example": 202011901
				},
				"companyId": {
					"format": "int32",
					"description": "If this notification was tied to a specific company, this will be the\r\nunique ID number of the company that received the notification.  Notifications that\r\nare tied to accounts will have a `NULL` value for `companyId`.",
					"type": "integer",
					"example": 34345
				},
				"referenceObject": {
					"description": "The type name of object referred to by this notification, if any.\r\n            \r\nSome notifications may include information about a related data object.\r\n            \r\nFor example, if this notification was related to a nexus declaration, the `referenceObject` field would\r\nbe  `Nexus` and the `referenceId` field would be the unique ID number of that nexus.",
					"maxLength": 20,
					"minLength": 0,
					"type": "string",
					"example": "Company Return"
				},
				"referenceId": {
					"format": "int64",
					"description": "The unique reference Id number of the object referred to by this notification, if any.\r\n            \r\nSome notifications may include information about a related data object.\r\n            \r\nFor example, if this notification was related to a nexus declaration, the `referenceObject` field would\r\nbe  `Nexus` and the `referenceId` field would be the unique ID number of that nexus.",
					"type": "integer",
					"example": 692
				},
				"severityLevelId": {
					"description": "The severity level of the notification.",
					"enum": ["Complete", "Neutral", "Advisory", "Blocking"],
					"type": "string",
					"example": "Neutral",
					"x-enum-metadata": {
						"name": "NotificationSeverityLevel",
						"values": [
							{
								"name": "Neutral",
								"value": 0
							},
							{
								"name": "Advisory",
								"value": 1
							},
							{
								"name": "Blocking",
								"value": 2
							},
							{
								"name": "Complete",
								"value": -1
							}
						]
					}
				},
				"category": {
					"description": "The category of this notification.\r\n            \r\nNotification categories are a useful way to group related notifications together. Category names may change\r\nover time.\r\n            \r\nFor Example: \"Backdated Transactions\" or \"Nexus Jurisdiction Alerts\", or \"Certificate Expiration\".",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Certificate Expiration"
				},
				"topic": {
					"description": "The topic of this notification.\r\n            \r\nNotification topics contain information about the notification.  They are a summary of the issue and can\r\nhelp you decide what type of action to take.\r\n            \r\nFor Example: \"Backdated Transactions\" or \"Nexus Jurisdiction Alerts\", or \"Certificate Expiration\".",
					"maxLength": 250,
					"minLength": 0,
					"type": "string"
				},
				"message": {
					"description": "The message for this notification.  This is a friendly description of the notification and any relevant\r\ninformation that can help you decide what kind of action, if any, to take in response.",
					"type": "string",
					"example": "The certificate of your company is nearing its expiration, please consider renewing it."
				},
				"needsAction": {
					"description": "If this notification object requires user action to resolve, this value will be set to true.",
					"type": "boolean",
					"example": true
				},
				"actionName": {
					"description": "If there is a specific action suggested by this notification, this is the name of the action.\r\n            \r\nAn action is a suggested next step such as \"Review Your Tax Profile.\"  If an action is suggested,\r\nyou should give the viewer a hyperlink to the location referred to by `actionLink` and give the\r\nhyperlink the name `actionName`.",
					"maxLength": 250,
					"minLength": 0,
					"type": "string",
					"example": "Certificate Renewal"
				},
				"actionLink": {
					"description": "If there is a specific action suggested by this notification, this is the URL of the action.\r\n            \r\nAn action is a suggested next step such as \"Review Your Tax Profile.\"  If an action is suggested,\r\nyou should give the viewer a hyperlink to the location referred to by `actionLink` and give the\r\nhyperlink the name `actionName`.",
					"maxLength": 250,
					"minLength": 0,
					"type": "string",
					"example": "www.xyz.com"
				},
				"actionDueDate": {
					"format": "date-time",
					"description": "If there is a specific action suggested by this notification, and if this action is requested\r\nby a specific due date, this value will be the due date for the action.\r\n            \r\nAn action is a suggested next step such as \"Review Your Tax Profile.\"  If an action is suggested,\r\nyou should give the viewer a hyperlink to the location referred to by `actionLink` and give the\r\nhyperlink the name `actionName`.\r\n            \r\nFor actions that have deadlines, such as \"Confirm your tax registration before filing\", this value\r\nwill be set to the deadline date for the action.  Otherwise, this value will be null.",
					"type": "string"
				},
				"dismissed": {
					"description": "When a user has finished reviewing a notification, they may opt to dismiss it by calling the\r\n`DismissNotification` API.  This API marks the notification as dismissed, and dismissed notifications\r\nwill generally not appear in most user interfaces.",
					"type": "boolean",
					"example": false
				},
				"dismissedByUserId": {
					"format": "int32",
					"description": "If this notification has been dismissed, this indicates the unique ID number of the user that\r\ndismissed the notification.",
					"type": "integer"
				},
				"dismissedDate": {
					"format": "date-time",
					"description": "If this notification has been dismissed, this indicates the timestamp (in UTC time) when the user\r\ndismissed the notification.",
					"type": "string"
				},
				"expireDate": {
					"format": "date-time",
					"description": "If this notification is time sensitive, this is the latest date when the notification should be\r\ndisplayed to the user.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"createdUserId": {
					"format": "int32",
					"description": "The unique ID number of the user who created the notification.",
					"type": "integer",
					"example": 442323
				},
				"createdDate": {
					"format": "date-time",
					"description": "The UTC timestamp of the time when this notification was created.",
					"type": "string",
					"example": "2018-05-05T00:00:00"
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The unique ID number of the user who most recently modified this notification.",
					"type": "integer",
					"example": 442323
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The UTC timestamp of the time when this notification was last modified.",
					"type": "string",
					"example": "2018-05-07T00:00:00"
				}
			},
			"example": {
				"id": 123,
				"accountId": 202011901,
				"companyId": 34345,
				"referenceObject": "Company Return",
				"referenceId": 692,
				"severityLevelId": "Neutral",
				"category": "Certificate Expiration",
				"message": "The certificate of your company is nearing its expiration, please consider renewing it.",
				"needsAction": true,
				"actionName": "Certificate Renewal",
				"actionLink": "www.xyz.com",
				"dismissed": false,
				"expireDate": "2020-07-30T00:00:00+00:00",
				"createdUserId": 442323,
				"createdDate": "2018-05-05T00:00:00",
				"modifiedUserId": 442323,
				"modifiedDate": "2018-05-07T00:00:00"
			}
		},
		"FetchResult[NotificationModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/NotificationModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"PasswordChangeModel": {
			"description": "Password Change Model",
			"required": ["oldPassword", "newPassword"],
			"type": "object",
			"properties": {
				"oldPassword": {
					"description": "Old Password",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "MyOldPassword123!"
				},
				"newPassword": {
					"description": "New Password",
					"type": "string",
					"example": "ANewPassword567:)"
				}
			},
			"example": {
				"oldPassword": "MyOldPassword123!",
				"newPassword": "ANewPassword567:)"
			}
		},
		"SetPasswordModel": {
			"description": "Set Password Model",
			"required": ["newPassword"],
			"type": "object",
			"properties": {
				"newPassword": {
					"description": "New Password",
					"type": "string",
					"example": "NewPassword789~~!"
				}
			},
			"example": {
				"newPassword": "NewPassword789~~!"
			}
		},
		"ExportDocumentLineModel": {
			"description": "An input model for executing a report detailed to the document line level",
			"type": "object",
			"properties": {
				"format": {
					"description": "The file format.",
					"enum": ["CSV"],
					"type": "string",
					"example": "CSV",
					"x-enum-metadata": {
						"name": "ReportFormat",
						"values": [
							{
								"name": "CSV",
								"value": 0
							}
						]
					}
				},
				"startDate": {
					"format": "date-time",
					"description": "The start date filter for report execution. If no date provided, same date of last month will be used as the startDate.",
					"type": "string",
					"example": "2020-06-30T00:00:00+00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "The end date filter for report execution. If no date provided, today's date will be used as the endDate.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"country": {
					"description": "The transactions in the country you wish to run a report:\r\nuse \"ALL\" for all countries\r\nuse \"ALL Non-US\" for all international countries\r\nor use a single 2-char ISO country code",
					"type": "string",
					"example": "US"
				},
				"state": {
					"description": "The state associated with the transactions you wish to run a report on: use \"ALL\" for all states.",
					"type": "string",
					"example": "All"
				},
				"dateFilter": {
					"description": "The type of date to filter your transactions",
					"enum": ["ReportingDate", "DocumentDate", "TaxDate", "PaymentDate"],
					"type": "string",
					"example": "DocumentDate",
					"x-enum-metadata": {
						"name": "ReportDateFilter",
						"values": [
							{
								"name": "DocumentDate",
								"value": 68
							},
							{
								"name": "PaymentDate",
								"value": 80
							},
							{
								"name": "ReportingDate",
								"value": 82
							},
							{
								"name": "TaxDate",
								"value": 84
							}
						]
					}
				},
				"docType": {
					"description": "The transaction type you want to run a report on",
					"enum": ["Sales", "ConsumerUse"],
					"type": "string",
					"example": "Sales",
					"x-enum-metadata": {
						"name": "ReportDocType",
						"values": [
							{
								"name": "ConsumerUse",
								"value": 67
							},
							{
								"name": "Sales",
								"value": 83
							}
						]
					}
				},
				"dateFormat": {
					"description": "Format of dates in your rendered report. Example: \"MM/dd/yyyy\"",
					"type": "string",
					"example": "MM/dd/yyyy"
				},
				"culture": {
					"description": "In which culture your report is produced with. Example: \"en-US\"",
					"type": "string",
					"example": "en-US"
				},
				"currencyCode": {
					"description": "The currency your report is displayed in. Example: \"USD\"",
					"type": "string",
					"example": "USD"
				}
			},
			"example": {
				"format": "CSV",
				"startDate": "2020-06-30T00:00:00+00:00",
				"endDate": "2020-07-30T00:00:00+00:00",
				"country": "US",
				"state": "All",
				"dateFilter": "DocumentDate",
				"docType": "Sales",
				"dateFormat": "MM/dd/yyyy",
				"culture": "en-US",
				"currencyCode": "USD"
			}
		},
		"ReportModel": {
			"description": "A model for displaying report task metadata",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique identifier of the report task",
					"type": "integer",
					"example": 1
				},
				"accountId": {
					"format": "int32",
					"description": "The ID of the account the reported transactions are from",
					"type": "integer",
					"example": 2087654354
				},
				"companyId": {
					"format": "int32",
					"description": "The ID of the company the reported transactions are from",
					"type": "integer",
					"example": 2087654354
				},
				"reportType": {
					"description": "The type of the report: ExportDocumentLine, etc.",
					"type": "string",
					"example": "ExportDocumentLine"
				},
				"parameters": {
					"$ref": "#/definitions/ReportParametersModel",
					"description": "The parametes used to build the report",
					"example": {
						"startDate": "2020-06-30T00:00:00+00:00",
						"endDate": "2020-07-30T00:00:00+00:00",
						"country": "US",
						"state": "All",
						"dateFilter": "DD",
						"docType": "S",
						"dateFormat": "MM/dd/yyyy",
						"culture": "en-US",
						"currencyCode": "USD"
					}
				},
				"status": {
					"description": "The current status of the report building task",
					"type": "string",
					"example": "InQueue"
				},
				"size": {
					"format": "int64",
					"description": "The size of the report file, if available",
					"type": "integer"
				},
				"format": {
					"description": "The format of the report file",
					"type": "string",
					"example": "CSV"
				},
				"file": {
					"description": "The name of the report file, if available",
					"type": "string",
					"example": "2087654354_2087654354_1_ExportDocumentLine.CSV"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The time when the report task was initiated",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"createdUserId": {
					"format": "int32",
					"description": "The Id of the user who initiated this task",
					"type": "integer",
					"example": 0
				},
				"createdUser": {
					"description": "The userName of the user who initiated the report task",
					"type": "string"
				},
				"completedDate": {
					"format": "date-time",
					"description": "The time when the report was finished building, if completed",
					"type": "string"
				}
			},
			"example": {
				"id": 1,
				"accountId": 2087654354,
				"companyId": 2087654354,
				"reportType": "ExportDocumentLine",
				"parameters": {
					"startDate": "2020-06-30T00:00:00+00:00",
					"endDate": "2020-07-30T00:00:00+00:00",
					"country": "US",
					"state": "All",
					"dateFilter": "DD",
					"docType": "S",
					"dateFormat": "MM/dd/yyyy",
					"culture": "en-US",
					"currencyCode": "USD"
				},
				"status": "InQueue",
				"format": "CSV",
				"file": "2087654354_2087654354_1_ExportDocumentLine.CSV",
				"createdDate": "2020-07-30T00:00:00+00:00",
				"createdUserId": 0
			}
		},
		"ReportParametersModel": {
			"description": "The output model for report parameter definitions",
			"type": "object",
			"properties": {
				"startDate": {
					"format": "date-time",
					"description": "The start date filter used for your report",
					"type": "string",
					"example": "2020-06-30T00:00:00+00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "The end date filter used for your report",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"country": {
					"description": "The country filter used for your report",
					"type": "string",
					"example": "US"
				},
				"state": {
					"description": "The state filter used for your report",
					"type": "string",
					"example": "All"
				},
				"dateFilter": {
					"description": "The date type filter used for your report",
					"type": "string",
					"example": "DD"
				},
				"docType": {
					"description": "The doc type filter used for your report",
					"type": "string",
					"example": "S"
				},
				"dateFormat": {
					"description": "The date format used for your report",
					"type": "string",
					"example": "MM/dd/yyyy"
				},
				"culture": {
					"description": "The culture used your report",
					"type": "string",
					"example": "en-US"
				},
				"currencyCode": {
					"description": "The currency code used for your report",
					"type": "string",
					"example": "USD"
				}
			},
			"example": {
				"startDate": "2020-06-30T00:00:00+00:00",
				"endDate": "2020-07-30T00:00:00+00:00",
				"country": "US",
				"state": "All",
				"dateFilter": "DD",
				"docType": "S",
				"dateFormat": "MM/dd/yyyy",
				"culture": "en-US",
				"currencyCode": "USD"
			}
		},
		"FetchResult[ReportModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/ReportModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[SettingModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/SettingModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[SubscriptionModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/SubscriptionModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"PointOfSaleDataRequestModel": {
			"description": "Point-of-Sale Data Request Model",
			"required": ["companyCode"],
			"type": "object",
			"properties": {
				"companyCode": {
					"description": "A unique code that references a company within your account.",
					"type": "string",
					"example": "DEFAULT"
				},
				"documentDate": {
					"format": "date",
					"description": "The date associated with the response content. Default is current date. This field can be used to backdate or postdate the response content.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"responseType": {
					"description": "The format of your response. Formats include JSON, CSV, and XML.",
					"enum": ["Json", "Csv", "Xml"],
					"type": "string",
					"example": "Json",
					"x-enum-metadata": {
						"name": "PointOfSaleFileType",
						"values": [
							{
								"name": "Json",
								"value": 0
							},
							{
								"name": "Csv",
								"value": 1
							},
							{
								"name": "Xml",
								"value": 2
							}
						]
					}
				},
				"taxCodes": {
					"description": "A list of tax codes to include in this point-of-sale file. If no tax codes are specified, response will include all distinct tax codes associated with the Items within your company.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["P0000000"]
				},
				"itemCodes": {
					"description": "A list of item codes to include in this point-of-sale file. If no item codes are specified, responese will include all distinct item codes associated with the Items within your company.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["TXINCL"]
				},
				"locationCodes": {
					"description": "A list of location codes to include in this point-of-sale file. If no location codes are specified, response will include all locations within your company.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["DEFAULT"]
				},
				"includeJurisCodes": {
					"description": "Set this value to true to include Juris Code in the response.",
					"type": "boolean",
					"example": true
				},
				"partnerId": {
					"description": "A unique code assoicated with the Partner you may be working with. If you are not working with a Partner or your Partner has not provided you an ID, leave null.",
					"enum": ["DMA", "AX7"],
					"type": "string",
					"x-enum-metadata": {
						"name": "PointOfSalePartnerId",
						"values": [
							{
								"name": "DMA",
								"value": 1
							},
							{
								"name": "AX7",
								"value": 2
							}
						]
					}
				}
			},
			"example": {
				"companyCode": "DEFAULT",
				"documentDate": "2020-07-30",
				"responseType": "Json",
				"taxCodes": ["P0000000"],
				"itemCodes": ["TXINCL"],
				"locationCodes": ["DEFAULT"],
				"includeJurisCodes": true
			}
		},
		"SendSalesRequestModel": {
			"description": "SendSales Request Model.",
			"required": ["companyId", "taxCodes", "date"],
			"type": "object",
			"properties": {
				"companyId": {
					"format": "int32",
					"description": "The companyId for which the send sales file is being generated.",
					"type": "integer",
					"example": 12345
				},
				"taxCodes": {
					"description": "List of taxCodes to be included in send sales file.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["P0000000", "PC040100"]
				},
				"date": {
					"format": "date-time",
					"description": "The date for which send sales file is being generated.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"format": {
					"description": "The send sales file format.",
					"enum": ["STANDARD", "DMA", "DMA_NEW"],
					"type": "string",
					"example": "STANDARD",
					"x-enum-metadata": {
						"name": "SendSalesOutputFileFormat",
						"values": [
							{
								"name": "STANDARD",
								"value": 1
							},
							{
								"name": "DMA",
								"value": 2
							},
							{
								"name": "DMA_NEW",
								"value": 3
							}
						]
					}
				},
				"type": {
					"description": "The send sales file type",
					"enum": ["Csv", "Json"],
					"type": "string",
					"example": "Csv",
					"x-enum-metadata": {
						"name": "SendSalesFileType",
						"values": [
							{
								"name": "Csv",
								"value": 0
							},
							{
								"name": "Json",
								"value": 1
							}
						]
					}
				}
			},
			"example": {
				"companyId": 12345,
				"taxCodes": ["P0000000", "PC040100"],
				"date": "2020-07-30T00:00:00+00:00",
				"format": "STANDARD",
				"type": "Csv"
			}
		},
		"TaxRateModel": {
			"description": "Contains information about the general tangible personal property sales tax rates for this jurisdiction.\r\n            \r\nThis rate is calculated by making assumptions about the tax calculation process.  It does not account for:\r\n            \r\n* Sourcing rules, such as origin-and-destination based transactions.\r\n* Product taxability rules, such as different tax rates for different product types.\r\n* Nexus declarations, where some customers are not obligated to collect tax in specific jurisdictions.\r\n* Tax thresholds and rate differences by amounts.\r\n* And many more custom use cases.\r\n            \r\nTo upgrade to a fully-featured and accurate tax process that handles these scenarios correctly, please\r\ncontact Avalara to upgrade to AvaTax!",
			"type": "object",
			"properties": {
				"totalRate": {
					"format": "double",
					"description": "The total sales tax rate for general tangible personal property sold at a retail point of presence\r\nin this jurisdiction on this date.",
					"type": "number",
					"example": 0.0625
				},
				"rates": {
					"description": "The list of individual rate elements for general tangible personal property sold at a retail\r\npoint of presence in this jurisdiction on this date.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/RateModel"
					},
					"example": [
						{
							"rate": 0.0625,
							"name": "CALIFORNIA",
							"type": "State"
						}
					]
				}
			},
			"example": {
				"totalRate": 0.0625,
				"rates": [
					{
						"rate": 0.0625,
						"name": "CALIFORNIA",
						"type": "State"
					}
				]
			}
		},
		"RateModel": {
			"description": "Indicates one element of a sales tax rate.",
			"type": "object",
			"properties": {
				"rate": {
					"format": "double",
					"description": "The sales tax rate for general tangible personal property in this jurisdiction.",
					"type": "number",
					"example": 0.0625
				},
				"name": {
					"description": "A readable name of the tax or taxing jurisdiction related to this tax rate.",
					"type": "string",
					"example": "CALIFORNIA"
				},
				"type": {
					"description": "The type of jurisdiction associated with this tax rate.",
					"enum": ["Country", "State", "County", "City", "Special"],
					"type": "string",
					"example": "State",
					"x-enum-metadata": {
						"name": "JurisdictionType",
						"values": [
							{
								"name": "Country",
								"value": 0
							},
							{
								"name": "State",
								"value": 1
							},
							{
								"name": "County",
								"value": 2
							},
							{
								"name": "City",
								"value": 3
							},
							{
								"name": "Special",
								"value": 4
							}
						]
					}
				}
			},
			"example": {
				"rate": 0.0625,
				"name": "CALIFORNIA",
				"type": "State"
			}
		},
		"FetchResult[TaxRuleModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxRuleModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"AdjustTransactionModel": {
			"description": "Replace an existing transaction recorded in AvaTax with a new one.",
			"required": ["adjustmentReason", "newTransaction"],
			"type": "object",
			"properties": {
				"adjustmentReason": {
					"description": "A reason code indicating why this adjustment was made",
					"enum": [
						"NotAdjusted",
						"SourcingIssue",
						"ReconciledWithGeneralLedger",
						"ExemptCertApplied",
						"PriceAdjusted",
						"ProductReturned",
						"ProductExchanged",
						"BadDebt",
						"Other",
						"Offline"
					],
					"type": "string",
					"example": "PriceAdjusted",
					"x-enum-metadata": {
						"name": "AdjustmentReason",
						"values": [
							{
								"name": "NotAdjusted",
								"value": 0
							},
							{
								"name": "SourcingIssue",
								"value": 1
							},
							{
								"name": "ReconciledWithGeneralLedger",
								"value": 2
							},
							{
								"name": "ExemptCertApplied",
								"value": 3
							},
							{
								"name": "PriceAdjusted",
								"value": 4
							},
							{
								"name": "ProductReturned",
								"value": 5
							},
							{
								"name": "ProductExchanged",
								"value": 6
							},
							{
								"name": "BadDebt",
								"value": 7
							},
							{
								"name": "Other",
								"value": 8
							},
							{
								"name": "Offline",
								"value": 9
							}
						]
					}
				},
				"adjustmentDescription": {
					"description": "If the AdjustmentReason is \"Other\", specify the reason here.\r\n            \r\nThis is required when the AdjustmentReason is 8 (Other).",
					"type": "string",
					"example": "Price drop before shipping"
				},
				"newTransaction": {
					"$ref": "#/definitions/CreateTransactionModel",
					"description": "Replace the current transaction with tax data calculated for this new transaction",
					"example": {
						"lines": [
							{
								"number": "1",
								"quantity": 1.0,
								"amount": 100.0,
								"taxCode": "PS081282",
								"itemCode": "Y0001",
								"description": "Yarn"
							}
						],
						"type": "SalesInvoice",
						"companyCode": "DEFAULT",
						"date": "2020-07-30",
						"customerCode": "ABC",
						"purchaseOrderNo": "2020-07-30-001",
						"addresses": {
							"singleLocation": {
								"line1": "2000 Main Street",
								"city": "Irvine",
								"region": "CA",
								"country": "US",
								"postalCode": "92614"
							}
						},
						"commit": true,
						"currencyCode": "USD",
						"description": "Yarn"
					}
				}
			},
			"example": {
				"adjustmentReason": "PriceAdjusted",
				"adjustmentDescription": "Price drop before shipping",
				"newTransaction": {
					"lines": [
						{
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					],
					"type": "SalesInvoice",
					"companyCode": "DEFAULT",
					"date": "2020-07-30",
					"customerCode": "ABC",
					"purchaseOrderNo": "2020-07-30-001",
					"addresses": {
						"singleLocation": {
							"line1": "2000 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92614"
						}
					},
					"commit": true,
					"currencyCode": "USD",
					"description": "Yarn"
				}
			}
		},
		"SettleTransactionModel": {
			"description": "Settle this transaction with your ledger by executing one or many actions against that transaction.\r\n            \r\nYou may use this endpoint to verify the transaction, change the transaction's code, and commit the transaction for reporting purposes.\r\nThis endpoint may be used to execute any or all of these actions at once.",
			"type": "object",
			"properties": {
				"verify": {
					"$ref": "#/definitions/VerifyTransactionModel",
					"description": "To verify this transaction, you may provide information in this field.\r\n            \r\nIf you leave this field null, the transaction will not be verified.",
					"example": {
						"verifyTransactionDate": "2020-07-30T00:00:00+00:00",
						"verifyTotalAmount": 100.0,
						"verifyTotalTax": 6.25
					}
				},
				"changeCode": {
					"$ref": "#/definitions/ChangeTransactionCodeModel",
					"description": "To change the code for this transaction, you may provide information in this field.\r\n            \r\nIf you leave this field null, the transaction's code will not be changed.",
					"example": {
						"newCode": "2741a8a9-d4bb-4984-a78b-195e382e33d6"
					}
				},
				"commit": {
					"$ref": "#/definitions/CommitTransactionModel",
					"description": "To commit this transaction so that it can be reported on a tax filing, you may provide information in this field.\r\n            \r\nIf you leave this field null, the transaction's commit status will not be changed.\r\n            \r\nIf you use Avalara's Managed Returns Service, committing a transaction will allow that transaction to be filed.",
					"example": {
						"commit": true
					}
				}
			},
			"example": {
				"verify": {
					"verifyTransactionDate": "2020-07-30T00:00:00+00:00",
					"verifyTotalAmount": 100.0,
					"verifyTotalTax": 6.25
				},
				"changeCode": {
					"newCode": "2741a8a9-d4bb-4984-a78b-195e382e33d6"
				},
				"commit": {
					"commit": true
				}
			}
		},
		"VerifyTransactionModel": {
			"description": "Verify this transaction by matching it to values in your accounting system.\r\n            \r\nYou may specify one or more of the following fields to verify: `date`, `totalAmount`, or `totalTax`.\r\nThis call will report an error if there is any difference between the data stored in AvaTax and\r\nthe data stored in your accounting system.",
			"type": "object",
			"properties": {
				"verifyTransactionDate": {
					"format": "date-time",
					"description": "Set this value if you wish to verify a match between `verifyTransactionDate` and\r\nthe `documentDate` value on the transaction recorded in AvaTax.\r\n            \r\nIf you leave this field empty, we will skip verification for this field.",
					"type": "string",
					"example": "2020-07-30T00:00:00+00:00"
				},
				"verifyTotalAmount": {
					"format": "double",
					"description": "Set this value if you wish to verify a match between `verifyTotalAmount` and\r\nthe `totalAmount` value on the transaction recorded in AvaTax.\r\n            \r\nIf you leave this field empty, we will skip verification for this field.",
					"type": "number",
					"example": 100.0
				},
				"verifyTotalTax": {
					"format": "double",
					"description": "Set this value if you wish to verify a match between `verifyTotalTax` and\r\nthe `totalTax` value on the transaction recorded in AvaTax.\r\n            \r\nIf you leave this field empty, we will skip verification for this field.",
					"type": "number",
					"example": 6.25
				}
			},
			"example": {
				"verifyTransactionDate": "2020-07-30T00:00:00+00:00",
				"verifyTotalAmount": 100.0,
				"verifyTotalTax": 6.25
			}
		},
		"ChangeTransactionCodeModel": {
			"description": "Settle this transaction with your ledger by verifying its amounts.\r\nIf the transaction is not yet committed, you may specify the \"commit\" value to commit it to the ledger and allow it to be reported.\r\nYou may also optionally change the transaction's code by specifying the \"newTransactionCode\" value.",
			"required": ["newCode"],
			"type": "object",
			"properties": {
				"newCode": {
					"description": "To change the transaction code for this transaction, specify the new transaction code here.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "64b611b9-8b66-4100-9e45-36db83e30645"
				}
			},
			"example": {
				"newCode": "64b611b9-8b66-4100-9e45-36db83e30645"
			}
		},
		"CommitTransactionModel": {
			"description": "Commit this transaction as permanent so that it can be reported on a tax filing.",
			"required": ["commit"],
			"type": "object",
			"properties": {
				"commit": {
					"description": "Set this value to be `true` to commit this transaction.\r\n            \r\nCommitting a transaction allows it to be reported on a tax filing.  Uncommitted transactions will not be reported.",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"commit": true
			}
		},
		"LockTransactionModel": {
			"description": "Commit this transaction as permanent",
			"required": ["isLocked"],
			"type": "object",
			"properties": {
				"isLocked": {
					"description": "Set this value to be true to commit this transaction.\r\nCommitting a transaction allows it to be reported on a tax return.  Uncommitted transactions will not be reported.",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"isLocked": true
			}
		},
		"BulkLockTransactionModel": {
			"description": "Bulk lock documents model",
			"required": ["documentIds", "isLocked"],
			"type": "object",
			"properties": {
				"documentIds": {
					"description": "List of documents to lock",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					},
					"example": [1, 2, 3, 4, 5]
				},
				"isLocked": {
					"description": "The lock status to set for the documents designated in this API",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"documentIds": [1, 2, 3, 4, 5],
				"isLocked": true
			}
		},
		"BulkLockTransactionResult": {
			"description": "Returns information about transactions that were locked",
			"type": "object",
			"properties": {
				"numberOfRecords": {
					"format": "int32",
					"description": "Number of records that have been modified",
					"type": "integer"
				}
			},
			"example": {
				"numberOfRecords": 42
			}
		},
		"CreateOrAdjustTransactionModel": {
			"description": "Create or adjust transaction model",
			"required": ["createTransactionModel"],
			"type": "object",
			"properties": {
				"adjustmentReason": {
					"description": "A reason code indicating why this adjustment was made",
					"enum": [
						"NotAdjusted",
						"SourcingIssue",
						"ReconciledWithGeneralLedger",
						"ExemptCertApplied",
						"PriceAdjusted",
						"ProductReturned",
						"ProductExchanged",
						"BadDebt",
						"Other",
						"Offline"
					],
					"type": "string",
					"example": "Other",
					"x-enum-metadata": {
						"name": "AdjustmentReason",
						"values": [
							{
								"name": "NotAdjusted",
								"value": 0
							},
							{
								"name": "SourcingIssue",
								"value": 1
							},
							{
								"name": "ReconciledWithGeneralLedger",
								"value": 2
							},
							{
								"name": "ExemptCertApplied",
								"value": 3
							},
							{
								"name": "PriceAdjusted",
								"value": 4
							},
							{
								"name": "ProductReturned",
								"value": 5
							},
							{
								"name": "ProductExchanged",
								"value": 6
							},
							{
								"name": "BadDebt",
								"value": 7
							},
							{
								"name": "Other",
								"value": 8
							},
							{
								"name": "Offline",
								"value": 9
							}
						]
					}
				},
				"adjustmentDescription": {
					"description": "If the AdjustmentReason is \"Other\", specify the reason here.\r\n            \r\nThis is required when the AdjustmentReason is 8 (Other).",
					"type": "string",
					"example": "Test Description"
				},
				"createTransactionModel": {
					"$ref": "#/definitions/CreateTransactionModel",
					"description": "The create transaction model to be created or updated.\r\n            \r\nIf the transaction does not exist, create transaction.\r\nIf the transaction exists, adjust the existing transaction.",
					"example": {
						"lines": [
							{
								"number": "1",
								"quantity": 1.0,
								"amount": 100.0,
								"taxCode": "PS081282",
								"itemCode": "Y0001",
								"description": "Yarn"
							}
						],
						"type": "SalesInvoice",
						"companyCode": "DEFAULT",
						"date": "2020-07-30",
						"customerCode": "ABC",
						"purchaseOrderNo": "2020-07-30-001",
						"addresses": {
							"singleLocation": {
								"line1": "2000 Main Street",
								"city": "Irvine",
								"region": "CA",
								"country": "US",
								"postalCode": "92614"
							}
						},
						"commit": true,
						"currencyCode": "USD",
						"description": "Yarn"
					}
				}
			},
			"example": {
				"adjustmentReason": "Other",
				"adjustmentDescription": "Test Description",
				"createTransactionModel": {
					"lines": [
						{
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					],
					"type": "SalesInvoice",
					"companyCode": "DEFAULT",
					"date": "2020-07-30",
					"customerCode": "ABC",
					"purchaseOrderNo": "2020-07-30-001",
					"addresses": {
						"singleLocation": {
							"line1": "2000 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92614"
						}
					},
					"commit": true,
					"currencyCode": "USD",
					"description": "Yarn"
				}
			}
		},
		"AuditTransactionModel": {
			"description": "Information about a previously created transaction",
			"type": "object",
			"properties": {
				"companyId": {
					"format": "int32",
					"description": "Unique ID number of the company that created this transaction",
					"type": "integer",
					"example": 0
				},
				"reconstructed": {
					"$ref": "#/definitions/ReconstructedApiRequestResponseModel",
					"description": "Reconstructed API request/response",
					"example": {
						"request": {
							"lines": [
								{
									"number": "1",
									"quantity": 1.0,
									"amount": 100.0,
									"taxCode": "PS081282",
									"itemCode": "Y0001",
									"description": "Yarn"
								}
							],
							"type": "SalesInvoice",
							"companyCode": "DEFAULT",
							"date": "2020-07-30",
							"customerCode": "ABC",
							"purchaseOrderNo": "2020-07-30-001",
							"addresses": {
								"singleLocation": {
									"line1": "2000 Main Street",
									"city": "Irvine",
									"region": "CA",
									"country": "US",
									"postalCode": "92614"
								}
							},
							"commit": true,
							"currencyCode": "USD",
							"description": "Yarn"
						}
					}
				},
				"serverTimestamp": {
					"format": "date-time",
					"description": "Server timestamp, in UTC, of the date/time when the original transaction was created",
					"type": "string",
					"example": "2020-07-30T22:11:32.9309793Z"
				},
				"serverDuration": {
					"format": "date-time",
					"description": "Length of time the original API call took",
					"type": "string"
				},
				"apiCallStatus": {
					"description": "api call status",
					"enum": ["OriginalApiCallAvailable", "ReconstructedApiCallAvailable", "Any"],
					"type": "string",
					"example": "ReconstructedApiCallAvailable",
					"x-enum-metadata": {
						"name": "ApiCallStatus",
						"values": [
							{
								"name": "OriginalApiCallAvailable",
								"value": 0
							},
							{
								"name": "ReconstructedApiCallAvailable",
								"value": 1
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"original": {
					"$ref": "#/definitions/OriginalApiRequestResponseModel",
					"description": "Original API request/response"
				}
			},
			"example": {
				"companyId": 0,
				"reconstructed": {
					"request": {
						"lines": [
							{
								"number": "1",
								"quantity": 1.0,
								"amount": 100.0,
								"taxCode": "PS081282",
								"itemCode": "Y0001",
								"description": "Yarn"
							}
						],
						"type": "SalesInvoice",
						"companyCode": "DEFAULT",
						"date": "2020-07-30",
						"customerCode": "ABC",
						"purchaseOrderNo": "2020-07-30-001",
						"addresses": {
							"singleLocation": {
								"line1": "2000 Main Street",
								"city": "Irvine",
								"region": "CA",
								"country": "US",
								"postalCode": "92614"
							}
						},
						"commit": true,
						"currencyCode": "USD",
						"description": "Yarn"
					}
				},
				"serverTimestamp": "2020-07-30T22:11:32.9309793Z",
				"apiCallStatus": "ReconstructedApiCallAvailable"
			}
		},
		"ReconstructedApiRequestResponseModel": {
			"description": "This model contains a reconstructed CreateTransaction request object that could potentially be used\r\nto recreate this transaction.\r\n            \r\nNote that the API changes over time, and this reconstructed model is likely different from the exact request\r\nthat was originally used to create this transaction.",
			"type": "object",
			"properties": {
				"request": {
					"$ref": "#/definitions/CreateTransactionModel",
					"description": "API request",
					"example": {
						"lines": [
							{
								"number": "1",
								"quantity": 1.0,
								"amount": 100.0,
								"taxCode": "PS081282",
								"itemCode": "Y0001",
								"description": "Yarn"
							}
						],
						"type": "SalesInvoice",
						"companyCode": "DEFAULT",
						"date": "2017-10-12",
						"customerCode": "ABC",
						"purchaseOrderNo": "2017 - 10 - 12 - 001",
						"addresses": {
							"singleLocation": {
								"line1": "2000 Main Street",
								"city": "Irvine",
								"region": "CA",
								"country": "US",
								"postalCode": "92614"
							}
						},
						"commit": true,
						"currencyCode": "USD",
						"description": "Yarn"
					}
				}
			},
			"example": {
				"request": {
					"lines": [
						{
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					],
					"type": "SalesInvoice",
					"companyCode": "DEFAULT",
					"date": "2017-10-12",
					"customerCode": "ABC",
					"purchaseOrderNo": "2017 - 10 - 12 - 001",
					"addresses": {
						"singleLocation": {
							"line1": "2000 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92614"
						}
					},
					"commit": true,
					"currencyCode": "USD",
					"description": "Yarn"
				}
			}
		},
		"AddTransactionLineModel": {
			"description": "Model to add specific lines to exising transaction",
			"required": ["companyCode", "transactionCode", "lines"],
			"type": "object",
			"properties": {
				"companyCode": {
					"description": "company code",
					"type": "string",
					"example": "DEFAULT"
				},
				"transactionCode": {
					"description": "document code for the transaction to add lines",
					"type": "string",
					"example": "1234"
				},
				"documentType": {
					"description": "document type",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesInvoice",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"lines": {
					"description": "List of lines to be added",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/LineItemModel"
					},
					"example": [
						{
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}
					]
				},
				"renumber": {
					"description": "Option to renumber lines after add. After renumber, the line number becomes: \"1\", \"2\", \"3\", ...",
					"type": "boolean",
					"example": false
				}
			},
			"example": {
				"companyCode": "DEFAULT",
				"transactionCode": "1234",
				"documentType": "SalesInvoice",
				"lines": [
					{
						"number": "1",
						"quantity": 1.0,
						"amount": 100.0,
						"taxCode": "PS081282",
						"itemCode": "Y0001",
						"description": "Yarn"
					}
				],
				"renumber": false
			}
		},
		"RemoveTransactionLineModel": {
			"description": "Model to specify lines to be removed",
			"required": ["companyCode", "transactionCode", "lines"],
			"type": "object",
			"properties": {
				"companyCode": {
					"description": "company code",
					"type": "string",
					"example": "DEFAULT"
				},
				"transactionCode": {
					"description": "document code for the transaction to add lines",
					"type": "string",
					"example": "1234"
				},
				"documentType": {
					"description": "document type",
					"enum": [
						"SalesOrder",
						"SalesInvoice",
						"PurchaseOrder",
						"PurchaseInvoice",
						"ReturnOrder",
						"ReturnInvoice",
						"InventoryTransferOrder",
						"InventoryTransferInvoice",
						"ReverseChargeOrder",
						"ReverseChargeInvoice",
						"Any"
					],
					"type": "string",
					"example": "SalesInvoice",
					"x-enum-metadata": {
						"name": "DocumentType",
						"values": [
							{
								"name": "SalesOrder",
								"value": 0
							},
							{
								"name": "SalesInvoice",
								"value": 1
							},
							{
								"name": "PurchaseOrder",
								"value": 2
							},
							{
								"name": "PurchaseInvoice",
								"value": 3
							},
							{
								"name": "ReturnOrder",
								"value": 4
							},
							{
								"name": "ReturnInvoice",
								"value": 5
							},
							{
								"name": "InventoryTransferOrder",
								"value": 6
							},
							{
								"name": "InventoryTransferInvoice",
								"value": 7
							},
							{
								"name": "ReverseChargeOrder",
								"value": 8
							},
							{
								"name": "ReverseChargeInvoice",
								"value": 9
							},
							{
								"name": "Any",
								"value": -1
							}
						]
					}
				},
				"lines": {
					"description": "List of lines to be added",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["1"]
				},
				"renumber": {
					"description": "ption to renumber lines after removal. After renumber, the line number becomes: \"1\", \"2\", \"3\", ...",
					"type": "boolean",
					"example": false
				}
			},
			"example": {
				"companyCode": "DEFAULT",
				"transactionCode": "1234",
				"documentType": "SalesInvoice",
				"lines": ["1"],
				"renumber": false
			}
		},
		"InspectLineResponseModel": {
			"description": "Response model used as output for InspectLine API.",
			"type": "object",
			"properties": {
				"determinationFactors": {
					"description": "A list of determination factors for a line that is being inspected through the InspectLine API.",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/DeterminationFactorModel"
					},
					"example": [
						{
							"code": "NoNexus",
							"description": "No tax was calculated because no nexus was declared in XYZ."
						}
					]
				}
			},
			"example": {
				"determinationFactors": [
					{
						"code": "NoNexus",
						"description": "No tax was calculated because no nexus was declared in XYZ."
					}
				]
			}
		},
		"DeterminationFactorModel": {
			"description": "This object represents a single determination factor for a line that is being inspected through the InspectLine API.",
			"type": "object",
			"properties": {
				"code": {
					"description": "Determination reason code.",
					"type": "string",
					"example": "NoNexus"
				},
				"description": {
					"description": "Determination reason description.",
					"type": "string",
					"example": "No tax was calculated because no nexus was declared in XYZ."
				}
			},
			"example": {
				"code": "NoNexus",
				"description": "No tax was calculated because no nexus was declared in XYZ."
			}
		},
		"FetchResult[UPCModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/UPCModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"FetchResult[UserModel]": {
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"uniqueItems": false,
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserModel"
					}
				},
				"@nextLink": {
					"type": "string"
				},
				"pageKey": {
					"type": "string"
				}
			}
		},
		"UserEntitlementModel": {
			"description": "User Entitlement Model",
			"type": "object",
			"properties": {
				"permissions": {
					"description": "List of API names and categories that this user is permitted to access",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["CompanyFetch", "CompanySave", "NexusFetch", "NexusSave"]
				},
				"accessLevel": {
					"description": "What access privileges does the current user have to see companies?",
					"enum": ["None", "SingleCompany", "SingleAccount", "AllCompanies", "FirmManagedAccounts"],
					"type": "string",
					"example": "SingleAccount",
					"x-enum-metadata": {
						"name": "CompanyAccessLevel",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "SingleCompany",
								"value": 1
							},
							{
								"name": "SingleAccount",
								"value": 2
							},
							{
								"name": "AllCompanies",
								"value": 3
							},
							{
								"name": "FirmManagedAccounts",
								"value": 4
							}
						]
					}
				},
				"companies": {
					"description": "The identities of all companies this user is permitted to access",
					"uniqueItems": false,
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					},
					"example": [123, 456, 789]
				}
			},
			"example": {
				"permissions": ["CompanyFetch", "CompanySave", "NexusFetch", "NexusSave"],
				"accessLevel": "SingleAccount",
				"companies": [123, 456, 789]
			}
		},
		"PingResultModel": {
			"description": "Ping Result Model",
			"type": "object",
			"properties": {
				"version": {
					"description": "Version number",
					"type": "string",
					"example": "1.0.0.0"
				},
				"authenticated": {
					"description": "Returns true if you provided authentication for this API call; false if you did not.",
					"type": "boolean",
					"example": true
				},
				"authenticationType": {
					"description": "Returns the type of authentication you provided, if authenticated",
					"enum": ["None", "UsernamePassword", "AccountIdLicenseKey", "OpenIdBearerToken"],
					"type": "string",
					"example": "UsernamePassword",
					"x-enum-metadata": {
						"name": "AuthenticationTypeId",
						"values": [
							{
								"name": "None",
								"value": 0
							},
							{
								"name": "UsernamePassword",
								"value": 1
							},
							{
								"name": "AccountIdLicenseKey",
								"value": 2
							},
							{
								"name": "OpenIdBearerToken",
								"value": 3
							}
						]
					}
				},
				"authenticatedUserName": {
					"description": "The username of the currently authenticated user, if any.",
					"type": "string",
					"example": "TestUser"
				},
				"authenticatedUserId": {
					"format": "int32",
					"description": "The ID number of the currently authenticated user, if any.",
					"type": "integer",
					"example": 98765
				},
				"authenticatedAccountId": {
					"format": "int32",
					"description": "The ID number of the currently authenticated user's account, if any.",
					"type": "integer",
					"example": 123456789
				},
				"authenticatedCompanyId": {
					"format": "int32",
					"description": "The ID number of the currently authenticated user's company, if any.",
					"type": "integer",
					"example": 123456789
				},
				"crmid": {
					"description": "The connected Salesforce account.",
					"type": "string",
					"example": "1111"
				}
			},
			"example": {
				"version": "1.0.0.0",
				"authenticated": true,
				"authenticationType": "UsernamePassword",
				"authenticatedUserName": "TestUser",
				"authenticatedUserId": 98765,
				"authenticatedAccountId": 123456789,
				"authenticatedCompanyId": 123456789,
				"crmid": "1111"
			}
		}
	},
	"securityDefinitions": {
		"OauthSecurity": {
			"flow": "implicit",
			"authorizationUrl": "https://ai-sbx.avlr.sh/connect/authorize?response_type=id_token token&scope=avatax_api avatax openid profile&nonce=f1077427-6848-4c96-afe7-217f88dc1313&",
			"type": "oauth2",
			"description": "A bearer token provided by the Avalara Identity server."
		},
		"UserSecurity": {
			"type": "basic",
			"description": "Basic authentication supports either Username/Password or AccountId/LicenseKey, using Base64 encoding."
		}
	},
	"x-group-by-tags": true,
	"x-auth-formula": "`Basic ${btoa(`<username>:<password>`)}`",
	"x-sample-auth-header": "Basic aHR0cHdhdGNoOmY=",
	"x-ApiType": "REST",
	"x-avalara-version": "20.7.2",
	"x-api-proxy": {
		"route": "https://e3zwcxla5k.execute-api.us-west-2.amazonaws.com/prod/",
		"key": {
			"name": "api-key",
			"location": "api-proxy-key/key"
		}
	}
}
